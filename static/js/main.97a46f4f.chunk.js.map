{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","containers/OutlayDetails/OutlayDetails.js","components/IndicatorsInsertForm/Constants.js","components/UI/Inputs/InputNum.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/TariffCard/TariffCard.js","components/UI/DialogSimple/DialogSimple.js","containers/Tariffs/Tariffs.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthAlert.js","store/actions/auth.js","store/actions/actionTypes.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","App.js","serviceWorker.js","store/history.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","button","color","grow","list","width","MenuAppBar","props","classes","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","title","aria-controls","aria-haspopup","component","NavLink","to","SwipeableDrawer","drawer","anchor","open","onClose","onOpen","console","log","disableBackdropTransition","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","this","isAuth","xs","Paper","children","Component","instance","axios","create","baseURL","outlay","indicatorsList","date","indicators","costNovogor","indicatorMonth","getMonth","TableContainer","style","marginTop","align","getFullYear","Table","TableHead","TableRow","TableCell","TableBody","row","index","scope","intake","boxShadow","label","fontSize","TabUI","React","value","setValue","Tabs","onChange","event","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","OutlayDetails","state","prevIndicators","tariffs","currentYear","Date","getUTCFullYear","error","getListOfIndicators","get","then","response","data","Object","keys","id","CurrentDate","today","Number","Electricity","Day","Night","ColdWater","Bathroom","Kittchen","HotWater","sort","a","b","getTime","setState","countOutlay","catch","getListOfTariffs","tariff","newIndicatorsList","i","newItem","length","countCostNovogor","coldWater","find","e","hotWater","disposalWater","waterTariff","dateStart","dateEnd","parse","cost","disposalTariff","toFixed","year","Loader","active","inline","filter","Outlay","textAlign","push","MONTHS_LIST","text","inputNum","alertMessage","errorMessage","classEnter","htmlFor","decimalScale","decimalSeparator","allowNegative","placeholder","changed","invalid","IndicatorsInsert","ElectricityDay","valid","ElectricityNight","ColdWaterKittchen","ColdWaterBathroom","HotWaterKittchen","HotWaterBathroom","monthYear","month","emailData","recipient","CONFIG","RECIPIENT","address","ADDRESS","modalOpen","addIndicatorHandler","type","updatedCount","target","updatedIndicators","modalHandlerClose","modalHandlerOpen","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","electricityDay","electricityNight","coldWaterKittchen","coldWaterBathroom","hotWaterKittchen","hotWaterBathroom","emailjs","send","SERVICE_ID","TEMPLATE_ID","USER_ID","status","sendIndicators","dateOfIndicators","toISOString","post","history","getCurrentMonth","getCurrentYear","currentYearList","setStateMonth","updatedMonth","updatedMonthYear","setStateYear","updatedYear","inputClasses","inputError","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","Button","autoFocus","Dropdown","selection","fluid","defaultValue","options","InputNum","join","disableElevation","withRouter","margin","cardPadding","paddingBottom","paddingTop","display","textField","textFieldMargin","marginRight","marginBottom","selectPadding","flexBasis","buttonClose","right","buttonEdit","buttonIconSuccess","buttonSuccess","backgorundColor","TariffCard","disabled","setDisabled","Card","disableRipple","disableFocusRipple","updateItemInTariffs","insertItemToTariffs","handleDeleteDialogOpen","CardContent","FormControl","InputLabel","Select","updateTariffInState","MenuItem","currencySymbol","minimumValue","maximumValue","utils","DateFnsUtils","format","KeyboardButtonProps","DialogSimple","handleClose","dialogTitle","DialogContentText","dialogContent","handleContinue","Tariffs","deleteDialogOpen","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","delete","oldData","newData","patch","removeTariffFromState","handleDeleteDialogClose","handleDeleteDialogContinue","addTariffToState","newTariffsList","unshift","removeId","newState","changeIndex","findIndex","tariffCards","ё","createStyles","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","Alert","AuthAlert","authSuccess","token","userId","idToken","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validation","validateFieldsUpdate","test","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","helperText","connect","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","authFail","actions","Logout","onLogout","App","onTryAutoSignup","routes","getItem","Boolean","window","location","hostname","match","createBrowserHistory","updateObject","oldObject","updatedProperties","initialState","authStart","action","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97a46f4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon/> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon/> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon/> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const [sectionTitle, setSectionTitle] = useState(\"Показания\");\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {sectionTitle}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <SwipeableDrawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n          onOpen={() => console.log(\"Список открыт\")}\r\n          disableBackdropTransition={true}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </SwipeableDrawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./Layout.css\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12}>\r\n            <AppBar />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst outlay = (props) => {\r\n  const { date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"30px\" }}>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport \"./OutlayDetails.css\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass OutlayDetails extends Component {\r\n  // TODO Хранить в бд первоначальные результаты\r\n  state = {\r\n    indicatorsList: [],\r\n    prevIndicators: [\r\n      {\r\n        name: \"Эл-я день:\",\r\n        intake: 18572,\r\n      },\r\n      {\r\n        name: \"Эл-я ночь:\",\r\n        intake: 6699,\r\n      },\r\n      {\r\n        name: \"Холодная вода:\",\r\n        intake: 402,\r\n      },\r\n      {\r\n        name: \"Горячая вода:\",\r\n        intake: 420,\r\n      },\r\n      {\r\n        name: \"Водоотведение:\",\r\n        intake: 822,\r\n      },\r\n    ],\r\n    tariffs: [],\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfIndicators();\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfIndicators = () => {\r\n    axios\r\n      .get(`/indicators.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let indicatorsList = Object.keys(response.data).map((key) => {\r\n          return {\r\n            id: key,\r\n            date: new Date(response.data[key].CurrentDate.today),\r\n            indicators: [\r\n              {\r\n                id: \"day_electricity\",\r\n                name: \"Эл-я день:\",\r\n                intake: Number(response.data[key].Electricity.Day),\r\n              },\r\n              {\r\n                id: \"night_electricity\",\r\n                name: \"Эл-я ночь:\",\r\n                intake: Number(response.data[key].Electricity.Night),\r\n              },\r\n              {\r\n                id: \"cold_water\",\r\n                name: \"Холодная вода:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"hot_water\",\r\n                name: \"Горячая вода:\",\r\n                intake:\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"disposal_water\",\r\n                name: \"Водоотведение:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen) +\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n            ],\r\n          };\r\n        });\r\n        indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n        this.setState({ indicatorsList: this.countOutlay(indicatorsList) });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  countOutlay = (indicatorsList) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake - this.state.prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          Date.parse(dateStart) <= date &&\r\n          Date.parse(dateEnd) >= date\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду\", e);\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"disposal_water\" &&\r\n          Date.parse(dateStart) <= date &&\r\n          Date.parse(dateEnd) >= date\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение\", e);\r\n    }\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  // TODO: Добавить возможность редактирования и удаления записей\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList.length === 0 && this.state.error == null) {\r\n      indicatorsList = (\r\n        <Loader active inline=\"centered\">\r\n          Загрузка\r\n        </Loader>\r\n      );\r\n    } else if (this.state.indicatorsList.length > 0) {\r\n      indicatorsList = this.state.indicatorsList\r\n        .filter((item) => {\r\n          return item.date.getUTCFullYear() === this.state.currentYear;\r\n        })\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n            />\r\n          );\r\n        });\r\n      } else indicatorsList = (<p style={{ textAlign: \"center\" }}>{`Нет данных на ${this.state.currentYear} год`}</p>);\r\n        \r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div className=\"outlayContainer\">\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">\r\n          {indicatorsList}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutlayDetails;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst inputNum = (props) => {\r\n  const alertMessage = (<div className=\"ui pointing red basic label\">{props.errorMessage}</div>);\r\n  return (\r\n    <div className={props.classEnter}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <NumberFormat\r\n        decimalScale=\"2\"\r\n        decimalSeparator=\".\"\r\n        allowNegative={false}\r\n        id={props.id}\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.changed}\r\n        value={props.value}\r\n      />\r\n      {props.invalid ? null : alertMessage}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default inputNum;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\nimport CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport InputNum from \"../../components/UI/Inputs/InputNum\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonUI from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      ElectricityDay: { value: \"\", valid: true },\r\n      ElectricityNight: { value: \"\", valid: true },\r\n      ColdWaterKittchen: { value: \"\", valid: true },\r\n      ColdWaterBathroom: { value: \"\", valid: true },\r\n      HotWaterKittchen: { value: \"\", valid: true },\r\n      HotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    emailData: {\r\n      recipient: CONFIG.RECIPIENT,\r\n      address: CONFIG.ADDRESS,\r\n    },\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, event) => {\r\n    //Обновляем показатель\r\n    const updatedCount = event.target.value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\") {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.ElectricityDay.valid &&\r\n      this.state.indicators.ElectricityNight.valid &&\r\n      this.state.indicators.ColdWaterKittchen.valid &&\r\n      this.state.indicators.ColdWaterBathroom.valid &&\r\n      this.state.indicators.HotWaterKittchen.valid &&\r\n      this.state.indicators.HotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.state.emailData.recipient,\r\n      address: this.state.emailData.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.ElectricityDay.value,\r\n      electricityNight: this.state.indicators.ElectricityNight.value,\r\n      coldWaterKittchen: this.state.indicators.ColdWaterKittchen.value,\r\n      coldWaterBathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      hotWaterKittchen: this.state.indicators.HotWaterKittchen.value,\r\n      hotWaterBathroom: this.state.indicators.HotWaterBathroom.value,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      this.state.monthYear.year,\r\n      this.state.monthYear.month,\r\n      1,\r\n      5,\r\n      0,\r\n      0,\r\n      0\r\n    ).toISOString();\r\n\r\n    const indicators = {\r\n      Electricity: {\r\n        Day: this.state.indicators.ElectricityDay.value,\r\n        Night: this.state.indicators.ElectricityNight.value,\r\n      },\r\n      ColdWater: {\r\n        Kittchen: this.state.indicators.ColdWaterKittchen.value,\r\n        Bathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      },\r\n      HotWater: {\r\n        Kittchen: this.state.indicators.HotWaterKittchen.value,\r\n        Bathroom: this.state.indicators.HotWaterBathroom.value,\r\n      },\r\n      CurrentDate: { today: dateOfIndicators, year: this.state.monthYear.year },\r\n    };\r\n    axios\r\n      .post(\"/indicators.json\", indicators)\r\n      .then((response) => {\r\n        this.setState({ modalOpen: false });\r\n        this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, { value }) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, { value }) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n    const inputClasses = [\"field\"];\r\n    const inputError = [\"field\", \"error\"];\r\n    return (\r\n      <div className=\"ui center ui_center\">\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Проверьте показатели за{\" \"}\r\n              {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n              {this.state.monthYear.year} г.\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Электроэнергия\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    День:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityDay.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Ночь:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityNight.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Кухня\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Ванная\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <ButtonUI onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </ButtonUI>\r\n            <ButtonUI onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </ButtonUI>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <form className=\"ui form\">\r\n          <div className=\"ui one column centered grid\">\r\n            <div className=\"column\">\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                Подать показания\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <Typography variant=\"h5\">Месяц и год</Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <Dropdown\r\n                  placeholder=\"Выберите месяц\"\r\n                  selection\r\n                  fluid\r\n                  defaultValue={MONTHS_LIST[this.getCurrentMonth()].value}\r\n                  options={MONTHS_LIST}\r\n                  onChange={this.setStateMonth}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <div className=\"column\">\r\n                  <Dropdown\r\n                    placeholder=\"Выберите месяц\"\r\n                    selection\r\n                    fluid\r\n                    defaultValue={this.getCurrentYear()[2].value}\r\n                    options={this.getCurrentYear()}\r\n                    onChange={this.setStateYear}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Электроэнергия</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityDay.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityDay\"}\r\n                  label={\"День\"}\r\n                  placeholder={\"Введите дневное потребление\"}\r\n                  name={\"ElectricityDay\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityDay\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityDay.value}\r\n                  invalid={this.state.indicators.ElectricityDay.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityNight.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityNight\"}\r\n                  label={\"Ночь\"}\r\n                  placeholder={\"Введите ночное потребление\"}\r\n                  name={\"ElectricityNight\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityNight\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityNight.value}\r\n                  invalid={this.state.indicators.ElectricityNight.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Кухня</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterKittchen\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterKittchen.value}\r\n                  invalid={this.state.indicators.ColdWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterKittchen\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterKittchen.value}\r\n                  invalid={this.state.indicators.HotWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Ванная</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterBathroom\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterBathroom.value}\r\n                  invalid={this.state.indicators.ColdWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterBathroom\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterBathroom.value}\r\n                  invalid={this.state.indicators.HotWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui one column centered grid\">\r\n            <div style={{ textAlign: \"center\" }} className=\"column\">\r\n              <ButtonUI\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={this.modalHandlerOpen}\r\n              >\r\n                Отправить\r\n              </ButtonUI>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IndicatorsInsert);\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    flexGrow: 1,\r\n  },\r\n  textFieldMargin: {\r\n    marginRight: \"15px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  selectPadding: {\r\n    display: 'flex',\r\n    flexBasis: \"13rem\"\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    right: \"30px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <FormControl className={classes.textFieldMargin + \" \" + classes.textField + \" \" + classes.selectPadding}>\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>Электро-ия. ночь</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n              />\r\n\r\n              <KeyboardDatePicker\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd}\r\n                className={classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          Удалить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport \"./Tariffs.css\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      cost: 0,\r\n      dateEnd: null,\r\n      dateStart: null,\r\n      name: \"\",\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newState = [...this.state.tariffs];\r\n    let changeIndex = newState.findIndex((item) => item.id === id);\r\n    newState[changeIndex][key] = value;\r\n\r\n    this.setState({ tariffs: newState });\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div className=\"tariffContainer\">\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Button\r\n          onClick={() => this.addTariffToState(tariffCards)}\r\n          color=\"primary\"\r\n          disabled={this.state.addButtonDisabled}\r\n        >\r\n          Добавить тариф\r\n        </Button>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tariffs;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime())/1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/UI/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/UI/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/UI/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/UI/AuthComponents/AuthAlert\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\"\r\n    },\r\n    willSend: true\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.rememberMe\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"authHeader\">Вход в аккаунт</h1>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) =>\r\n      dispatch(actions.auth(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  if (action.error === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport history from \"./store/history\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter history={history} basename={\"/\"}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}