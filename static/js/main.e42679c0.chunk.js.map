{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/IndicatorsInsertForm/Constants.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","components/UI/CardBody/CardBody.js","components/Helpers/FormHelper.js","containers/UsersProfile/UsersProfile.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthAlert.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","App.js","serviceWorker.js","store/history.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","width","button","color","grow","list","MenuAppBar","props","classes","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","title","aria-controls","aria-haspopup","component","NavLink","to","Drawer","drawer","anchor","open","onClose","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","children","Component","instance","axios","create","baseURL","MONTHS_LIST","text","value","IndicatorsInsert","state","indicators","electricityDay","valid","electricityNight","coldWaterKitchen","coldWaterBathroom","hotWaterKitchen","hotWaterBathroom","monthYear","month","Date","getMonth","year","getFullYear","emailData","recipient","CONFIG","RECIPIENT","address","ADDRESS","modalOpen","addIndicatorHandler","type","updatedCount","updatedIndicators","setState","modalHandlerClose","modalHandlerOpen","event","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","emailjs","send","SERVICE_ID","TEMPLATE_ID","USER_ID","then","response","console","log","status","error","sendIndicators","dateOfIndicators","toISOString","electricity","day","night","coldWater","kitchen","bathroom","hotWater","currentDate","today","userId","localStorage","getItem","token","post","history","push","catch","getCurrentMonth","getCurrentYear","currentYear","currentYearList","i","setStateMonth","e","updatedMonth","updatedMonthYear","setStateYear","updatedYear","errorMessage","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","id","align","DialogContent","dividers","DialogActions","Button","autoFocus","marginBottom","Card","CardContent","spacing","FormControl","InputLabel","Select","onChange","target","MenuItem","label","currencySymbol","minimumValue","helperText","textAlign","marginTop","disableElevation","withRouter","display","flexDirection","paragraph","Loader","CircularProgress","buttonClose","right","top","Outlay","indicatorsList","date","costNovogor","indicatorMonth","TableContainer","handleDeleteDialogOpen","disableRipple","disableFocusRipple","Table","TableHead","TableRow","TableCell","TableBody","row","index","scope","intake","outlay","boxShadow","fontSize","TabUI","React","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","dialogTitle","DialogContentText","dialogContent","handleContinue","OutlayDetails","prevIndicators","tariffs","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","getDataFromFirebase","url_1","url_3","promise1","get","promise2","promise3","Promise","all","values","getUserDetails","data","getListOfTariffs","getListOfIndicators","countOutlay","length","prevIndicatorsData","Object","keys","tariff","sort","a","b","getTime","deleteItemFromIndicators","delete","enqueueSnackbar","preventDuplicate","handleDeleteDialogClose","handleDeleteDialogContinue","removeIndicatorFromState","removeId","newIndicatorsList","filter","newItem","countCostNovogor","indicatorsDate","getDate","find","disposalWater","waterTariff","dateStart","dateEnd","cost","disposalTariff","toFixed","ё","withSnackbar","margin","cardPadding","paddingBottom","paddingTop","textField","textFieldMargin","marginRight","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonSuccess","backgorundColor","TariffCard","disabled","setDisabled","updateItemInTariffs","insertItemToTariffs","updateTariffInState","maximumValue","utils","DateFnsUtils","format","KeyboardButtonProps","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newState","changeIndex","findIndex","tariffCards","alignContent","wrap","field","buttonPosition","UserCard","userDetails","firstName","lastName","userEmail","accountantEmail","prevIndicatorsDate","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","TextField","fullWidth","updateUserDataInState","touched","DatePicker","clearable","isDisabled","updatePrevIndicatorsInState","_","checkFormValidity","updateUserDetails","padding","CardBody","checkFieldValidity","rules","validation","isValid","required","trim","isEmail","test","isDate","isNumber","isPassord","UsersProfile","userDetailsValid","prevIndicatorsValid","dataFromDB","newUserDetails","userFormData","formValid","newPrevIndicators","authSuccess","idToken","authFail","authLogout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","createStyles","input","WebkitBoxShadow","AuthInput","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","Alert","AuthAlert","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validateFieldsUpdate","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","Link","connect","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","actions","Logout","onLogout","StepOne","autoComplete","StepTwo","stepLabel","wordBreak","backButton","instructions","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","registration","RegistrationForm","onRegistration","formId","stateData","App","onTryAutoSignup","routes","Boolean","window","location","hostname","match","createBrowserHistory","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","message","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"0mBAsBMA,EAAgB,CACpB,CAAEC,KAAM,yDAAaC,KAAM,mBAAoBC,KAAM,kBAAC,IAAD,OACrD,CAAEF,KAAM,6CAAWC,KAAM,UAAWC,KAAM,kBAAC,IAAD,OAC1C,CAAEF,KAAM,uCAAUC,KAAM,WAAYC,KAAM,kBAAC,IAAD,OAC1C,CAAEF,KAAM,6CAAWC,KAAM,WAAYC,KAAM,kBAAC,IAAD,QAGvCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,MAAO,QAETC,OAAQ,CACN,UAAW,CACTC,MAAO,UAGXC,KAAM,CACJJ,SAAU,GAEZK,KAAM,CACJJ,MAAO,SAmEIK,EA/DI,SAACC,GAClB,IAAMC,EAAUZ,IADY,EAEYa,mBAAS,0DAFrB,mBAErBC,EAFqB,KAEPC,EAFO,OAGQF,oBAAS,GAHjB,mBAGrBG,EAHqB,KAGTC,EAHS,KAK5B,OACE,yBAAKC,UAAWN,EAAQT,MACtB,kBAACgB,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWN,EAAQY,WACnBjB,MAAM,UACNkB,aAAW,OACXC,QAAS,kBAAMT,GAAc,KAE7B,kBAAC,IAAD,OAEF,kBAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWN,EAAQiB,OACzCf,GAEH,yBAAKI,UAAWN,EAAQJ,OAExB,kBAACc,EAAA,EAAD,CACEG,aAAW,0BACXK,gBAAc,cACdC,gBAAc,OACdxB,MAAM,UACNyB,UAAWC,IACXC,GAAG,WAEH,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CACEjB,UAAWN,EAAQwB,OACnBC,OAAO,OACPC,KAAMtB,EACNuB,QAAS,kBAAMtB,GAAc,KAE7B,kBAACuB,EAAA,EAAD,CAAMtB,UAAWN,EAAQH,MACtBb,EAAc6C,KAAI,SAACC,GAAD,OACjB,kBAACC,EAAA,EAAD,CACErC,QAAM,EACNsC,IAAKF,EAAK7C,KACVmC,UAAWC,IACXC,GAAIQ,EAAK5C,KACT4B,QAAS,WACPT,GAAc,GACdF,EAAgB2B,EAAK7C,QAGvB,kBAACgD,EAAA,EAAD,KAAeH,EAAK3C,MACpB,kBAAC+C,EAAA,EAAD,CAAcC,QAASL,EAAK7C,gBCtE7BmD,E,uKApBX,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UAEVC,KAAK3C,MAAM4C,QACV,kBAACN,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAIC,MAAO,CAACpD,MAAO,SAChC,kBAAC,EAAD,OAGJ,kBAAC4C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACE,EAAA,EAAD,CAAOxC,UAAU,SAASoC,KAAK3C,MAAMgD,gB,GAf1BC,a,gBCFNC,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,mD,0BCHEC,EAAc,CACzB,CACErB,IAAK,IACLsB,KAAM,uCACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,6CACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,2BACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,uCACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,qBACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,2BACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,2BACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,uCACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,mDACNC,MAAO,GAET,CACEvB,IAAK,IACLsB,KAAM,6CACNC,MAAO,GAET,CACEvB,IAAK,KACLsB,KAAM,uCACNC,MAAO,IAET,CACEvB,IAAK,KACLsB,KAAM,6CACNC,MAAO,K,sIChCLC,G,4MACJC,MAAQ,CACNC,WAAY,CACVC,eAAgB,CAAEJ,MAAO,GAAIK,OAAO,GACpCC,iBAAkB,CAAEN,MAAO,GAAIK,OAAO,GACtCE,iBAAkB,CAAEP,MAAO,GAAIK,OAAO,GACtCG,kBAAmB,CAAER,MAAO,GAAIK,OAAO,GACvCI,gBAAiB,CAAET,MAAO,GAAIK,OAAO,GACrCK,iBAAkB,CAAEV,MAAO,GAAIK,OAAO,IAExCM,UAAW,CACTC,OAAO,IAAIC,MAAOC,WAClBC,MAAM,IAAIF,MAAOG,eAEnBC,UAAW,CACTC,UAAWC,EAAOC,UAClBC,QAASF,EAAOG,SAElBC,WAAW,G,EAGbC,oBAAsB,SAACC,EAAMzB,GAE3B,IAAM0B,EAAe1B,EACf2B,EAAiB,eAAQ,EAAKzB,MAAMC,YAC1CwB,EAAkBF,GAAMzB,MAAQ0B,EAChCC,EAAkBF,GAAMpB,OAAQ,EAGhC,EAAKuB,SAAS,CAAEzB,WAAYwB,K,EAG9BE,kBAAoB,WAClB,EAAKD,SAAS,CAAEL,WAAW,K,EAG7BO,iBAAmB,SAACC,GAGlB,IAAK,IAAIC,KAFTD,EAAME,iBAEU,EAAK/B,MAAMC,WAAY,CACrC,IAAMA,EAAU,eAAQ,EAAKD,MAAMC,YAEnC,GAA8B,KAA1BA,EAAW6B,GAAKhC,OAA0C,IAA1BG,EAAW6B,GAAKhC,MAAa,CAC/D,IAAM2B,EAAiB,eAAQ,EAAKzB,MAAMC,YAC1CwB,EAAkBK,GAAK3B,OAAQ,EAC/B,EAAKuB,SAAS,CAAEzB,WAAYwB,IAC5B,EAAKC,SAAS,CAAEM,iBAAiB,KAKnC,EAAKhC,MAAMC,WAAWC,eAAeC,OACrC,EAAKH,MAAMC,WAAWG,iBAAiBD,OACvC,EAAKH,MAAMC,WAAWI,iBAAiBF,OACvC,EAAKH,MAAMC,WAAWK,kBAAkBH,OACxC,EAAKH,MAAMC,WAAWM,gBAAgBJ,OACtC,EAAKH,MAAMC,WAAWO,iBAAiBL,OAEvC,EAAKuB,SAAS,CAAEL,WAAW,K,EAG/BY,iBAAmB,WACjB,IAAIC,EAAiB,CACnBlB,UAAW,EAAKhB,MAAMe,UAAUC,UAChCG,QAAS,EAAKnB,MAAMe,UAAUI,QAC9BT,MAAOd,EAAY,EAAKI,MAAMS,UAAUC,OAAOb,KAC/CgB,KAAM,EAAKb,MAAMS,UAAUI,KAC3BX,eAAgB,EAAKF,MAAMC,WAAWC,eAAeJ,MACrDM,iBAAkB,EAAKJ,MAAMC,WAAWG,iBAAiBN,MACzDO,iBAAkB,EAAKL,MAAMC,WAAWI,iBAAiBP,MACzDQ,kBAAmB,EAAKN,MAAMC,WAAWK,kBAAkBR,MAC3DS,gBAAiB,EAAKP,MAAMC,WAAWM,gBAAgBT,MACvDU,iBAAkB,EAAKR,MAAMC,WAAWO,iBAAiBV,OAG3DqC,IACGC,KACCnB,EAAOoB,WACPpB,EAAOqB,YACPJ,EACAjB,EAAOsB,SAERC,MACC,SAACC,GACCC,QAAQC,IAAI,WAAYF,EAASG,OAAQH,EAAS5C,SAEpD,SAACgD,GACCH,QAAQC,IAAI,YAAaE,O,EAKjCC,eAAiB,WACf,IAAIC,EAAmB,IAAIpC,KACzB,EAAKX,MAAMS,UAAUI,KACrB,EAAKb,MAAMS,UAAUC,MACrB,EACA,EACA,EACA,EACA,GACAsC,cAEI/C,EAAa,CACjBgD,YAAa,CACXC,IAAK,EAAKlD,MAAMC,WAAWC,eAAeJ,MAC1CqD,MAAO,EAAKnD,MAAMC,WAAWG,iBAAiBN,OAEhDsD,UAAW,CACTC,QAAS,EAAKrD,MAAMC,WAAWI,iBAAiBP,MAChDwD,SAAU,EAAKtD,MAAMC,WAAWK,kBAAkBR,OAEpDyD,SAAU,CACRF,QAAS,EAAKrD,MAAMC,WAAWM,gBAAgBT,MAC/CwD,SAAU,EAAKtD,MAAMC,WAAWO,iBAAiBV,OAEnD0D,YAAa,CAAEC,MAAOV,EAAkBlC,KAAM,EAAKb,MAAMS,UAAUI,MACnE6C,OAAQC,aAAaC,QAAQ,WAEzBC,EAAQF,aAAaC,QAAQ,SACnCnE,EACGqE,KADH,gCACiCD,GAAS5D,GACvCuC,MAAK,SAACC,GACL,EAAKf,SAAS,CAAEL,WAAW,IAC3B,EAAKY,mBACL,EAAK3F,MAAMyH,QAAQC,KAAK,cAEzBC,OAAM,SAACpB,GACNH,QAAQC,IAAIE,O,EAIlBqB,gBAAkB,WAEhB,OADqB,IAAIvD,MAAOC,Y,EAIlCuD,eAAiB,WAGf,IAFA,IAAMC,GAAc,IAAIzD,MAAOG,cAC3BuD,EAAkB,GACbC,EAAI,EAAGA,GAAK,EAAGA,IACtBD,EAAgBL,KAAK,CACnBzF,IAAK6F,EAAcE,EACnBzE,KAAMuE,EAAcE,EACpBxE,MAAOsE,EAAcE,IAGzB,OAAOD,G,EAGTE,cAAgB,SAACC,EAAG1E,GAClB,IAAM2E,EAAe3E,EACf4E,EAAgB,eAAQ,EAAK1E,MAAMS,WACzCiE,EAAiBhE,MAAQ+D,EACzB,EAAK/C,SAAS,CAAEjB,UAAWiE,K,EAG7BC,aAAe,SAACH,EAAG1E,GACjB,IAAM8E,EAAc9E,EACd4E,EAAgB,eAAQ,EAAK1E,MAAMS,WACzCiE,EAAiB7D,KAAO+D,EACxB,EAAKlD,SAAS,CAAEjB,UAAWiE,K,uDAGnB,IAAD,OACDG,EAAe,8KAErB,OACE,6BACE,kBAACC,EAAA,EAAD,CACE7G,KAAMgB,KAAKe,MAAMqB,UACjBnD,QAASe,KAAK0C,kBACdoD,SAAS,KACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBACd,kBAAC7H,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,mIAC0B,IACvBxF,EAAYX,KAAKe,MAAMS,UAAUC,OAAOb,KAAM,IAC9CZ,KAAKe,MAAMS,UAAUI,KAHxB,aAMF,kBAACwE,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAAC1G,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,yFAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,8BAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWC,eAAeJ,QAG1C,kBAAClB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,8BAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWG,iBAAiBN,SAI9C,kBAAClB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,mCAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,+EAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWI,iBAAiBP,QAG5C,kBAAClB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,yEAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWM,gBAAgBT,SAI7C,kBAAClB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,yCAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,+EAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWK,kBAAkBR,QAG7C,kBAAClB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAAlC,yEAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ6H,MAAM,UAC/BnG,KAAKe,MAAMC,WAAWO,iBAAiBV,WAMlD,kBAACyF,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQnI,QAAS4B,KAAK0C,kBAAmBzF,MAAM,aAA/C,wCAGA,kBAACsJ,GAAA,EAAD,CAAQnI,QAAS4B,KAAK6D,eAAgB5G,MAAM,UAAUuJ,WAAS,GAA/D,4DAMJ,kBAACnI,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAEsG,aAAc,SAHzB,+FAQA,kBAACC,GAAA,EAAD,CAAM9I,UAAU,QACd,kBAAC+I,GAAA,EAAD,CAAa/I,UAAU,eACrB,kBAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,6DAIF,kBAAC+B,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC2G,GAAA,EAAD,CAAa1G,MAAO,CAAEpD,MAAO,SAC3B,kBAAC+J,GAAA,EAAD,uCACA,kBAACC,GAAA,EAAD,CACElG,MAAOb,KAAKe,MAAMS,UAAUC,OAAS,EACrCuF,SAAU,SAACpE,GAAD,OACR,EAAK0C,cAAc1C,EAAOA,EAAMqE,OAAOpG,SAGxCF,EAAYxB,KAAI,SAACC,GAAD,OACf,kBAAC8H,GAAA,EAAD,CAAU5H,IAAKF,EAAKE,IAAKuB,MAAOzB,EAAKyB,OAClCzB,EAAKwB,YAMhB,kBAACjB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC2G,GAAA,EAAD,CAAa1G,MAAO,CAAEpD,MAAO,SAC3B,kBAAC+J,GAAA,EAAD,2BACA,kBAACC,GAAA,EAAD,CACElG,MAAOb,KAAKe,MAAMS,UAAUI,MAAQ,KACpCoF,SAAU,SAACpE,GAAD,OACR,EAAK8C,aAAa9C,EAAOA,EAAMqE,OAAOpG,SAGvCb,KAAKkF,iBAAiB/F,KAAI,SAACC,GAAD,OACzB,kBAAC8H,GAAA,EAAD,CAAU5H,IAAKF,EAAKE,IAAKuB,MAAOzB,EAAKyB,OAClCzB,EAAKwB,aAQlB,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,yFAIF,kBAAC+B,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,2BACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWC,eAAeJ,MAC5CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,iBAAkBxB,IAE7C+C,OAAQ5D,KAAKe,MAAMC,WAAWC,eAAeC,MAC7CoG,WACGtH,KAAKe,MAAMC,WAAWC,eAAeC,MAElC,KADA0E,KAKV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,2BACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWG,iBAAiBN,MAC9CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,mBAAoBxB,IAE/C+C,OAAQ5D,KAAKe,MAAMC,WAAWG,iBAAiBD,MAC/CoG,WACGtH,KAAKe,MAAMC,WAAWG,iBAAiBD,MAEpC,KADA0E,MAOZ,kBAACjG,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,mCAIF,kBAAC+B,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,4EACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWI,iBAAiBP,MAC9CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,mBAAoBxB,IAE/C+C,OAAQ5D,KAAKe,MAAMC,WAAWI,iBAAiBF,MAC/CoG,WACGtH,KAAKe,MAAMC,WAAWI,iBAAiBF,MAEpC,KADA0E,KAKV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,sEACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWM,gBAAgBT,MAC7CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,kBAAmBxB,IAE9C+C,OAAQ5D,KAAKe,MAAMC,WAAWM,gBAAgBJ,MAC9CoG,WACGtH,KAAKe,MAAMC,WAAWM,gBAAgBJ,MAEnC,KADA0E,MAOZ,kBAACjG,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,yCAIF,kBAAC+B,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,4EACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWK,kBAAkBR,MAC/CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,oBAAqBxB,IAEhD+C,OAAQ5D,KAAKe,MAAMC,WAAWK,kBAAkBH,MAChDoG,WACGtH,KAAKe,MAAMC,WAAWK,kBAAkBH,MAErC,KADA0E,KAKV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEC,MAAO,CAAEpD,MAAO,QAChBuB,QAAQ,WACR6I,MAAM,sEACNC,eAAe,GACfvG,MAAOb,KAAKe,MAAMC,WAAWO,iBAAiBV,MAC9CwG,aAAa,IACbL,SAAU,SAACpE,EAAO/B,GAAR,OACR,EAAKwB,oBAAoB,mBAAoBxB,IAE/C+C,OAAQ5D,KAAKe,MAAMC,WAAWO,iBAAiBL,MAC/CoG,WACGtH,KAAKe,MAAMC,WAAWO,iBAAiBL,MAEpC,KADA0E,MAOZ,kBAACjG,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAAS8G,QAAS,GACxC,kBAACjH,EAAA,EAAD,CACEP,MAAI,EACJc,GAAI,GACJC,MAAO,CAAEoH,UAAW,SAAUC,UAAW,SAEzC,kBAACjB,GAAA,EAAD,CACEjI,QAAQ,YACRrB,MAAM,UACNwK,kBAAgB,EAChBrJ,QAAS4B,KAAK2C,kBAJhB,mE,GA1derC,aA2ehBoH,eAAW5G,I,4BCjgBpBpE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8K,QAAS,OACTC,cAAe,SACf7H,WAAY,SACZyH,UAAW,QAEbK,UAAW,CACTL,UAAW,WAcAM,GAVA,WACb,IAAMxK,EAAUZ,KAChB,OACE,yBAAKkB,UAAWN,EAAQT,MACtB,kBAACkL,GAAA,EAAD,MACA,kBAAC1J,EAAA,EAAD,CAAYT,UAAWN,EAAQuK,WAA/B,sD,iFCTAnL,GAAYC,YAAW,CAC3BE,KAAM,CACJiB,SAAU,WACV0J,UAAW,QAEbQ,YAAa,CACXlK,SAAU,WACVmK,MAAO,OACPC,IAAK,UAmGMC,GA/FA,SAAC9K,GACd,IAAMC,EAAUZ,KADQ,EAESW,EAAM+K,eAA/BlC,EAFgB,EAEhBA,GAAImC,EAFY,EAEZA,KAAMrH,EAFM,EAENA,WACVsH,EAAgBjL,EAAhBiL,YAEJC,EAAiB,GACrB,OAAQF,EAAK1G,YACX,KAAK,EACH4G,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,6CACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,qBACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,mDACjB,MACF,KAAK,EACHA,EAAiB,6CACjB,MACF,KAAK,GACHA,EAAiB,uCACjB,MACF,KAAK,GACHA,EAAiB,6CACjB,MACF,QACEA,EAAiB,sEAGrB,OACE,kBAACC,GAAA,EAAD,CAAgB9J,UAAW0B,IAAOxC,UAAWN,EAAQT,MACnD,kBAACmB,EAAA,EAAD,CACEJ,UAAWN,EAAQ0K,YACnB7J,aAAW,6CACXO,UAAU,OACVzB,MAAM,YACNmB,QAAS,WACPf,EAAMoL,uBAAuBvC,IAE/BwC,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAEF,kBAACtK,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAC5BoC,EADH,IACoBF,EAAKxG,eAEzB,kBAAC+G,GAAA,EAAD,CAAOzK,aAAW,gBAChB,kBAAC0K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qEACA,kBAACA,GAAA,EAAD,CAAW5C,MAAM,UAAjB,wCACA,kBAAC4C,GAAA,EAAD,CAAW5C,MAAM,UAAjB,wEAGJ,kBAAC6C,GAAA,EAAD,KACGhI,EAAW7B,KAAI,SAAC8J,EAAKC,GAAN,OACd,kBAACJ,GAAA,EAAD,CAAUxJ,IAAK4J,GACb,kBAACH,GAAA,EAAD,CAAWrK,UAAU,KAAKyK,MAAM,OAC7BF,EAAI1M,MAEP,kBAACwM,GAAA,EAAD,CAAW5C,MAAM,UAAU8C,EAAIG,QAC/B,kBAACL,GAAA,EAAD,CAAW5C,MAAM,UAAU8C,EAAII,YAGnC,kBAACP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWrK,UAAU,KAAKyK,MAAM,OAAhC,8CAGA,kBAACJ,GAAA,EAAD,CAAW5C,MAAM,UAAUmC,Q,oBC1GjC5L,GAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,EACV0K,UAAW,OACX8B,UAAW,QAEbnC,MAAO,CACLoC,SAAU,UA4BCC,GAxBD,SAACnM,GACb,IAAMC,EAAUZ,KADO,EAEG+M,IAAMlM,SAAS,GAFlB,mBAEhBsD,EAFgB,KAET6I,EAFS,KASvB,OACE,kBAACtJ,EAAA,EAAD,CAAOxC,UAAWN,EAAQT,MACxB,kBAAC8M,GAAA,EAAD,CACE9I,MAAOA,EACPmG,SATe,SAACpE,EAAOgH,GAC3BF,EAASE,GACTvM,EAAMwM,kBAAkBxM,EAAMyM,SAASF,KAQnCG,eAAe,UACfC,UAAU,UACVC,UAAQ,GAEP5M,EAAMyM,SAAS3K,KAAI,SAAAC,GAAI,OAAI,kBAAC8K,GAAA,EAAD,CAAK5K,IAAKF,EAAM+H,MAAO/H,EAAMxB,UAAWN,EAAQ6J,c,UC3BrE,SAASgD,GAAa9M,GACnC,OACE,kBAACwI,EAAA,EAAD,CACE7G,KAAM3B,EAAM2B,KACZC,QAAS5B,EAAM+M,YACfrE,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBACb7I,EAAMgN,aAET,kBAACjE,GAAA,EAAD,KACE,kBAACkE,GAAA,EAAD,CAAmBpE,GAAG,4BACrB7I,EAAMkN,gBAGT,kBAACjE,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQnI,QAASf,EAAM+M,YAAanN,MAAM,WAA1C,wCAGA,kBAACsJ,GAAA,EAAD,CAAQnI,QAASf,EAAMmN,eAAgBvN,MAAM,YAAYuJ,WAAS,GAAlE,gD,aClBFiE,G,4MACJ1J,MAAQ,CACNqH,eAAgB,KAChBsC,eAAgB,KAChBC,QAAS,KACTxF,aAAa,IAAIzD,MAAOkJ,iBACxBhH,MAAO,KACPiH,kBAAkB,EAClBC,kBAAmB,M,EAOrBC,oBAAsB,WACpB,IAAMnG,EAAQF,aAAaC,QAAQ,SAC7BF,EAASC,aAAaC,QAAQ,UAE9BqG,EAAK,2BAAuBpG,EAAvB,sCAA0DH,EAA1D,KAELwG,EAAK,gCAA4BrG,EAA5B,sCAA+DH,EAA/D,KAELyG,EAAW1K,EAAM2K,IAAIH,GACrBI,EAAW5K,EAAM2K,IAJZ,iBAKLE,EAAW7K,EAAM2K,IAAIF,GAE3BK,QAAQC,IAAI,CAACL,EAAUE,EAAUC,IAC9B9H,MAAK,SAACiI,GACL/H,QAAQC,IAAI,sKAAqC8H,GAEjD,IAAMd,EAAiB,EAAKe,eAAeD,EAAO,GAAGE,MAC/Cf,EAAU,EAAKgB,iBAAiBH,EAAO,GAAGE,MAC5CtD,EAAiB,EAAKwD,oBAAoBJ,EAAO,GAAGE,MAI1B,KAF9BtD,EAAiB,EAAKyD,YAAYzD,EAAgBsC,IAE/BoB,OACjB,EAAKrJ,SAAS,CACZiI,eAAgBA,EAChBC,QAASA,EACTvC,eAAgBA,IAGlB,EAAK3F,SAAS,CACZiI,eAAgBA,EAChBC,QAASA,EACT/G,MAAO,qHAIZoB,OAAM,SAACpB,GACNH,QAAQC,IAAIE,GACZ,EAAKnB,SAAS,CACZmB,MAAO,qQ,EAKf6H,eAAiB,SAACC,GAChB,IAAMK,EAAqBL,EAAKM,OAAOC,KAAKP,IAAOhB,eAqCnD,MApCqB,CACnB,CACExE,GAAI,kBACJ3J,KAAM,gDACN6M,OAAQ2C,EAAmB/H,YAAYC,KAEzC,CACEiC,GAAI,oBACJ3J,KAAM,gDACN6M,OAAQ2C,EAAmB/H,YAAYE,OAEzC,CACEgC,GAAI,aACJ3J,KAAM,6EACN6M,OACE2C,EAAmB1H,SAASF,UAC5B4H,EAAmB3H,QAAQD,WAE/B,CACE+B,GAAI,YACJ3J,KAAM,uEACN6M,OACE2C,EAAmB1H,SAASC,SAC5ByH,EAAmB3H,QAAQE,UAE/B,CACE4B,GAAI,iBACJ3J,KAAM,kFACN6M,OACE2C,EAAmB1H,SAASF,UAC5B4H,EAAmB3H,QAAQD,UAC3B4H,EAAmB1H,SAASC,SAC5ByH,EAAmB3H,QAAQE,Y,EAOnCqH,iBAAmB,SAACD,GAMlB,OALcM,OAAOC,KAAKP,GAAMvM,KAAI,SAACC,GACnC,IAAI8M,EAASR,EAAKtM,GAElB,OADA8M,EAAOhG,GAAK9G,EACL8M,M,EAKXN,oBAAsB,SAACF,GACrB,IAAItD,EAAiB4D,OAAOC,KAAKP,GAAMvM,KAAI,SAACG,GAC1C,MAAO,CACL4G,GAAI5G,EACJ+I,KAAM,IAAI3G,KAAKgK,EAAKpM,GAAKiF,YAAYC,OACrCxD,WAAY,CACV,CACEkF,GAAI,kBACJ3J,KAAM,gDACN6M,OAAQsC,EAAKpM,GAAK0E,YAAYC,KAEhC,CACEiC,GAAI,oBACJ3J,KAAM,gDACN6M,OAAQsC,EAAKpM,GAAK0E,YAAYE,OAEhC,CACEgC,GAAI,aACJ3J,KAAM,6EACN6M,OAAQsC,EAAKpM,GAAK6E,UAAUE,SAAWqH,EAAKpM,GAAK6E,UAAUC,SAE7D,CACE8B,GAAI,YACJ3J,KAAM,uEACN6M,OAAQsC,EAAKpM,GAAKgF,SAASD,SAAWqH,EAAKpM,GAAKgF,SAASF,SAE3D,CACE8B,GAAI,iBACJ3J,KAAM,kFACN6M,OACEsC,EAAKpM,GAAK6E,UAAUE,SACpBqH,EAAKpM,GAAK6E,UAAUC,QACpBsH,EAAKpM,GAAKgF,SAASD,SACnBqH,EAAKpM,GAAKgF,SAASF,cAM7B,OADAgE,EAAe+D,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/D,KAAKiE,UAAYD,EAAEhE,KAAKiE,aACjDlE,G,EAGTmE,yBAA2B,WACzB,IAAM3H,EAAQF,aAAaC,QAAQ,SACnCnE,EACGgM,OADH,sBACyB,EAAKzL,MAAM+J,kBADpC,sBACmElG,IAChErB,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,EAAKjJ,SAAS,CAAEqI,kBAAmB,OACnC,EAAKzN,MAAMoP,gBAAgB,wHAA0B,CACnDnO,QAAS,OACToO,kBAAkB,OAGrB1H,OAAM,SAACpB,GACNH,QAAQC,IAAI,yCAAYE,O,EAI9B6E,uBAAyB,SAACvC,GACxB,EAAKzD,SAAS,CAAEoI,kBAAkB,EAAMC,kBAAmB5E,K,EAG7DyG,wBAA0B,WACxB,EAAKlK,SAAS,CAAEoI,kBAAkB,K,EAGpC+B,2BAA6B,WAC3B,EAAKC,yBAAyB,EAAK9L,MAAM+J,mBACzC,EAAKyB,2BACL,EAAKI,2B,EAGPE,yBAA2B,SAACC,GAC1B,IAAIC,EAAiB,aAAO,EAAKhM,MAAMqH,gBACvC2E,EAAoBA,EAAkBC,QAAO,SAAC5N,GAC5C,OAAOA,EAAK8G,KAAO4G,KAErB,EAAKrK,SAAS,CAAE2F,eAAgB2E,K,EAIlClB,YAAc,SAACzD,EAAgBsC,GAG7B,IAFA,IAAIqC,EAAiB,aAAO3E,GADoB,WAGvC/C,GACH0H,EAAkB1H,KAAO0H,EAAkB,GAC7CA,EAAkB1H,GAAGrE,WAAa+L,EAAkB1H,GAAGrE,WAAW7B,KAChE,SAACC,EAAM8J,GACL,IAAI+D,EAAO,eAAQ7N,GAEnB,OADA6N,EAAO,OAAaA,EAAQ7D,OAASsB,EAAexB,GAAOE,OACpD6D,KAIXF,EAAkB1H,GAAGrE,WAAa+L,EAAkB1H,GAAGrE,WAAW7B,KAChE,SAACC,EAAM8J,GACL,IAAI+D,EAAO,eAAQ7N,GAInB,OAHA6N,EAAO,OACLA,EAAQ7D,OACR2D,EAAkB1H,EAAI,GAAGrE,WAAWkI,GAAOE,OACtC6D,MAhBN5H,EAAI,EAAGA,EAAI0H,EAAkBjB,OAAQzG,IAAM,EAA3CA,GAsBT,OAAO0H,G,EAGTG,iBAAmB,SAAClM,EAAYqH,GAC9B,IAAI8E,EAAiB,IAAIzL,KACvB2G,EAAKxG,cACLwG,EAAK1G,WACL0G,EAAK+E,WAGHjJ,EAAY,KAChB,IACEA,EAAYnD,EAAWqM,MAAK,kBAAmB,eAAnB,EAAGnH,MAA8BmD,OAC7D,MAAO9D,GACP9B,QAAQC,IAAI,4EAAiB6B,GAG/B,IAAIjB,EAAW,KACf,IACEA,EAAWtD,EAAWqM,MAAK,kBAAmB,cAAnB,EAAGnH,MAA6BmD,OAC3D,MAAO9D,GACP9B,QAAQC,IAAI,sEAAgB6B,GAG9B,IAAI+H,EAAgB,KACpB,IACEA,EAAgBtM,EAAWqM,MAAK,kBAAmB,mBAAnB,EAAGnH,MAChCmD,OACH,MAAO9D,GACP9B,QAAQC,IAAI,iFAAiB6B,GAG/B,IAAIgI,EAAc,KAClB,IACEA,EAAc,EAAKxM,MAAM4J,QAAQ0C,MAAK,YAAmC,IAAhC9Q,EAA+B,EAA/BA,KAAMiR,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACxD,MACW,UAATlR,GACA,IAAImF,KAAK8L,IAAcL,GACvB,IAAIzL,KAAK+L,IAAYN,KAItBO,KACH,MAAOnI,GACP9B,QAAQC,IAAI,8IAGd,IAAIiK,EAAiB,KACrB,IACEA,EAAiB,EAAK5M,MAAM4J,QAAQ0C,MAClC,YAAmC,IAAhC9Q,EAA+B,EAA/BA,KAAMiR,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAClB,MACW,mBAATlR,GACA,IAAImF,KAAK8L,IAAcL,GACvB,IAAIzL,KAAK+L,IAAYN,KAKzBO,KACF,MAAOnI,GACP9B,QAAQC,IAAI,oMAoBd,OAjBAD,QAAQC,IACN,8EACAS,EACA,wEACAG,EACA,yEACAiJ,EACA,mFACAD,EACA,+HACAK,KAICxJ,EAAYG,GAAYiJ,EACzBD,EAAgBK,GAChBC,QAAQ,I,EAIZ/D,kBAAoB,SAACjI,GACnB,EAAKa,SAAS,CAAE0C,YAAavD,K,kEAjS7B5B,KAAK+K,wB,+BAoSG,IAAD,OACH3C,EAAiB,KAEnBA,EADgC,OAA9BpI,KAAKe,MAAMqH,gBAAgD,OAArBpI,KAAKe,MAAM6C,MAClC,kBAAC,GAAD,MACsB,OAA9B5D,KAAKe,MAAMqH,gBACpBA,EAAiBpI,KAAKe,MAAMqH,eAAe4E,QAAO,SAAC5N,GACjD,OAAOA,EAAKiJ,KAAKuC,mBAAqB,EAAK7J,MAAMoE,gBAGhC2G,OAAS,EACT1D,EAAejJ,KAAI,SAACC,EAAM8J,GACzC,OACE,kBAAC,GAAD,CACE5J,IAAK4J,EACLd,eAAgBhJ,EAChBkJ,YAAa,EAAK4E,iBAAiB9N,EAAK4B,WAAY5B,EAAKiJ,MACzDI,uBAAwB,EAAKA,4BAMjC,uBACEtI,MAAO,CAAEoH,UAAW,WADtB,+EAEmBvH,KAAKe,MAAMoE,YAF9B,wBAMF,uBAAGhF,MAAO,CAAEoH,UAAW,WAAavH,KAAKe,MAAM6C,OAKnD,IADA,IAAMkG,EAAW,GAEXzE,GAAI,IAAI3D,MAAOkJ,iBACnBvF,IAAK,IAAI3D,MAAOkJ,iBAAmB,EACnCvF,IAEAyE,EAAS/E,KAAKM,GAGhB,OACE,6BACE,kBAAC8E,GAAD,CACEnL,KAAMgB,KAAKe,MAAM8J,iBACjBT,YAAapK,KAAK2M,wBAClBnC,eAAgBxK,KAAK4M,2BACrBvC,YAAY,2DACZE,cAAc,maACdsD,UAAC,IAEH,kBAACxP,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,yFAGA,kBAAC,GAAD,CAAM2D,SAAUA,EAAUD,kBAAmB7J,KAAK6J,oBAClD,yBAAKjM,UAAU,kBAAkBwK,Q,GAvWb9H,aA6WbwN,gBAAarD,I,uEC/VtB/N,GAAYC,YAAW,CAC3BE,KAAM,CACJkR,OAAQ,SACRjQ,SAAU,YAEZkQ,YAAa,CACXC,cAAe,kBACfC,WAAY,mBAEdjF,IAAK,CACHtB,QAAS,QAEXwG,UAAW,CACTrR,SAAU,GAEZsR,gBAAiB,CACfC,YAAa,OACb5H,aAAc,QAEhB6H,cAAe,CACb3G,QAAS,OACT4G,UAAW,SAEbvG,YAAa,CACXlK,SAAU,WACVmK,MAAO,KAETuG,WAAY,CACV1Q,SAAU,WACVmK,MAAO,QAETwG,kBAAmB,CACjBxR,MAAO,WAETyR,cAAe,CACb,UAAW,CACTC,gBAAiB,2CAyIRC,GApII,SAACvR,GAClB,IAAMC,EAAUZ,KADY,EAEmBW,EAAM6O,OAA7ChG,EAFoB,EAEpBA,GAAI3J,EAFgB,EAEhBA,KAAMmR,EAFU,EAEVA,KAAMD,EAFI,EAEJA,QAASD,EAFL,EAEKA,UAFL,EAGIjQ,mBAASF,EAAMwR,UAHnB,mBAGrBA,EAHqB,KAGXC,EAHW,KAK5B,OACE,kBAACpI,GAAA,EAAD,CAAM9I,UAAWN,EAAQT,MACtBgS,EACC,kBAAC7Q,EAAA,EAAD,CACEJ,UAAWN,EAAQkR,WACnBrQ,aAAW,mDACXO,UAAU,OACVzB,MAAM,UACNmB,QAAS,kBAAM0Q,GAAY,IAC3BpG,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAGF,kBAAC3K,EAAA,EAAD,CACEJ,UAAWN,EAAQkR,WAAa,IAAMlR,EAAQoR,cAC9CvQ,aAAW,yDACXO,UAAU,OACVzB,MAAM,YACNmB,QAAS,WACP0Q,GAAY,GACR5I,EACF7I,EAAM0R,oBAAoB7I,GAE1B7I,EAAM2R,uBAGVtG,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,CAAU/K,UAAWN,EAAQmR,qBAIjC,kBAACzQ,EAAA,EAAD,CACEJ,UAAWN,EAAQ0K,YACnB7J,aAAW,6CACXO,UAAU,OACVzB,MAAM,YACNmB,QAAS,WACPf,EAAMoL,uBAAuBvC,IAE/BwC,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAEF,kBAAChC,GAAA,EAAD,CAAa/I,UAAWN,EAAQ0Q,aAC9B,kBAACrO,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAItC,UAAWN,EAAQ2L,KACpC,kBAACpC,GAAA,EAAD,CACEjJ,UACEN,EAAQ8Q,gBACR,IACA9Q,EAAQ6Q,UACR,IACA7Q,EAAQgR,eAGV,kBAACxH,GAAA,EAAD,iFACA,kBAACC,GAAA,EAAD,CACElG,MAAOtE,EACPyK,SAAU,SAACpE,GAAD,OACRvF,EAAM4R,oBAAoB/I,EAAI,OAAQtD,EAAMqE,OAAOpG,QAErDgO,SAAUA,GAEV,kBAAC3H,GAAA,EAAD,CAAUrG,MAAO,SAAjB,iEACA,kBAACqG,GAAA,EAAD,CAAUrG,MAAO,aAAjB,6EACA,kBAACqG,GAAA,EAAD,CAAUrG,MAAO,kBAAjB,kFACA,kBAACqG,GAAA,EAAD,CAAUrG,MAAO,mBAAjB,qFACA,kBAACqG,GAAA,EAAD,CAAUrG,MAAO,qBAAjB,uFAKJ,kBAAC,IAAD,CACEjD,UAAWN,EAAQ6Q,UACnBhH,MAAM,iCACNC,eAAe,SACfvG,MAAO6M,EACPrG,aAAa,IACb6H,aAAa,OACbL,SAAUA,EACV7H,SAAU,SAACpE,EAAO/B,GAAR,OACRxD,EAAM4R,oBAAoB/I,EAAI,OAAQrF,OAI5C,kBAAClB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAItC,UAAWN,EAAQ2L,KACpC,kBAAC,KAAD,CAAyBkG,MAAOC,MAC9B,kBAAC,KAAD,CACEjI,MAAM,6EACNkI,OAAO,aACPxO,MAAO2M,EACP5P,UAAWN,EAAQ8Q,gBAAkB,IAAM9Q,EAAQ6Q,UACnDmB,oBAAqB,CACnB,aAAc,eAEhBT,SAAUA,EACV7H,SAAU,SAACqB,GAAD,OACRhL,EAAM4R,oBAAoB/I,EAAI,YAAamC,MAI/C,kBAAC,KAAD,CACElB,MAAM,wFACNkI,OAAO,aACPxO,MAAO4M,EACP7P,UAAWN,EAAQ6Q,UACnBmB,oBAAqB,CACnB,aAAc,eAEhBT,SAAUA,EACV7H,SAAU,SAACqB,GAAD,OACRhL,EAAM4R,oBAAoB/I,EAAI,UAAWmC,YC7KrDkH,G,4MACJxO,MAAQ,CACN4J,QAAS,GACTE,kBAAkB,EAClB2E,eAAgB,KAChBC,mBAAmB,G,EAOrB9D,iBAAmB,WACjBnL,EACG2K,IADH,iBAEG5H,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAE1C,IAAIf,EAAUqB,OAAOC,KAAKzI,EAASkI,MAAMvM,KAAI,SAACC,GAC5C,IAAI8M,EAAS1I,EAASkI,KAAKtM,GAE3B,OADA8M,EAAOhG,GAAK9G,EACL8M,KAET,EAAKzJ,SAAS,CAAEkI,QAASA,OAE1B3F,OAAM,SAACpB,GACNH,QAAQC,IAAIE,GACZ,EAAKnB,SAAS,CACZmB,MAAO,4T,EAKf8L,sBAAwB,WACtBlP,EACGgM,OADH,mBACsB,EAAKzL,MAAMyO,eADjC,UAEGjM,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,EAAKjJ,SAAS,CAAE+M,eAAgB,OAChC,EAAKnS,MAAMoP,gBAAgB,wHAA0B,CACnDnO,QAAS,OACToO,kBAAkB,OAGrB1H,OAAM,SAACpB,GACNH,QAAQC,IAAI,yCAAYE,O,EAI9BmL,oBAAsB,SAAC7I,GACrBzC,QAAQC,IAAI,oGAAqBwC,GACjC,IAAMyJ,EAAU,EAAK5O,MAAM4J,QAAQ0C,MAAK,SAACjO,GAAD,OAAUA,EAAK8G,KAAOA,KACxD0J,EAAU,CACdlC,KAAMiC,EAAQjC,KACdD,QAASkC,EAAQlC,QACjBD,UAAWmC,EAAQnC,UACnBjR,KAAMoT,EAAQpT,MAEhBkH,QAAQC,IAAI,4HAAyBkM,GACrCpP,EACGqP,MADH,mBACqB3J,EADrB,SACgC0J,GAC7BrM,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,EAAKrO,MAAMoP,gBAAgB,0IAA6B,CACtDnO,QAAS,UACToO,kBAAkB,OAGrB1H,OAAM,SAACpB,GACNH,QAAQC,IAAI,yCAAYE,O,EAI9BoL,oBAAsB,WACpBvL,QAAQC,IAAI,2GACZ,IAAMiM,EAAU,EAAK5O,MAAM4J,QAAQ,GAC7BiF,EAAU,CACdlC,KAAMiC,EAAQjC,KACdD,QAASkC,EAAQlC,QACjBD,UAAWmC,EAAQnC,UACnBjR,KAAMoT,EAAQpT,MAEhBkH,QAAQC,IAAI,4HAAyBkM,GACrCpP,EACGqE,KADH,gBACyB+K,GACtBrM,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,EAAKjJ,SAAS,CAAEgN,mBAAmB,IACnC,EAAKpS,MAAMoP,gBAAgB,0IAA6B,CACtDnO,QAAS,UACToO,kBAAkB,OAGrB1H,OAAM,SAACpB,GACNH,QAAQC,IAAI,yCAAYE,O,EAI9B6E,uBAAyB,SAACvC,GACN,qBAAPA,EACT,EAAKzD,SAAS,CAAEoI,kBAAkB,EAAM2E,eAAgBtJ,IAExD,EAAK4J,sBAAsB5J,I,EAI/ByG,wBAA0B,WACxB,EAAKlK,SAAS,CAAEoI,kBAAkB,K,EAGpC+B,2BAA6B,WAC3B,EAAKkD,sBAAsB,EAAK/O,MAAMyO,gBACtC,EAAKE,wBACL,EAAK/C,2B,EAGPoD,iBAAmB,WACjB,IAAIC,EAAc,aAAO,EAAKjP,MAAM4J,SAEpCqF,EAAeC,QAAQ,CACrBvC,KAAM,EACND,QAAS,KACTD,UAAW,KACXjR,KAAM,KAGR,EAAKkG,SAAS,CAAEkI,QAASqF,EAAgBP,mBAAmB,K,EAG9DK,sBAAwB,SAAChD,GACvB,IAAIkD,EAAc,aAAO,EAAKjP,MAAM4J,SAEpCqF,EAAiBA,EAAehD,QAAO,SAAC5N,GACtC,OAAOA,EAAK8G,KAAO4G,KAGjB,EAAK/L,MAAM0O,kBACb,EAAKhN,SAAS,CAAEkI,QAASqF,EAAgBP,mBAAmB,IACvD,EAAKhN,SAAS,CAAEkI,QAASqF,K,EAGlCf,oBAAsB,SAAC/I,EAAI5G,EAAKuB,GAC9B,IAAIqP,EAAQ,aAAO,EAAKnP,MAAM4J,SAC1BwF,EAAcD,EAASE,WAAU,SAAChR,GAAD,OAAUA,EAAK8G,KAAOA,KAC3DgK,EAASC,GAAa7Q,GAAOuB,EAE7B,EAAK4B,SAAS,CAAEkI,QAASuF,K,kEAzIzBlQ,KAAK2L,qB,+BA4IG,IAAD,OACH0E,EAAc,KAelB,OAdqCA,EAAH,IAA9BrQ,KAAKe,MAAM4J,QAAQmB,OAA4B,kBAAC,GAAD,MAEnC9L,KAAKe,MAAM4J,QAAQxL,KAAI,SAACC,EAAM8J,GAAP,OACnC,kBAAC,GAAD,CACE5J,IAAwB,qBAAZF,EAAK8G,GAAqB9G,EAAK8G,GAAKgD,EAChDgD,OAAQ9M,EACRyP,SAA6B,qBAAZzP,EAAK8G,GACtBuC,uBAAwB,EAAKA,uBAC7BmE,2BAA4B,EAAKA,2BACjCmC,oBAAqB,EAAKA,oBAC1BE,oBAAqB,EAAKA,oBAC1BD,oBAAqB,EAAKA,yBAI9B,6BACE,kBAAC7E,GAAD,CACEnL,KAAMgB,KAAKe,MAAM8J,iBACjBT,YAAapK,KAAK2M,wBAClBnC,eAAgBxK,KAAK4M,2BACrBvC,YAAY,2DACZE,cAAc,maACdsD,UAAC,IAEH,kBAACxP,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAEsG,aAAc,SAHzB,wCAOA,kBAAC9G,EAAA,EAAD,CACEC,WAAS,EACTgH,QAAS,EACT/G,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXuQ,aAAa,SACbC,KAAK,UAEL,kBAAChK,GAAA,EAAD,CACEnI,QAAS,kBAAM,EAAK2R,iBAAiBM,IACrCpT,MAAM,UACN4R,SAAU7O,KAAKe,MAAM0O,mBAHvB,oFAQDY,O,GAvMa/P,aA6MPwN,gBAAayB,I,mBC5MtB7S,GAAYC,YAAW,CAC3B6T,MAAO,CACLzT,MAAO,QAET0T,eAAgB,CACdlJ,UAAW,YAkQAmJ,GA9PE,SAACrT,GAChB,IAAMC,EAAUZ,KADU,EAQtBW,EAAMsT,YALRC,EAHwB,EAGxBA,UACAC,EAJwB,EAIxBA,SACAC,EALwB,EAKxBA,UACAC,EANwB,EAMxBA,gBACA7O,EAPwB,EAOxBA,QAPwB,EAkBtB7E,EAAMqN,eAPRsG,EAXwB,EAWxBA,mBACA/P,EAZwB,EAYxBA,eACAE,EAbwB,EAaxBA,iBACA8P,EAdwB,EAcxBA,iBACAC,EAfwB,EAexBA,gBACAC,EAhBwB,EAgBxBA,kBACAC,EAjBwB,EAiBxBA,iBAGF,OACE,kBAACzR,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,qDAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,qBACNtG,MAAO+P,EAAU/P,MACjByQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,YAAa3O,EAAMqE,OAAOpG,QAExD+C,OAAQgN,EAAU1P,OAAS0P,EAAUY,QACrClK,YACGsJ,EAAU1P,OAAS0P,EAAUY,QAC1BZ,EAAUhL,aACV,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,6CACNtG,MAAOgQ,EAAShQ,MAChByQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,WAAY3O,EAAMqE,OAAOpG,QAEvD+C,OAAQiN,EAAS3P,OAAS2P,EAASW,QACnClK,YACGuJ,EAAS3P,OAAS2P,EAASW,QAAUX,EAASjL,aAAe,QAIpE,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,iCACNtG,MAAOqB,EAAQrB,MACfyQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,UAAW3O,EAAMqE,OAAOpG,QAEtD+C,OAAQ1B,EAAQhB,OAASgB,EAAQsP,QACjClK,YACGpF,EAAQhB,OAASgB,EAAQsP,QAAUtP,EAAQ0D,aAAe,QAIjE,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,0DACNtG,MAAOiQ,EAAUjQ,MACjBgO,UAAQ,EACRyC,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,YAAa3O,EAAMqE,OAAOpG,WAI5D,kBAAClB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,oGACNtG,MAAOkQ,EAAgBlQ,MACvByQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,kBAAmB3O,EAAMqE,OAAOpG,QAE9D+C,OAAQmN,EAAgB7P,OAAS6P,EAAgBS,QACjDlK,YACGyJ,EAAgB7P,OAAS6P,EAAgBS,QACtCT,EAAgBnL,aAChB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK6H,MAAM,UAA/B,wHAIF,kBAACxG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC,KAAD,CAAyBiP,MAAOC,MAC9B,kBAACqC,GAAA,EAAD,CACEC,WAAS,EACT9T,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,qJACNkI,OAAO,aACPxO,MAAOmQ,EAAmBnQ,MAC1BmG,SAAU,SAACqB,GAAD,OACRhL,EAAMuU,4BAA4B,qBAAsBvJ,IAE1DzE,OAAQoN,EAAmB9P,OAAS8P,EAAmBQ,QACvDlK,YACG0J,EAAmB9P,OAAS8P,EAAmBQ,QAC5CR,EAAmBpL,aACnB,SAKZ,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,iHACNC,eAAe,GACfvG,MAAOI,EAAeJ,MACtBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,iBAAkB/Q,IAEtD+C,OAAQ3C,EAAeC,OAASD,EAAeuQ,QAC/ClK,YACGrG,EAAeC,OAASD,EAAeuQ,QACpCvQ,EAAe2E,aACf,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,iHACNC,eAAe,GACfvG,MAAOM,EAAiBN,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQzC,EAAiBD,OAASC,EAAiBqQ,QACnDlK,YACGnG,EAAiBD,OAASC,EAAiBqQ,QACxCrQ,EAAiByE,aACjB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,4GACNC,eAAe,GACfvG,MAAOoQ,EAAiBpQ,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQqN,EAAiB/P,OAAS+P,EAAiBO,QACnDlK,YACG2J,EAAiB/P,OAAS+P,EAAiBO,QACxCP,EAAiBrL,aACjB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,sGACNC,eAAe,GACfvG,MAAOqQ,EAAgBrQ,MACvBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,kBAAmB/Q,IAEvD+C,OAAQsN,EAAgBhQ,OAASgQ,EAAgBM,QACjDlK,YACG4J,EAAgBhQ,OAASgQ,EAAgBM,QACtCN,EAAgBtL,aAChB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,kHACNC,eAAe,GACfvG,MAAOsQ,EAAkBtQ,MACzBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,oBAAqB/Q,IAEzD+C,OAAQuN,EAAkBjQ,OAASiQ,EAAkBK,QACrDlK,YACG6J,EAAkBjQ,OAASiQ,EAAkBK,QAC1CL,EAAkBvL,aAClB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,4GACNC,eAAe,GACfvG,MAAOuQ,EAAiBvQ,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQwN,EAAiBlQ,OAASkQ,EAAiBI,QACnDlK,YACG8J,EAAiBlQ,OAASkQ,EAAiBI,QACxCJ,EAAiBxL,aACjB,QAIV,kBAACjG,EAAA,EAAD,CAAM/B,UAAWN,EAAQmT,eAAgBrR,MAAI,EAACc,GAAI,IAChD,kBAACqG,GAAA,EAAD,CACEjI,QAAQ,YACRrB,MAAM,UACNwK,kBAAgB,EAChBrJ,QAAS,WACHf,EAAMyU,qBAAqBzU,EAAM0U,sBALzC,6DC/PFrV,GAAYC,YAAW,CAC3BE,KAAM,CACJkR,OAAQ,UAEVC,YAAa,CACXgE,QAAS,qBAgBEC,GAZE,SAAC5U,GAChB,IAAMC,EAAUZ,KAEhB,OACE,kBAACgK,GAAA,EAAD,CAAM9I,UAAWN,EAAQT,MACvB,kBAAC8J,GAAA,EAAD,CAAa/I,UAAWN,EAAQ0Q,aAC7B3Q,EAAMgD,YCtBF6R,GAAqB,SAACrR,EAAOsR,GACxC,IAAIC,EAAa,CACfC,SAAS,EACTzM,aAAc,MAGhB,IAAKuM,EACH,OAAO,EAUT,GAPIA,EAAMG,WACRF,EAAWC,QAA2B,KAAjBxR,EAAM0R,QAAiBH,EAAWC,QACvDD,EAAWxM,aAAgBwM,EAAWC,QAElC,GADA,+KAIFF,EAAMK,QAAS,CAEjBJ,EAAWC,QADK,wIACaI,KAAK5R,IAAUuR,EAAWC,QACvDD,EAAWxM,aACC,KAAV/E,EACI,8KACA,8KA2BR,OAxBIsR,EAAMO,SACRN,EAAWC,QAAoB,OAAVxR,GAAkBuR,EAAWC,QAClDD,EAAWxM,aAAgBwM,EAAWC,QAElC,GADA,+KAIFF,EAAMQ,WACRP,EAAWC,QAAoB,IAAVxR,GAAeuR,EAAWC,QAC/CD,EAAWxM,aAAgBwM,EAAWC,QAElC,GADA,+KAIFF,EAAMS,YACRR,EAAWC,QAAUxR,EAAMiL,QAAU,GAAKsG,EAAWC,QACjDxR,EAAMiL,OAAS,GAAKjL,EAAMiL,OAAS,EACrCsG,EAAWxM,aACT,+OACsB,IAAjB/E,EAAMiL,OACbsG,EAAWxM,aAAe,8KACvBwM,EAAWxM,aAAe,IAG1BwM,GCvCHS,G,4MACJ9R,MAAQ,CACN4P,YAAa,CACXC,UAAW,CACT/P,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXX,SAAU,CACRhQ,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXV,UAAW,CACTjQ,MAAO,IAETkQ,gBAAiB,CACflQ,MAAO,GACPuR,WAAY,CACVI,SAAS,GAEXtR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXtP,QAAS,CACPrB,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACP0E,aAAc,GACd4L,SAAS,IAGbsB,kBAAkB,EAClBpI,eAAgB,CACdsG,mBAAoB,CAClBnQ,MAAO,KACPuR,WAAY,CACVM,QAAQ,GAEVxR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXvQ,eAAgB,CACdJ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXrQ,iBAAkB,CAChBN,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXP,iBAAkB,CAChBpQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXN,gBAAiB,CACfrQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXL,kBAAmB,CACjBtQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXJ,iBAAkB,CAChBvQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,IAGbuB,qBAAqB,EACrBtO,OAAQ,M,EAOVgH,eAAiB,SAAChH,GAChBhB,QAAQC,IAAI,oHAAgCe,GAC5C,IAAMG,EAAQF,aAAaC,QAAQ,SACnCnE,EACG2K,IADH,2BAC2BvG,EAD3B,sCAC8DH,EAD9D,MAEGlB,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,IAAIsH,EAAaxP,EAASkI,KAAKM,OAAOC,KAAKzI,EAASkI,OAChDuH,EAAc,2BACb,EAAKlS,MAAM4P,aADE,IAEhBC,UAAU,2BACL,EAAK7P,MAAM4P,YAAYC,WADnB,IAEP/P,MAAOmS,EAAWrC,YAAYC,YAEhCC,SAAS,2BACJ,EAAK9P,MAAM4P,YAAYE,UADpB,IAENhQ,MAAOmS,EAAWrC,YAAYE,WAEhCC,UAAU,2BACL,EAAK/P,MAAM4P,YAAYG,WADnB,IAEPjQ,MAAOmS,EAAWrC,YAAYG,YAEhCC,gBAAgB,2BACX,EAAKhQ,MAAM4P,YAAYI,iBADb,IAEblQ,MAAOmS,EAAWrC,YAAYI,kBAEhC7O,QAAQ,2BACH,EAAKnB,MAAM4P,YAAYzO,SADrB,IAELrB,MAAOmS,EAAWrC,YAAYzO,YAG9BwI,EAAc,2BACb,EAAK3J,MAAM2J,gBADE,IAEhBsG,mBAAmB,2BACd,EAAKjQ,MAAM2J,eAAesG,oBADb,IAEhBnQ,MAAOmS,EAAWtI,eAAesG,qBAEnC/P,eAAe,2BACV,EAAKF,MAAM2J,eAAezJ,gBADjB,IAEZJ,MAAOmS,EAAWtI,eAAe1G,YAAYC,MAE/C9C,iBAAiB,2BACZ,EAAKJ,MAAM2J,eAAevJ,kBADf,IAEdN,MAAOmS,EAAWtI,eAAe1G,YAAYE,QAE/C+M,iBAAiB,2BACZ,EAAKlQ,MAAM2J,eAAeuG,kBADf,IAEdpQ,MAAOmS,EAAWtI,eAAetG,QAAQD,YAE3C+M,gBAAgB,2BACX,EAAKnQ,MAAM2J,eAAewG,iBADhB,IAEbrQ,MAAOmS,EAAWtI,eAAetG,QAAQE,WAE3C6M,kBAAkB,2BACb,EAAKpQ,MAAM2J,eAAeyG,mBADd,IAEftQ,MAAOmS,EAAWtI,eAAerG,SAASF,YAE5CiN,iBAAiB,2BACZ,EAAKrQ,MAAM2J,eAAe0G,kBADf,IAEdvQ,MAAOmS,EAAWtI,eAAerG,SAASC,aAI9C,EAAK7B,SAAS,CACZkO,YAAasC,EACbvI,eAAgBA,EAChBxE,GAAI8F,OAAOC,KAAKzI,EAASkI,MAAM,QAGlC1G,OAAM,SAACpB,GACNH,QAAQC,IAAIE,GACZ,EAAKnB,SAAS,CACZmB,MAAO,4T,EAKfmO,kBAAoB,WAClBtO,QAAQC,IAAI,sHAA6B,EAAK3C,MAAMmF,IACpD,IAAMtB,EAAQF,aAAaC,QAAQ,SAC7BuO,EAAe,CACnBvC,YAAa,CACXC,UAAW,EAAK7P,MAAM4P,YAAYC,UAAU/P,MAC5CgQ,SAAU,EAAK9P,MAAM4P,YAAYE,SAAShQ,MAC1CiQ,UAAW,EAAK/P,MAAM4P,YAAYG,UAAUjQ,MAC5CkQ,gBAAiB,EAAKhQ,MAAM4P,YAAYI,gBAAgBlQ,MACxDqB,QAAS,EAAKnB,MAAM4P,YAAYzO,QAAQrB,OAE1C6J,eAAgB,CACdsG,mBAAoB,EAAKjQ,MAAM2J,eAAesG,mBAAmBnQ,MACjEmD,YAAa,CACXC,IAAK,EAAKlD,MAAM2J,eAAezJ,eAAeJ,MAC9CqD,MAAO,EAAKnD,MAAM2J,eAAevJ,iBAAiBN,OAEpDuD,QAAS,CACPD,UAAW,EAAKpD,MAAM2J,eAAeuG,iBAAiBpQ,MACtDyD,SAAU,EAAKvD,MAAM2J,eAAewG,gBAAgBrQ,OAEtDwD,SAAU,CACRF,UAAW,EAAKpD,MAAM2J,eAAeyG,kBAAkBtQ,MACvDyD,SAAU,EAAKvD,MAAM2J,eAAe0G,iBAAiBvQ,QAGzD4D,OAAQC,aAAaC,QAAQ,WAG/BnE,EACGqP,MADH,iBACmB,EAAK9O,MAAMmF,GAD9B,sBAC8CtB,GAASsO,GACpD3P,MAAK,SAACC,GACLC,QAAQC,IAAI,qFAAqBF,EAASkI,MAC1C,EAAKrO,MAAMoP,gBAAgB,0IAA6B,CACtDnO,QAAS,UACToO,kBAAkB,OAGrB1H,OAAM,SAACpB,GACNH,QAAQC,IAAI,yCAAYE,O,EAI9B2N,sBAAwB,SAACjS,EAAKuB,GAC5B,IAAIuR,EAAaF,GACfrR,EACA,EAAKE,MAAM4P,YAAYrR,GAAK8S,YAE1Ba,EAAc,2BACb,EAAKlS,MAAM4P,aADE,mBAEfrR,EAFe,2BAGX,EAAKyB,MAAM4P,YAAYrR,IAHZ,IAIduB,MAAOA,EACPK,MAAOkR,EAAWC,QAClBzM,aAAcwM,EAAWxM,aACzB4L,SAAS,MAIT2B,EAAY,EAAKrB,oBAErB,EAAKrP,SAAS,CAAEkO,YAAasC,EAAgBH,iBAAkBK,K,EAGjEvB,4BAA8B,SAACtS,EAAKuB,GAClC,IAAIuR,EAAaF,GACfrR,EACA,EAAKE,MAAM2J,eAAepL,GAAK8S,YAE7BgB,EAAiB,2BAChB,EAAKrS,MAAM2J,gBADK,mBAElBpL,EAFkB,2BAGd,EAAKyB,MAAM2J,eAAepL,IAHZ,IAIjBuB,MAAOA,EACPK,MAAOkR,EAAWC,QAClBzM,aAAcwM,EAAWxM,aACzB4L,SAAS,MAIT2B,EAAY,EAAKrB,oBAErB,EAAKrP,SAAS,CACZiI,eAAgB0I,EAChBL,oBAAqBI,K,EAIzBrB,kBAAoB,WAAO,IAAD,EAMpB,EAAK/Q,MAAM4P,YAJbC,EAFsB,EAEtBA,UACAC,EAHsB,EAGtBA,SACAE,EAJsB,EAItBA,gBACA7O,EALsB,EAKtBA,QALsB,EAgBpB,EAAKnB,MAAM2J,eAPbsG,EATsB,EAStBA,mBACA/P,EAVsB,EAUtBA,eACAE,EAXsB,EAWtBA,iBACA8P,EAZsB,EAYtBA,iBACAC,EAbsB,EAatBA,gBACAC,EAdsB,EActBA,kBACAC,EAfsB,EAetBA,iBAGF,SACER,EAAU1P,OACV2P,EAAS3P,OACT6P,EAAgB7P,OAChBgB,EAAQhB,OACR8P,EAAmB9P,OACnBD,EAAeC,OACfC,EAAiBD,OACjB+P,EAAiB/P,OACjBgQ,EAAgBhQ,OAChBiQ,EAAkBjQ,OAClBkQ,EAAiBlQ,Q,kEArMnBlB,KAAKyL,eAAe/G,aAAaC,QAAQ,a,+BA8MzC,OACE,6BACE,kBAACtG,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAEsG,aAAc,SAHzB,uHAO4B,OAA3BzG,KAAKe,MAAM4P,YACV,kBAAC,GAAD,MAEA,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEA,YAAa3Q,KAAKe,MAAM4P,YACxBjG,eAAgB1K,KAAKe,MAAM2J,eAC3B6G,sBAAuBvR,KAAKuR,sBAC5BK,4BAA6B5R,KAAK4R,4BAClCE,kBAAmB9R,KAAK8R,kBACxBC,kBAAmB/R,KAAK+R,0B,GAnVXzR,aA4VZwN,gBAAa+E,IC7VfQ,GAAc,SAACzO,EAAOH,GACjC,MAAO,CACLnC,KCXwB,eDYxBgR,QAAS1O,EACTH,OAAQA,IAIC8O,GAAW,SAAC3P,GACvB,MAAO,CACLtB,KClBqB,YDmBrBsB,MAAOA,IAkFE4P,GAAa,WAIxB,OAHA9O,aAAa+O,WAAW,SACxB/O,aAAa+O,WAAW,kBACxB/O,aAAa+O,WAAW,UACjB,CACLnR,KCzGuB,gBD6GdoR,GAAmB,SAACC,GAC/B,OAAO,SAACC,GACNC,YAAW,WACTD,EAASJ,QACS,IAAjBG,K,wCEhHDjX,GAAYC,aAAW,SAACC,GAAD,OAC3BkX,aAAa,CACXjX,KAAM,CACJkR,OAAQ,SACRhR,MAAO,QAETgX,MAAO,CACL,qBAAsB,CACpBC,gBAAiB,2CAWVC,GALG,SAAC5W,GACjB,IAAMC,EAAUZ,KAChB,OAAO,kBAAC2U,GAAA,EAAD,eAAWzT,UAAWN,EAAQT,KAAMyB,QAAQ,WAAW4V,WAAY,CAACtW,UAAWN,EAAQyW,QAAY1W,K,oDCdtGX,GAAYC,aAAW,SAACC,GAAD,OAC3BkX,aAAa,CACXjX,KAAM,CACJkR,OAAQ,SACRhR,MAAO,QAETgX,MAAO,CACL,qBAAsB,CACpBC,gBAAiB,2CAwCVG,GAlCW,SAAC9W,GACzB,IAAMC,EAAUZ,KADmB,EAET+M,IAAMlM,SAAS,CACvC6W,cAAc,IAHmB,mBAE5BrT,EAF4B,KAErB0B,EAFqB,KAUnC,OACE,kBAAC4O,GAAA,EAAD,eACEzT,UAAWN,EAAQT,KACnByB,QAAQ,WACRgE,KAAMvB,EAAMqT,aAAe,OAAS,WACpCF,WAAY,CAAEtW,UAAWN,EAAQyW,OACjCM,WAAY,CACVC,aACE,kBAACC,GAAA,EAAD,CAAgBzW,SAAS,OACvB,kBAACE,EAAA,EAAD,CACEG,aAAW,6BACXC,QAfoB,WAC9BqE,EAAS,2BAAK1B,GAAN,IAAaqT,cAAerT,EAAMqT,iBAehCnW,KAAK,OAEJ8C,EAAMqT,aAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,UAK3C/W,K,QC7CJmX,GAAYC,aAAW,CAC3B5X,KAAM,CACJE,MAAO,OACP2X,cAAe,OACf3G,OAAQ,kBAJM0G,CAMflO,MAMYoO,GAJI,SAACtX,GAClB,OAAO,kBAACmX,GAAD,eAAWlW,QAAQ,YAAYrB,MAAM,WAAcI,GAAQA,EAAMgD,W,UCTpEuU,GAAWH,aAAW,CAC1B5X,KAAM,CACJ4J,aAAc,SAFDgO,CAIdI,MAMYC,GAJG,SAACzX,GACjB,OAAO,kBAACuX,GAAavX,EAAQA,EAAMgD,W,UCI/B0U,G,4MACJhU,MAAQ,CACNiU,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,eAAgB,CACdH,OAAO,EACPC,UAAU,GAEZG,sBAAuB,CACrBJ,MAAO,qGACPC,SAAU,sGAEZI,UAAU,G,EAIZC,aAAe,SAAC1S,GACd,IAAMrG,EAAOqG,EAAMqE,OAAO1K,KACpBsE,EAAQ+B,EAAMqE,OAAOpG,MAC3B,EAAKuR,WAAW7V,EAAMsE,GAGtB,EAAK4B,SAAL,gBAAiBlG,EAAOsE,K,EAI1BuR,WAAa,SAAC7V,EAAMsE,GAClB,IACI0U,EAAoB,eAAQ,EAAKxU,MAAMoU,gBACvCC,EAAqB,eAAQ,EAAKrU,MAAMqU,uBAC5C,OAAQ7Y,GACN,IAAK,QACHgZ,EAAqBP,MALb,uCAKyBvC,KAAK5R,GACjB,IAAjBA,EAAMiL,OACRsJ,EAAsBJ,MAAQ,qGACzBI,EAAsBJ,MAAQ,iKACrC,MACF,IAAK,WACHO,EAAqBN,SAAWpU,EAAMiL,QAAU,EAC3B,IAAjBjL,EAAMiL,OACRsJ,EAAsBH,SAAW,qGAEjCG,EAAsBH,SACpB,uLAKR,EAAKxS,SAAS,CACZ0S,eAAgBI,EAChBH,sBAAuBA,K,EAK3BI,gBAAkB,WAChB,IAAIC,EAAW,EAAK1U,MAAMmU,WAE1B,EAAKzS,SAAS,CAAEyS,YAAaO,K,EAI/BC,kBAAoB,WAEd,EAAK3U,MAAMoU,eAAeH,OAAS,EAAKjU,MAAMoU,eAAeF,UAC/D,EAAKxS,SAAS,CAAE4S,UAAU,IAE1B,EAAKhY,MAAMsY,OACT,EAAK5U,MAAMiU,MACX,EAAKjU,MAAMkU,WAGb,EAAKxS,SAAS,CAAE4S,UAAU,K,uDAM5B,IAAIO,GAAa,EACbC,GAAgB,EAOpB,OALK7V,KAAKe,MAAMsU,WACdO,GAAc5V,KAAKe,MAAMoU,eAAeH,MACxCa,GAAiB7V,KAAKe,MAAMoU,eAAeF,UAI3C,yBAAKrX,UAAU,kBACb,8BACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,kBAAC,KAAD,QAGJ,kBAACS,EAAA,EAAD,CAAYT,UAAU,aAAaU,QAAQ,KAAK6H,MAAM,UAAtD,0LAGCnG,KAAK3C,MAAMuI,aACV,kBAAC,GAAD,CAAUkQ,SAAS,SAAS9V,KAAK3C,MAAMuI,cACrC,KACJ,kBAAC,GAAD,CACEtG,IAAI,QACJ4G,GAAG,QACHiB,MAAM,iCACN5K,KAAK,QACLqH,MAAOgS,EACPtO,WACEsO,EAAa5V,KAAKe,MAAMqU,sBAAsBJ,MAAQ,KAExDhO,SAAUhH,KAAKsV,aACfzU,MAAOb,KAAKe,MAAMiU,QAEpB,kBAAC,GAAD,CACE1V,IAAI,WACJ4G,GAAG,WACHiB,MAAM,uCACN5K,KAAK,WACLqH,MAAOiS,EACPvO,WACEuO,EAAgB7V,KAAKe,MAAMqU,sBAAsBH,SAAW,KAE9DjO,SAAUhH,KAAKsV,aACfzU,MAAOb,KAAKe,MAAMkU,WAEpB,kBAAC,GAAD,CAAY7W,QAAS4B,KAAK0V,mBAA1B,oFAGA,kBAACrX,EAAA,EAAD,KACE,kBAAC0X,GAAA,EAAD,CAAMrX,UAAWC,IAASC,GAAG,gBAAgBN,QAAQ,SAArD,qK,GAjIWgC,aA0JR0V,gBAdS,SAACjV,GACvB,MAAO,CACLd,OAAwB,OAAhBc,EAAM6D,MACdqR,QAASlV,EAAMkV,QACfrQ,aAAc7E,EAAM6C,UAIG,SAACgQ,GAC1B,MAAO,CACL+B,OAAQ,SAACX,EAAOC,GAAR,OAAqBrB,EN5Ib,SAACoB,EAAOC,GAC1B,OAAO,SAACrB,GACNA,EAtBK,CACLtR,KCNsB,eD6BtB,IAAM4T,EAAW,CACflB,MAAOA,EACPC,SAAUA,EACVkB,mBAAmB,GAGjBC,EAAG,oFAAgFpU,EAAOqU,cAE9F7V,EACGqE,KAAKuR,EAAKF,GACV3S,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAM8S,EAAiB,IAAI5U,MACzB,IAAIA,MAAO4K,UAAsC,IAA1B9I,EAASkI,KAAK6K,WAGvC7R,aAAa8R,QAAQ,QAAShT,EAASkI,KAAK4H,SAC5C5O,aAAa8R,QAAQ,iBAAkBF,GACvC5R,aAAa8R,QAAQ,SAAUhT,EAASkI,KAAK+K,SAE7C7C,EAASP,GAAY7P,EAASkI,KAAK4H,QAAS9P,EAASkI,KAAK+K,UAC1D7C,EAASF,GAAiBlQ,EAASkI,KAAK6K,eAEzCvR,OAAM,SAACpB,GACNH,QAAQC,IAAIE,GACZgQ,EAASL,GAAS3P,EAAMJ,SAASkI,KAAK9H,YM+GJ8S,CAAa1B,EAAOC,QAI/Ce,CAA6CjB,ICnKtD4B,G,kLAEF3W,KAAK3C,MAAMuZ,SAAS5W,KAAK3C,MAAMyH,W,+BAI/B,OAAO,kBAAC,IAAD,CAAUlG,GAAG,U,GANH0B,aAgBN0V,eAAQ,MANI,SAAApC,GACzB,MAAO,CACLgD,SAAU,kBAAMhD,EAAS8C,UAIdV,CAAkCW,I,8BCoGlCE,GArHC,SAACxZ,GAAW,IAAD,EAQrBA,EAAMsT,YANRC,EAFuB,EAEvBA,UACAC,EAHuB,EAGvBA,SACAC,EAJuB,EAIvBA,UACAmE,EALuB,EAKvBA,SACAlE,EANuB,EAMvBA,gBACA7O,EAPuB,EAOvBA,QAGF,OACE,kBAACvC,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,QACN0H,SAAUxR,EAAMsU,WAChB9Q,MAAOiQ,EAAUjQ,MACjByB,KAAK,QACLwU,aAAa,MACbxF,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,YAAa3O,EAAMqE,OAAOpG,QAExD+C,OAAQkN,EAAU5P,OAAS4P,EAAUU,QACrClK,YACGwJ,EAAU5P,OAAS4P,EAAUU,QAC1BV,EAAUlL,aACV,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,uCACN0H,SAAUxR,EAAMsU,WAChB9Q,MAAOoU,EAASpU,MAChByB,KAAK,WACLwU,aAAa,eACbxF,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,WAAY3O,EAAMqE,OAAOpG,QAEvD+C,OAAQqR,EAAS/T,OAAS+T,EAASzD,QACnClK,YACG2N,EAAS/T,OAAS+T,EAASzD,QAAUyD,EAASrP,aAAe,QAIpE,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACmR,GAAA,EAAD,CACEC,WAAS,EACTnK,MAAM,qBACNtG,MAAO+P,EAAU/P,MACjBmG,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,YAAa3O,EAAMqE,OAAOpG,QAExDgO,SAAUxR,EAAMsU,WAChB/N,OAAQgN,EAAU1P,OAAS0P,EAAUY,QACrClK,YACGsJ,EAAU1P,OAAS0P,EAAUY,QAC1BZ,EAAUhL,aACV,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,6CACN0H,SAAUxR,EAAMsU,WAChB9Q,MAAOgQ,EAAShQ,MAChByQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,WAAY3O,EAAMqE,OAAOpG,QAEvD+C,OAAQiN,EAAS3P,OAAS2P,EAASW,QACnClK,YACGuJ,EAAS3P,OAAS2P,EAASW,QAAUX,EAASjL,aAAe,QAIpE,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,iCACN0H,SAAUxR,EAAMsU,WAChB9Q,MAAOqB,EAAQrB,MACfyQ,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,UAAW3O,EAAMqE,OAAOpG,QAEtD+C,OAAQ1B,EAAQhB,OAASgB,EAAQsP,QACjClK,YACGpF,EAAQhB,OAASgB,EAAQsP,QAAUtP,EAAQ0D,aAAe,QAIjE,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACmR,GAAA,EAAD,CACElK,MAAM,oGACN0H,SAAUxR,EAAMsU,WAChB9Q,MAAOkQ,EAAgBlQ,MACvByB,KAAK,QACLgP,WAAS,EACTtK,SAAU,SAACpE,GAAD,OACRvF,EAAMkU,sBAAsB,kBAAmB3O,EAAMqE,OAAOpG,QAE9D+C,OAAQmN,EAAgB7P,OAAS6P,EAAgBS,QACjDlK,YACGyJ,EAAgB7P,OAAS6P,EAAgBS,QACtCT,EAAgBnL,aAChB,UCvGVlJ,GAAYC,YAAW,CAC3B6T,MAAO,CACLzT,MAAO,UA6JIga,GAzJC,SAAC1Z,GACf,IAAMC,EAAUZ,KADS,EAUrBW,EAAMqN,eAPRsG,EAHuB,EAGvBA,mBACA/P,EAJuB,EAIvBA,eACAE,EALuB,EAKvBA,iBACA8P,EANuB,EAMvBA,iBACAC,EAPuB,EAOvBA,gBACAC,EARuB,EAQvBA,kBACAC,EATuB,EASvBA,iBAGF,OACE,kBAACzR,EAAA,EAAD,CAAMC,WAAS,EAACgH,QAAS,GACvB,kBAACjH,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC,KAAD,CAAyBiP,MAAOC,MAC9B,kBAACqC,GAAA,EAAD,CACEC,WAAS,EACT9T,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,qJACNkI,OAAO,aACPxO,MAAOmQ,EAAmBnQ,MAC1BmG,SAAU,SAACqB,GAAD,OACRhL,EAAMuU,4BAA4B,qBAAsBvJ,IAE1DzE,OAAQoN,EAAmB9P,OAAS8P,EAAmBQ,QACvDlK,YACG0J,EAAmB9P,OAAS8P,EAAmBQ,QAC5CR,EAAmBpL,aACnB,SAKZ,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,iHACNC,eAAe,GACfvG,MAAOI,EAAeJ,MACtBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,iBAAkB/Q,IAEtD+C,OAAQ3C,EAAeC,OAASD,EAAeuQ,QAC/ClK,YACGrG,EAAeC,OAASD,EAAeuQ,QACpCvQ,EAAe2E,aACf,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,iHACNC,eAAe,GACfvG,MAAOM,EAAiBN,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQzC,EAAiBD,OAASC,EAAiBqQ,QACnDlK,YACGnG,EAAiBD,OAASC,EAAiBqQ,QACxCrQ,EAAiByE,aACjB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,4GACNC,eAAe,GACfvG,MAAOoQ,EAAiBpQ,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQqN,EAAiB/P,OAAS+P,EAAiBO,QACnDlK,YACG2J,EAAiB/P,OAAS+P,EAAiBO,QACxCP,EAAiBrL,aACjB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,sGACNC,eAAe,GACfvG,MAAOqQ,EAAgBrQ,MACvBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,kBAAmB/Q,IAEvD+C,OAAQsN,EAAgBhQ,OAASgQ,EAAgBM,QACjDlK,YACG4J,EAAgBhQ,OAASgQ,EAAgBM,QACtCN,EAAgBtL,aAChB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,kHACNC,eAAe,GACfvG,MAAOsQ,EAAkBtQ,MACzBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,oBAAqB/Q,IAEzD+C,OAAQuN,EAAkBjQ,OAASiQ,EAAkBK,QACrDlK,YACG6J,EAAkBjQ,OAASiQ,EAAkBK,QAC1CL,EAAkBvL,aAClB,QAIV,kBAACjG,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,IAAD,CACEtC,UAAWN,EAAQkT,MACnB3B,SAAUxR,EAAMsU,WAChBxK,MAAM,4GACNC,eAAe,GACfvG,MAAOuQ,EAAiBvQ,MACxBwG,aAAa,IACbL,SAAU,SAAC6K,EAAGhR,GAAJ,OACRxD,EAAMuU,4BAA4B,mBAAoB/Q,IAExD+C,OAAQwN,EAAiBlQ,OAASkQ,EAAiBI,QACnDlK,YACG8J,EAAiBlQ,OAASkQ,EAAiBI,QACxCJ,EAAiBxL,aACjB,UCpJVlJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJE,MAAO,OACP,qBAAsB,CACpBiV,QAAS,eAGbgF,UAAW,CACTC,UAAW,cAEbC,WAAY,CACV7I,YAAazR,EAAMgK,QAAQ,IAE7BuQ,aAAc,CACZ3P,UAAW5K,EAAMgK,QAAQ,GACzBH,aAAc7J,EAAMgK,QAAQ,QAYhC,IAmIewQ,GAnIa,SAAC/Z,GAC3B,IAAMC,EAAUZ,KADqB,EAED+M,IAAMlM,SAAS,GAFd,mBAE9B8Z,EAF8B,KAElBC,EAFkB,KAG/BC,EAVC,CACL,2JACA,iKACA,+FAiFF,OACE,yBAAK3Z,UAAWN,EAAQT,MACtB,kBAAC2a,GAAA,EAAD,CAASH,WAAYA,EAAYI,kBAAgB,GAC9CF,EAAMpY,KAAI,SAACgI,GAAD,OACT,kBAACuQ,GAAA,EAAD,CAAMpY,IAAK6H,GACT,kBAACwQ,GAAA,EAAD,CAAWra,QAAS,CAAET,KAAMS,EAAQ0Z,YAAc7P,QAIxD,6BACGkQ,IAAeE,EAAMzL,OACpB,6BACE,kBAACzN,EAAA,EAAD,CAAYT,UAAWN,EAAQ6Z,cAA/B,wKAGA,kBAAC5Q,GAAA,EAAD,CACEjI,QAAQ,YACRrB,MAAM,UACNyB,UAAWC,IACXC,GAAG,SAJL,qFAUF,6BACE,kBAAC,GAAD,KA9Ea,SAACgZ,GACtB,OAAQA,GACN,KAAK,EACH,OACE,kBAAC,GAAD,CACEjH,YAAatT,EAAMsT,YACnBY,sBAAuBlU,EAAMkU,sBAC7BI,YAAY,IAGlB,KAAK,EACH,OACE,kBAAC,GAAD,CACEjH,eAAgBrN,EAAMqN,eACtBkH,4BAA6BvU,EAAMuU,4BACnCD,YAAY,IAGlB,KAAK,EACH,OACE,6BACE,kBAACtT,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAE6R,QAAS,eAHpB,iHAOA,kBAAC,GAAD,CACErB,YAAatT,EAAMsT,YACnBY,sBAAuBlU,EAAMkU,sBAC7BI,YAAY,IAEd,kBAACtT,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAE6R,QAAS,WAHpB,uHAOA,kBAAC,GAAD,CACEtH,eAAgBrN,EAAMqN,eACtBkH,4BAA6BvU,EAAMuU,4BACnCD,YAAY,KAIpB,QACE,MAAO,qBA+BAkG,CACCR,EACAha,EAAMkU,sBACNlU,EAAMuU,4BACNvU,EAAMsT,YACNtT,EAAMqN,iBAGV,yBAAKvK,MAAO,CAAEsG,aAAc,SAC1B,kBAACF,GAAA,EAAD,CACEsI,SAAyB,IAAfwI,EACVjZ,QA9FK,WACjBkZ,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,MA8FvCla,UAAWN,EAAQ4Z,YAHrB,kCAOA,kBAAC3Q,GAAA,EAAD,CAAQjI,QAAQ,YAAYrB,MAAM,UAAUmB,QAnHrC,WACE,IAAfiZ,IACEha,EAAMyV,iBACRwE,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,KAC9Cza,EAAMyU,kBAAkB,gBAEd,IAAfuF,IACEha,EAAM0V,oBACRuE,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,KAC9Cza,EAAMyU,kBAAkB,mBAEd,IAAfuF,GACFha,EAAM0a,iBAwGKV,IAAeE,EAAMzL,OAAS,EAAI,uCAAW,uCCvJxDkM,G,4MACJjX,MAAQ,CACN4P,YAAa,CACXC,UAAW,CACT/P,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXX,SAAU,CACRhQ,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACPsQ,SAAS,GAEXV,UAAW,CACTjQ,MAAO,GACPuR,WAAY,CACVI,SAAS,GAEXtR,OAAO,EACPsQ,SAAS,GAEXyD,SAAU,CACRpU,MAAO,GACPuR,WAAY,CACVQ,WAAW,GAEb1R,OAAO,EACPsQ,SAAS,GAEXT,gBAAiB,CACflQ,MAAO,GACPuR,WAAY,CACVI,SAAS,GAEXtR,OAAO,EACPsQ,SAAS,GAEXtP,QAAS,CACPrB,MAAO,GACPuR,WAAY,CACVE,UAAU,GAEZpR,OAAO,EACPsQ,SAAS,IAGbsB,kBAAkB,EAClBpI,eAAgB,CACdsG,mBAAoB,CAClBnQ,MAAO,KACPuR,WAAY,CACVM,QAAQ,GAEVxR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXvQ,eAAgB,CACdJ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXrQ,iBAAkB,CAChBN,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXP,iBAAkB,CAChBpQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXN,gBAAiB,CACfrQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXL,kBAAmB,CACjBtQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,GAEXJ,iBAAkB,CAChBvQ,MAAO,GACPuR,WAAY,CACVO,UAAU,GAEZzR,OAAO,EACP0E,aAAc,GACd4L,SAAS,IAGbuB,qBAAqB,G,EAGvBgF,aAAe,WACb,IAAM7E,EAAe,CACnBvC,YAAa,CACXC,UAAW,EAAK7P,MAAM4P,YAAYC,UAAU/P,MAC5CgQ,SAAU,EAAK9P,MAAM4P,YAAYE,SAAShQ,MAC1CiQ,UAAW,EAAK/P,MAAM4P,YAAYG,UAAUjQ,MAC5CkQ,gBAAiB,EAAKhQ,MAAM4P,YAAYI,gBAAgBlQ,MACxDqB,QAAS,EAAKnB,MAAM4P,YAAYzO,QAAQrB,OAE1C6J,eAAgB,CACdsG,mBAAoB,EAAKjQ,MAAM2J,eAAesG,mBAAmBnQ,MACjEmD,YAAa,CACXC,IAAK,EAAKlD,MAAM2J,eAAezJ,eAAeJ,MAC9CqD,MAAO,EAAKnD,MAAM2J,eAAevJ,iBAAiBN,OAEpDuD,QAAS,CACPD,UAAW,EAAKpD,MAAM2J,eAAeuG,iBAAiBpQ,MACtDyD,SAAU,EAAKvD,MAAM2J,eAAewG,gBAAgBrQ,OAEtDwD,SAAU,CACRF,UAAW,EAAKpD,MAAM2J,eAAeyG,kBAAkBtQ,MACvDyD,SAAU,EAAKvD,MAAM2J,eAAe0G,iBAAiBvQ,SAK3D,EAAKxD,MAAM4a,eACT,EAAKlX,MAAM4P,YAAYG,UAAUjQ,MACjC,EAAKE,MAAM4P,YAAYsE,SAASpU,MAChCqS,I,EAIJ3B,sBAAwB,SAACjS,EAAKuB,GAC5B,IAAIuR,EAAaF,GACfrR,EACA,EAAKE,MAAM4P,YAAYrR,GAAK8S,YAE1Ba,EAAc,2BACb,EAAKlS,MAAM4P,aADE,mBAEfrR,EAFe,2BAGX,EAAKyB,MAAM4P,YAAYrR,IAHZ,IAIduB,MAAOA,EACPK,MAAOkR,EAAWC,QAClBzM,aAAcwM,EAAWxM,aACzB4L,SAAS,MAIT2B,EAAY,EAAKrB,kBAAkB,cAAemB,GAEtD,EAAKxQ,SAAS,CAAEkO,YAAasC,EAAgBH,iBAAkBK,K,EAGjEvB,4BAA8B,SAACtS,EAAKuB,GAClC,IAAIuR,EAAaF,GACfrR,EACA,EAAKE,MAAM2J,eAAepL,GAAK8S,YAE7BgB,EAAiB,2BAChB,EAAKrS,MAAM2J,gBADK,mBAElBpL,EAFkB,2BAGd,EAAKyB,MAAM2J,eAAepL,IAHZ,IAIjBuB,MAAOA,EACPK,MAAOkR,EAAWC,QAClBzM,aAAcwM,EAAWxM,aACzB4L,SAAS,MAIT2B,EAAY,EAAKrB,kBAAkB,iBAAkBsB,GAEzD,EAAK3Q,SAAS,CACZiI,eAAgB0I,EAChBL,oBAAqBI,K,EAIzBrB,kBAAoB,SAACoG,EAAQC,GAC3B,GAAe,gBAAXD,GAAiD,qBAAdC,EAA2B,CAAC,IAE/DvH,EAMEuH,EANFvH,UACAC,EAKEsH,EALFtH,SACAC,EAIEqH,EAJFrH,UACAmE,EAGEkD,EAHFlD,SACAlE,EAEEoH,EAFFpH,gBACA7O,EACEiW,EADFjW,QAEF,GACE0O,EAAU1P,OACV2P,EAAS3P,OACT4P,EAAU5P,OACV+T,EAAS/T,OACT6P,EAAgB7P,OAChBgB,EAAQhB,MAER,OAAO,EAIX,GAAe,gBAAXgX,GAAiD,qBAAdC,EAA2B,CAChE,IAAIlF,EAAc,2BACb,EAAKlS,MAAM4P,aADE,IAEhBC,UAAU,2BACL,EAAK7P,MAAM4P,YAAYC,WADnB,IAEPY,SAAS,EACT5L,aAAc,gLAEhBiL,SAAS,2BACJ,EAAK9P,MAAM4P,YAAYE,UADpB,IAENW,SAAS,EACT5L,aAAc,gLAEhBkL,UAAU,2BACL,EAAK/P,MAAM4P,YAAYG,WADnB,IAEPU,SAAS,EACT5L,aAAc,gLAEhBqP,SAAS,2BACJ,EAAKlU,MAAM4P,YAAYsE,UADpB,IAENzD,SAAS,EACT5L,aAAc,gLAEhBmL,gBAAgB,2BACX,EAAKhQ,MAAM4P,YAAYI,iBADb,IAEbS,SAAS,EACT5L,aAAc,gLAEhB1D,QAAQ,2BACH,EAAKnB,MAAM4P,YAAYzO,SADrB,IAELsP,SAAS,EACT5L,aAAc,kLAGlB,EAAKnD,SAAS,CAAEkO,YAAasC,IAG/B,GAAe,mBAAXiF,GAAoD,qBAAdC,EAA2B,CAAC,IAElEnH,EAOEmH,EAPFnH,mBACA/P,EAMEkX,EANFlX,eACAE,EAKEgX,EALFhX,iBACA8P,EAIEkH,EAJFlH,iBACAC,EAGEiH,EAHFjH,gBACAC,EAEEgH,EAFFhH,kBACAC,EACE+G,EADF/G,iBAEF,GACEJ,EAAmB9P,OACnBD,EAAeC,OACfC,EAAiBD,OACjB+P,EAAiB/P,OACjBgQ,EAAgBhQ,OAChBiQ,EAAkBjQ,OAClBkQ,EAAiBlQ,MAEjB,OAAO,EAIX,GAAe,mBAAXgX,GAAoD,qBAAdC,EAA2B,CACnE,IAAI/E,EAAiB,2BAChB,EAAKrS,MAAM2J,gBADK,IAEnBsG,mBAAmB,2BACd,EAAKjQ,MAAM2J,eAAesG,oBADb,IAEhBQ,SAAS,EACT5L,aAAc,gLAEhB3E,eAAe,2BACV,EAAKF,MAAM2J,eAAezJ,gBADjB,IAEZuQ,SAAS,EACT5L,aAAc,gLAEhBzE,iBAAiB,2BACZ,EAAKJ,MAAM2J,eAAevJ,kBADf,IAEdqQ,SAAS,EACT5L,aAAc,gLAEhBqL,iBAAiB,2BACZ,EAAKlQ,MAAM2J,eAAeuG,kBADf,IAEdO,SAAS,EACT5L,aAAc,gLAEhBsL,gBAAgB,2BACX,EAAKnQ,MAAM2J,eAAewG,iBADhB,IAEbM,SAAS,EACT5L,aAAc,gLAEhBuL,kBAAkB,2BACb,EAAKpQ,MAAM2J,eAAeyG,mBADd,IAEfK,SAAS,EACT5L,aAAc,gLAEhBwL,iBAAiB,2BACZ,EAAKrQ,MAAM2J,eAAe0G,kBADf,IAEdI,SAAS,EACT5L,aAAc,kLAGlB,EAAKnD,SAAS,CAAEiI,eAAgB0I,IAGlC,OAAO,G,uDAIP,OACE,6BACE,kBAAC/U,EAAA,EAAD,CACE8B,MAAO,CAAErC,SAAU,WAAYoK,IAAK,OAAQD,MAAO,SAEnD,kBAAC8N,GAAA,EAAD,CAAMrX,UAAWC,IAASC,GAAG,QAAQN,QAAQ,SAA7C,mCAIF,kBAACD,EAAA,EAAD,CACEC,QAAQ,KACR6H,MAAM,SACNhG,MAAO,CAAEsG,aAAc,SAHzB,sEAOCzG,KAAK3C,MAAMuI,aACV,kBAACiP,GAAA,EAAD,CAAOiB,SAAS,SAAS9V,KAAK3C,MAAMuI,cAClC,KACJ,kBAAC,GAAD,CACE+K,YAAa3Q,KAAKe,MAAM4P,YACxBmC,iBAAkB9S,KAAKe,MAAM+R,iBAC7BpI,eAAgB1K,KAAKe,MAAM2J,eAC3BqI,oBAAqB/S,KAAKe,MAAMgS,oBAChCxB,sBAAuBvR,KAAKuR,sBAC5BK,4BAA6B5R,KAAK4R,4BAClCE,kBAAmB9R,KAAK8R,kBACxBiG,aAAc/X,KAAK+X,oB,GAnWEzX,aAuXhB0V,gBAbS,SAACjV,GACvB,MAAO,CACL6E,aAAc7E,EAAM6C,UAIG,SAACgQ,GAC1B,MAAO,CACLqE,eAAgB,SAACjD,EAAOC,EAAUtE,GAAlB,OACdiD,EXnUsB,SAACoB,EAAOC,EAAU/B,GAC5C,OAAO,SAACU,GACNA,EAxDK,CACLtR,KCNsB,eD+DtB,IAAM4T,EAAW,CACflB,MAAOA,EACPC,SAAUA,EACVkB,mBAAmB,GAGjBC,EAAG,wEAAoEpU,EAAOqU,cAElF7V,EACGqE,KAAKuR,EAAKF,GACV3S,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAM8S,EAAiB,IAAI5U,MACzB,IAAIA,MAAO4K,UAAsC,IAA1B9I,EAASkI,KAAK6K,WAGvC7R,aAAa8R,QAAQ,QAAShT,EAASkI,KAAK4H,SAC5C5O,aAAa8R,QAAQ,iBAAkBF,GACvC5R,aAAa8R,QAAQ,SAAUhT,EAASkI,KAAK+K,SAE7C7C,EAASP,GAAY7P,EAASkI,KAAK4H,QAAS9P,EAASkI,KAAK+K,UAC1D7C,EAASF,GAAiBlQ,EAASkI,KAAK6K,YAExCrD,EAAY,OAAa1P,EAASkI,KAAK+K,QACvCjW,EACCqE,KADD,2BAC0BrB,EAASkI,KAAK4H,SAAWJ,GAClD3P,MAAK,SAACC,GACLC,QAAQC,IAAIF,MAEbwB,OAAM,SAACpB,GACNH,QAAQC,IAAIE,SAGfoB,OAAM,SAACpB,GACNH,QAAQC,IAAIE,GACZgQ,EAASL,GAAS3P,EAAMJ,SAASkI,KAAK9H,YW4R/B8S,CAAqB1B,EAAOC,EAAUtE,QAItCqF,CAA6CgC,ICpXtDI,G,kLAEFpY,KAAK3C,MAAMgb,oB,+BAIX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9b,KAAK,QAAQkC,UAAWqW,KAC/B,kBAAC,IAAD,CAAOvY,KAAK,gBAAgBkC,UAAWsZ,KACvC,kBAAC,IAAD,CAAUpZ,GAAG,WAgBjB,OAZIoB,KAAK3C,MAAM4C,SACbqY,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9b,KAAK,UAAUkC,UAAW+L,KACjC,kBAAC,IAAD,CAAOjO,KAAK,mBAAmBkC,UAAWoC,KAC1C,kBAAC,IAAD,CAAOtE,KAAK,WAAWkC,UAAW6Q,KAClC,kBAAC,IAAD,CAAO/S,KAAK,WAAWkC,UAAWmU,KAClC,kBAAC,IAAD,CAAOrW,KAAK,UAAUkC,UAAWiY,KACjC,kBAAC,IAAD,CAAU/X,GAAG,uBAIZ,kBAAC,EAAD,CAAQqB,OAAQD,KAAK3C,MAAM4C,QAASqY,O,GA1B7BhY,aA0CH0V,gBAZS,SAACjV,GACvB,MAAO,CACLd,OAAwB,OAAhBc,EAAM6D,UAIS,SAACgP,GAC1B,MAAO,CACLyE,gBAAiB,kBAAMzE,GZqElB,SAACA,GACN,IAAMhP,EAAQF,aAAaC,QAAQ,SACnC,GAAKC,EAEE,CACL,IAAM0R,EAAiB,IAAI5U,KAAKgD,aAAaC,QAAQ,mBACrD,GAAI2R,GAAkB,IAAI5U,KACxBkS,EAASJ,UACJ,CACL,IAAM/O,EAASC,aAAaC,QAAQ,UACpCiP,EAASP,GAAYzO,EAAOH,IAC5BmP,EACEF,IACG4C,EAAehK,WAAY,IAAI5K,MAAO4K,WAAa,YAV1DsH,EAASJ,aYpEAwC,CAA6CoC,IC5CxCG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iCCjBSC,kBCDFC,GAAe,SAACC,EAAWC,GACtC,OAAO,2BACFD,GACAC,ICADC,GAAe,CACnBpU,MAAO,KACPH,OAAQ,KACRb,MAAO,KACPqS,SAAS,GAGLgD,GAAY,SAAClY,GACjB,OAAO8X,GAAa9X,EAAO,CAAE6C,MAAO,KAAMqS,SAAS,KAG/C5C,GAAc,SAACtS,EAAOmY,GAC1B,OAAOL,GAAa9X,EAAO,CACzB6D,MAAOsU,EAAO5F,QACd7O,OAAQyU,EAAOzU,OACfb,MAAO,KACPqS,SAAS,KAIP1C,GAAW,SAACxS,EAAOmY,GACvB,IAAItT,EAkBJ,OAjBAnC,QAAQC,IAAIwV,EAAOtV,OAGjBgC,EADwB,MAAtBsT,EAAOtV,MAAMuV,KACA,gTAEO,MAAtBD,EAAOtV,MAAMuV,MACY,iBAAzBD,EAAOtV,MAAMwV,QAEE,uMAEO,MAAtBF,EAAOtV,MAAMuV,MACY,oBAAzBD,EAAOtV,MAAMwV,QAEE,kPAEA,ySAEVP,GAAa9X,EAAO,CACzB6C,MAAOgC,EACPqQ,SAAS,KAIPzC,GAAa,SAACzS,GAClB,OAAO8X,GAAa9X,EAAO,CAAE6D,MAAO,KAAMH,OAAQ,QAkBrC4U,GAfC,WAAmC,IAAlCtY,EAAiC,uDAAzBiY,GAAcE,EAAW,uCAChD,OAAQA,EAAO5W,MACb,IftDsB,aeuDpB,OAAO2W,GAAUlY,GACnB,IfvDwB,eewDtB,OAAOsS,GAAYtS,EAAOmY,GAC5B,IfxDqB,YeyDnB,OAAO3F,GAASxS,EAAOmY,GACzB,IfzDuB,ce0DrB,OAAO1F,GAAWzS,GACpB,QACE,OAAOA,IC9CPuY,GAAmBd,OAAOe,sCAAwCC,KAElEC,GAAQC,aAAYC,GAASL,GAAiBM,aAAgBC,QAE9DC,GACJ,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,CAAY3U,QAASA,GAASiV,SAAU,KACtC,kBAAC,KAAD,CACEC,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,UAGd,kBAAC,GAAD,SAMRC,IAASC,OAAOP,GAAKQ,SAASC,eAAe,SJ8FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnX,MAAK,SAAAwU,GACjCA,EAAa4C,iB","file":"static/js/main.e42679c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon/> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon/> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon/> },\r\n  { name: \"Профиль\", path: \"/profile\", icon: <AccountCircleIcon/> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\"\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const [sectionTitle, setSectionTitle] = useState(\"Показания\");\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {sectionTitle}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./Layout.css\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{width: \"100%\"}}>\r\n            <AppBar />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\nimport CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: { value: \"\", valid: true },\r\n      electricityNight: { value: \"\", valid: true },\r\n      coldWaterKitchen: { value: \"\", valid: true },\r\n      coldWaterBathroom: { value: \"\", valid: true },\r\n      hotWaterKitchen: { value: \"\", valid: true },\r\n      hotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    emailData: {\r\n      recipient: CONFIG.RECIPIENT,\r\n      address: CONFIG.ADDRESS,\r\n    },\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, value) => {\r\n    //Обновляем показатель\r\n    const updatedCount = value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.state.emailData.recipient,\r\n      address: this.state.emailData.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      this.state.monthYear.year,\r\n      this.state.monthYear.month,\r\n      1,\r\n      5,\r\n      0,\r\n      0,\r\n      0\r\n    ).toISOString();\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: { today: dateOfIndicators, year: this.state.monthYear.year },\r\n      userId: localStorage.getItem('userId')\r\n    };\r\n    const token = localStorage.getItem('token');\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        this.setState({ modalOpen: false });\r\n        this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, value) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, value) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Проверьте показатели за{\" \"}\r\n              {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n              {this.state.monthYear.year} г.\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Электроэнергия\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    День:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.electricityDay.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Ночь:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.electricityNight.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Кухня\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.coldWaterKitchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.hotWaterKitchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Ванная\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.coldWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.hotWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Подать показания\r\n        </Typography>\r\n\r\n        <Card className=\"card\">\r\n          <CardContent className=\"cardPadding\">\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Месяц и год\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl style={{ width: \"100%\" }}>\r\n                  <InputLabel>Месяц</InputLabel>\r\n                  <Select\r\n                    value={this.state.monthYear.month || 0}\r\n                    onChange={(event) =>\r\n                      this.setStateMonth(event, event.target.value)\r\n                    }\r\n                  >\r\n                    {MONTHS_LIST.map((item) => (\r\n                      <MenuItem key={item.key} value={item.value}>\r\n                        {item.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl style={{ width: \"100%\" }}>\r\n                  <InputLabel>Год</InputLabel>\r\n                  <Select\r\n                    value={this.state.monthYear.year || 2020}\r\n                    onChange={(event) =>\r\n                      this.setStateYear(event, event.target.value)\r\n                    }\r\n                  >\r\n                    {this.getCurrentYear().map((item) => (\r\n                      <MenuItem key={item.key} value={item.value}>\r\n                        {item.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Электроэнергия\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"День\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.electricityDay.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"electricityDay\", value)\r\n                  }\r\n                  error={!this.state.indicators.electricityDay.valid}\r\n                  helperText={\r\n                    !this.state.indicators.electricityDay.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Ночь\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.electricityNight.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"electricityNight\", value)\r\n                  }\r\n                  error={!this.state.indicators.electricityNight.valid}\r\n                  helperText={\r\n                    !this.state.indicators.electricityNight.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Кухня\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Холодная вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.coldWaterKitchen.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"coldWaterKitchen\", value)\r\n                  }\r\n                  error={!this.state.indicators.coldWaterKitchen.valid}\r\n                  helperText={\r\n                    !this.state.indicators.coldWaterKitchen.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Горячая вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.hotWaterKitchen.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"hotWaterKitchen\", value)\r\n                  }\r\n                  error={!this.state.indicators.hotWaterKitchen.valid}\r\n                  helperText={\r\n                    !this.state.indicators.hotWaterKitchen.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Ванная\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Холодная вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.coldWaterBathroom.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"coldWaterBathroom\", value)\r\n                  }\r\n                  error={!this.state.indicators.coldWaterBathroom.valid}\r\n                  helperText={\r\n                    !this.state.indicators.coldWaterBathroom.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Горячая вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.hotWaterBathroom.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"hotWaterBathroom\", value)\r\n                  }\r\n                  error={!this.state.indicators.hotWaterBathroom.valid}\r\n                  helperText={\r\n                    !this.state.indicators.hotWaterBathroom.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ textAlign: \"center\", marginTop: \"15px\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={this.modalHandlerOpen}\r\n                >\r\n                  Отправить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IndicatorsInsert);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"-5px\",\r\n    top: \"-5px\"\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root} >\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          Удалить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"Передайте показания\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, попробуйте обновить страницу.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"Эл-я день:\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"Эл-я ночь:\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"Холодная вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"Горячая вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"Водоотведение:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"Эл-я день:\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"Эл-я ночь:\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"Холодная вода:\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"Горячая вода:\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"Водоотведение:\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  // TODO Починить!\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          new Date(dateStart) <= indicatorsDate &&\r\n          new Date(dateEnd) >= indicatorsDate\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            new Date(dateStart) <= indicatorsDate &&\r\n            new Date(dateEnd) >= indicatorsDate\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    console.log(\r\n      \"Холодная вода: \",\r\n      coldWater,\r\n      \"Горячая вода: \",\r\n      hotWater,\r\n      \"Тариф на воду: \",\r\n      waterTariff,\r\n      \"Водоотведение: \",\r\n      disposalWater,\r\n      \"Тариф на водоотведение: \",\r\n      disposalTariff\r\n    );\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(OutlayDetails);\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    flexGrow: 1,\r\n  },\r\n  textFieldMargin: {\r\n    marginRight: \"15px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    right: \"30px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <FormControl\r\n              className={\r\n                classes.textFieldMargin +\r\n                \" \" +\r\n                classes.textField +\r\n                \" \" +\r\n                classes.selectPadding\r\n              }\r\n            >\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n              />\r\n\r\n              <KeyboardDatePicker\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd}\r\n                className={classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      cost: 0,\r\n      dateEnd: null,\r\n      dateStart: null,\r\n      name: \"\",\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newState = [...this.state.tariffs];\r\n    let changeIndex = newState.findIndex((item) => item.id === id);\r\n    newState[changeIndex][key] = value;\r\n\r\n    this.setState({ tariffs: newState });\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            Добавить тариф\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Контакты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Ваша почта\"\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Первичные показатели\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"Поле обязательно для заполнения\"\r\n        : \"Пожалуйста, введите корректный email\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"Пароль должен состоять из более чем 6 символов\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"Поле обязательно для заполнения\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0]\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Профиль пользователя\r\n        </Typography>\r\n        {this.state.userDetails === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n    \r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n        .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/UI/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/UI/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/UI/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/UI/AuthComponents/AuthAlert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false,\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\",\r\n    },\r\n    willSend: true,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors,\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n            Система коммунальных показателей\r\n          </Typography>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n          <Typography>\r\n            <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n              Еще нет аккаунта? Регистрация\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched\r\n              ? userEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Пароль\"\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete='new-password'\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? password.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Введите персональные данные\",\r\n    \"Введите первичные показатели\",\r\n    \"Проверьте данные\",\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              Персональные данные\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              Первичные показатели\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Регистрация успешно завершена\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              Войти в систему\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Назад\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Готово\" : \"Далее\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from '../../components/Helpers/FormHelper'\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ position: \"absolute\", top: \"10px\", right: \"15px\" }}\r\n        >\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Регистрация\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">{this.props.errorMessage}</Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n  \r\n  if (action.error.code === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email уже существует\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email еще не зарегистрирован\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport history from \"./store/history\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter history={history} basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}