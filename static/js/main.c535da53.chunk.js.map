{"version":3,"sources":["axios-main.js","api/auth.js","api/users.js","store/actions/auth.js","store/actions/actionTypes.js","components/Languages/Dictionaries/index.js","components/Languages/Dictionaries/ru.js","components/Languages/Dictionaries/en.js","components/Languages/Language.js","components/Languages/LanguageSelector.js","components/UI/Text/Text.js","components/Navigation/AppBar.js","hoc/Layout/Theme.js","hoc/Layout/Layout.js","components/Helpers/FormHelper.js","components/UI/AuthComponents/AuthAlert.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","containers/Authorization/Authorization.js","containers/Authorization/Logout/Logout.js","components/UI/CardBody/CardBody.js","components/Registration/StepOne.js","components/UI/NumberTextField/NumberTextField.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/Registration/Registration.js","containers/ForgotPassword/ForgotPassword.js","api/indicators.js","components/IndicatorsInsert/Constants.js","components/UI/Switch/Switch.js","components/IndicatorsInsert/DialogCheck.js","components/IndicatorsInsert/Indicators.js","containers/IndicatorsInsert/IndicatorsInsert.js","api/tariffs.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","containers/UsersProfile/UsersProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["instance","axios","create","baseURL","sendOobCode","requestData","url","CONFIG","AUTH_API_KEY","post","updateUser","id","token","userData","patch","authSuccess","userId","dispatch","loadUserData","type","idToken","authSuccessDone","authFail","error","auth","email","password","authData","signInWithEmail","returnSecureToken","then","response","console","log","expirationDate","Date","getTime","data","expiresIn","localStorage","setItem","localId","checkAuthTimeout","catch","registration","userFormData","signUp","authLogout","removeItem","expirationTime","setTimeout","get","extractUser","getItem","userDetails","prevIndicators","userIdDb","dataFromDB","Object","keys","dictionaryList","ru","authEmail","authPassword","authSignIn","authSignUp","authForgotPassword","authPasswordRecovery","authEmailSent","authEmailSentText1","authEmailSentText2","authReturn","authSignInShort","emailNotReg","authError","authErrorEmailExist","authErrorEmailNotReg","authErrorInvalidPassword","authErrorOther","regEnterUserDetails","regEnterPrevIndicators","regValidateData","regUserDetails","regPrevIndicators","regSuccess","indications","expenses","tariffs","profile","sendIndicators","sendIndicatorsMonthYear","sendIndicatorsMonth","sendIndicatorsYear","sendIndicatorsElectricity","sendIndicatorsDay","sendIndicatorsNight","sendIndicatorsKitchen","sendIndicatorsBathroom","sendIndicatorsColdWater","sendIndicatorsHotWater","dialogCheckTitle","switchMail","outlayCurrentExpenditure","outlayIndicator","outlayCharge","outlayConsumption","outlayCost","outlayElectricityDay","outlayElectricityNight","outlayColdWater","outlayHotWater","outlayDisposalWater","outlayWaterSupply","outlayElectricity","outlaySendDialogTitle","outlaySendDialogContent","outlayDeleteDialogTitle","outlayDeleteDialogContent","outlayNoData","outlayNoDataYear","outlayErrorNotYetSend","outlaySendSuccess","addTariff","tariffName","tariffCost","tariffDateStart","tariffDateEnd","tariffWater","tariffHotWater","tariffDisposalWater","tariffElectricityDay","tariffElectricityNight","tariffErrorNotYetSend","userProfile","contacts","firstName","lastName","address","userEmail","accountantEmail","primaryIndicators","prevIndicatorsDate","electricityDay","electricityNight","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","systemName","save","send","delete","cancel","recover","loading","saveData","objectDeleted","prev","next","finish","requiredField","unvalidEmail","unvalidPassword","responseError","january","february","march","april","may","june","july","august","september","october","november","december","year","notDefined","en","languageOptions","text","languageIndex","undefined","LanguageContext","createContext","language","dictionary","LanguageProvider","props","languageContext","useContext","useState","setLanguage","setDictionary","provider","selectedLanguage","Provider","value","children","useStyles","makeStyles","rootLight","paddingTop","marginRight","display","color","backgroundColor","selectLight","rootDark","selectDark","LanguageSelector","classes","FormControl","className","theme","Select","onChange","event","find","item","target","indexOf","map","MenuItem","key","Text","tid","APP_MENU_LIST","name","path","icon","ListAlt","EventNote","MonetizationOn","AccountCircle","root","flexGrow","width","button","grow","list","logo","height","padding","background","process","backgroundSize","backgroundPosition","MenuAppBar","sectionTitleName","window","location","hash","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Menu","Typography","variant","aria-controls","aria-haspopup","component","NavLink","to","ExitToApp","Drawer","drawer","anchor","open","onClose","List","ListItem","ListItemIcon","ListItemText","primary","createMuiTheme","typography","h4","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","h5","h6","Layout","document","title","ThemeProvider","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","Component","connect","state","isEmpty","trim","checkFieldValidity","rules","validation","isValid","errorMessage","required","isEmail","test","isPassord","length","CSSAlert","withStyles","marginBottom","Alert","AuthAlert","CSSButton","textTransform","margin","Button","AuthButton","createStyles","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","React","showPassword","setState","InputProps","endAdornment","InputAdornment","Authorization","valid","touched","authValid","inputHandler","newAuthState","formValid","checkFormValidity","stateData","formSenderHandler","onAuth","top","right","align","severity","label","helperText","onKeyUp","spacing","Link","actions","Logout","useDispatch","useEffect","a","cardPadding","CardBody","Card","CardContent","StepOne","disabled","isDisabled","autoComplete","fullWidth","updateUserDataInState","sm","NumberTextField","thousandSeparator","decimalSeparator","decimalScale","allowNegative","customInput","field","StepTwo","utils","DateFnsUtils","DatePicker","clearable","format","date","updatePrevIndicatorsInState","stepLabel","wordBreak","backButton","instructions","marginTop","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","index","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","userDetailsValid","prevIndicatorsValid","Registration","electricity","day","night","kitchen","coldWater","hotWater","bathroom","onRegistration","newUserDetails","newPrevIndicators","formId","scrollTo","ForgotPassword","emailSend","newItem","sendPasswordRecovery","requestType","message","enterEmail","information","insertIndicators","indicatorsData","extractIndicators","deleteIndicators","MONTHS_LIST","rusName","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","switchChange","DialogCheck","Dialog","modalOpen","modalHandlerClose","maxWidth","DialogTitle","monthYear","month","DialogContent","dividers","sendDataToAccountant","indicators","coldWaterKitchen","hotWaterKitchen","coldWaterBathroom","hotWaterBathroom","DialogActions","autoFocus","Indicators","InputLabel","setStateMonthYear","getCurrentYear","updateIndicatorsInState","textAlign","disableElevation","indicatorsValid","modalHandlerOpen","IndicatorsInsert","getMonth","getFullYear","newIndicators","ind","preventDefault","updatedIndicators","sendEmailHandler","templateParams","recipient","emailjs","status","dateOfIndicators","UTC","setUTCHours","currentDate","today","toUTCString","history","push","getCurrentMonth","currentYear","currentYearList","i","updatedMonthYear","withRouter","insertTariff","tariffData","extractTariff","updateTariff","daleteTariff","flexDirection","paragraph","Loader","CircularProgress","buttonClose","buttonSend","left","Outlay","indicatorsList","costWaterSupply","costElectricity","indicatorMonth","handleSendDialogOpen","disableRipple","disableFocusRipple","Email","handleDeleteDialogOpen","Close","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","intake","outlay","colSpan","boxShadow","TabUI","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","aria-labelledby","aria-describedby","dialogTitle","DialogContentText","dialogContent","handleContinue","activeButtonName","OutlayDetails","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","sendDialogOpen","sendIndicatorId","getDataFromFirebase","promise1","promise2","Promise","all","values","getUserDetails","getListOfTariffs","getListOfIndicators","countOutlay","tariff","sort","b","indicator","getOneIndicator","enqueueSnackbar","preventDuplicate","deleteItemFromIndicators","removeIndicatorFromState","removeId","newIndicatorsList","filter","handleDeleteDialogClose","handleDeleteDialogContinue","handleSendDialogClose","handleSendDialogContinue","countCostElectricity","indicatorsDate","getDate","e","electricityDayTariff","dateStart","dateEnd","setDate","cost","electricityNightTariff","toFixed","countCostWaterSupply","disposalWater","waterTariff","disposalTariff","newProps","withSnackbar","paddingBottom","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonIconSuccessDisabled","buttonSuccess","backgorundColor","TariffCard","tariffValid","setDisabled","Edit","updateItemInTariffs","insertItemToTariffs","tarriffIndex","Save","updateTariffInState","FormHelperText","prefix","textFieldMargin","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","Number","slice","newTariffs","removeTariffFromState","addTariffToState","newTariffsList","unshift","newTariff","changeIndex","findIndex","tariffCards","alignContent","wrap","buttonPosition","UserCard","updateUserDetails","UsersProfile","updateState","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.c535da53.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import CONFIG from \"../configuration.json\";\r\nimport axios from \"../axios-main\";\r\n\r\nexport const signInWithEmail = (authData) => {\r\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n  return axios.post(url, authData);\r\n};\r\n\r\nexport const signUp = (authData) => {\r\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n  return axios.post(url, authData);\r\n};\r\n\r\nexport const sendOobCode = (requestData) => {\r\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${CONFIG.AUTH_API_KEY}`;\r\n  return axios.post(url, requestData);\r\n};\r\n","import axios from \"../axios-main\";\r\n\r\nexport const insertUser = (token, userData) => {\r\n  return axios.post(`/users.json?auth=${token}`, userData);\r\n};\r\n\r\nexport const extractUser = (token, userId) => {\r\n  return axios.get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`);\r\n};\r\n\r\nexport const updateUser = (id, token, userData) => {\r\n  return axios.patch(`/users/${id}.json?auth=${token}`, userData)\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport { signInWithEmail, signUp } from \"../../api/auth\";\r\nimport { insertUser, extractUser } from \"../../api/users\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccessDone = (token, userId) => {\r\n  return { type: actionTypes.AUTH_SUCCESS, idToken: token, userId: userId };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(loadUserData());\r\n    dispatch(authSuccessDone(token, userId));\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    signInWithEmail(authData)\r\n      .then((response) => {\r\n        console.log(\"auth\", response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    signUp(authData)\r\n      .then((response) => {\r\n        console.log(\"registration\", response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n\r\n        insertUser(response.data.idToken, userFormData)\r\n          .then((response) => {\r\n            console.log(\"registration insertUser\", response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"[ERROR] registration insertUser\", error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] registration\", error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    extractUser(token, userId)\r\n      .then((response) => {\r\n        console.log(\"extractUser\", response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] extractUser\", error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import ru from \"./ru\";\r\nimport en from \"./en\";\r\n\r\nexport const dictionaryList = {\r\n  ru,\r\n  en,\r\n};\r\n\r\nexport const languageOptions = [\r\n  { id: \"ru\", text: \"Русский\" },\r\n  { id: \"en\", text: \"English\" },\r\n];\r\n","const ru = {\r\n  // Форма входа\r\n  authEmail: \"Почта\",\r\n  authPassword: \"Пароль\",\r\n  authSignIn: \"Войти в аккаунт\",\r\n  authSignUp: \"Еще нет аккаунта? Регистрация\",\r\n  authForgotPassword: \"Забыли пароль?\",\r\n  authPasswordRecovery:\r\n    \"Для восстановления пароля введите ваш адрес электронной почты и вам будет отправлено письмо с дальнейшими инструкциями.\",\r\n  authEmailSent: \"Письмо отправлено!\",\r\n  authEmailSentText1: \"Вам было отправлено письмо на адрес электронной почты\",\r\n  authEmailSentText2:\r\n    \"с дальнейшими инструкциями. Пожалуйста проверьте ваш почтовый ящик.\",\r\n  authReturn: \"Вернутся на Форму входа\",\r\n  authSignInShort: \"Войти\",\r\n  emailNotReg: \"Данный email не зарегистрирован\",\r\n  authError: \"Ошибка авторизации, проверьте данные и повторите попытку\",\r\n  authErrorEmailExist: \"Пользователь с таким Email уже существует\",\r\n  authErrorEmailNotReg: \"Пользователь с таким Email еще не зарегистрирован\",\r\n  authErrorInvalidPassword: \"Не правильно указан пароль\",\r\n  authErrorOther: \"Произошла ошибка, попробуйте повторите попытку позднее\",\r\n\r\n  // Форма регистрации\r\n  registration: \"Регистрация\",\r\n  regEnterUserDetails: \"Введите персональные данные\",\r\n  regEnterPrevIndicators: \"Введите первичные показатели\",\r\n  regValidateData: \"Проверьте данные\",\r\n  regUserDetails: \"Персональные данные\",\r\n  regPrevIndicators: \"Первичные показатели\",\r\n  regSuccess: \"Регистрация успешно завершена\",\r\n\r\n  // Навигация\r\n  indications: \"Показания\",\r\n  expenses: \"Расходы\",\r\n  tariffs: \"Тарифы\",\r\n  profile: \"Профиль\",\r\n\r\n  // Форма подачи показаний\r\n  sendIndicators: \"Подать показания\",\r\n  sendIndicatorsMonthYear: \"Месяц и год\",\r\n  sendIndicatorsMonth: \"Месяц\",\r\n  sendIndicatorsYear: \"Год\",\r\n  sendIndicatorsElectricity: \"Электроэнергия\",\r\n  sendIndicatorsDay: \"День\",\r\n  sendIndicatorsNight: \"Ночь\",\r\n  sendIndicatorsKitchen: \"Кухня\",\r\n  sendIndicatorsBathroom: \"Ванная\",\r\n  sendIndicatorsColdWater: \"Холодная вода\",\r\n  sendIndicatorsHotWater: \"Горячая вода\",\r\n  dialogCheckTitle: \"Проверьте показатели за\",\r\n  switchMail: \"Отправить в бухгалтерию\",\r\n\r\n  // Форма показателей\r\n  outlayCurrentExpenditure: \"Текущие расходы\",\r\n  outlayIndicator: \"Показатель\",\r\n  outlayCharge: \"Расход\",\r\n  outlayConsumption: \"Потребление\",\r\n  outlayCost: \"Расчет стоимости\",\r\n  outlayElectricityDay: \"Эл-я день:\",\r\n  outlayElectricityNight: \"Эл-я ночь:\",\r\n  outlayColdWater: \"Холодная вода:\",\r\n  outlayHotWater: \"Горячая вода:\",\r\n  outlayDisposalWater: \"Водоотведение:\",\r\n  outlayWaterSupply: \"Водоснабжение\",\r\n  outlayElectricity: \"Электроэнергия\",\r\n  outlaySendDialogTitle: \"Отправка показателей\",\r\n  outlaySendDialogContent:\r\n    \"Вы уверены, что хотите отправить показатели на адрес электронной почты бухгалтерии?\",\r\n  outlayDeleteDialogTitle: \"Вы уверены?\",\r\n  outlayDeleteDialogContent:\r\n    \"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\",\r\n  outlayNoData: \"Нет данных на за\",\r\n  outlayNoDataYear: \"год\",\r\n  outlayErrorNotYetSend: \"Показания еще не переданы\",\r\n  outlaySendSuccess: \"Данные успешно переданы на почту бухгалтерии!\",\r\n\r\n  // Форма тарифов\r\n  addTariff: \"Добавить тариф\",\r\n  tariffName: \"Наименование\",\r\n  tariffCost: \"Стоимость\",\r\n  tariffDateStart: \"Действителен c\",\r\n  tariffDateEnd: \"Действителен по\",\r\n  tariffWater: \"Подача воды\",\r\n  tariffHotWater: \"Подогрев воды\",\r\n  tariffDisposalWater: \"Водоотведение\",\r\n  tariffElectricityDay: \"Электро-ия. день\",\r\n  tariffElectricityNight: \"Электро-ия. ночь\",\r\n  tariffErrorNotYetSend: \"Тарифы еще не созданы\",\r\n\r\n  // Форма профиля пользователя\r\n  userProfile: \"Профиль\",\r\n  contacts: \"Контакты\",\r\n  firstName: \"Имя\",\r\n  lastName: \"Фамилия\",\r\n  address: \"Адрес\",\r\n  userEmail: \"Ваша почта\",\r\n  accountantEmail: \"Почта бухгалтерии\",\r\n  primaryIndicators: \"Первичные показатели\",\r\n  prevIndicatorsDate: \"Дата первичных показателей\",\r\n  electricityDay: \"Электроэнергия: День\",\r\n  electricityNight: \"Электроэнергия: Ночь\",\r\n  kitchenColdWater: \"Кухня: Холодная вода\",\r\n  kitchenHotWater: \"Кухня: Горячая вода\",\r\n  bathroomColdWater: \"Ванная: Холодная вода\",\r\n  bathroomHotWater: \"Ванная: Горячая вода\",\r\n\r\n  // Общее\r\n  systemName: \"Система коммунальных показателей\",\r\n  save: \"Сохранить\",\r\n  send: \"Отправить\",\r\n  delete: \"Удалить\",\r\n  cancel: \"Отмена\",\r\n  recover: \"Восстановить\",\r\n  loading: \"Загрузка\",\r\n  saveData: \"Данные успешно сохранены!\",\r\n  objectDeleted: \"Объект успешно удален!\",\r\n  prev: \"Назад\",\r\n  next: \"Вперед\",\r\n  finish: \"Готово\",\r\n  requiredField: \"Поле обязательно для заполнения\",\r\n  unvalidEmail: \"Пожалуйста, введите корректный email\",\r\n  unvalidPassword: \"Пароль должен состоять из более чем 6 символов\",\r\n  responseError: \"Произошла ошибка, попробуйте обновить страницу\",\r\n\r\n  //Месяцы\r\n  january: \"Январь\",\r\n  february: \"Февраль\",\r\n  march: \"Март\",\r\n  april: \"Апрель\",\r\n  may: \"Май\",\r\n  june: \"Июнь\",\r\n  july: \"Июль\",\r\n  august: \"Август\",\r\n  september: \"Сентябрь\",\r\n  october: \"Октябрь\",\r\n  november: \"Ноябрь\",\r\n  december: \"Декабрь\",\r\n  year: \"год\",\r\n  notDefined: \"Не определен\",\r\n};\r\n\r\nexport default ru;\r\n","const en = {\r\n  // Auth form\r\n  authEmail: \"Email\",\r\n  authPassword: \"Password\",\r\n  authSignIn: \"Sign in\",\r\n  authSignUp: \"Don't have an account yet? Sign up\",\r\n  authForgotPassword: \"Forgot password?\",\r\n  authPasswordRecovery:\r\n    \"To restore your password, enter your email address and you will be sent an email with further instructions.\",\r\n  authEmailSent: \"Email sent!\",\r\n  authEmailSentText1: \"An email was sent to your email address\",\r\n  authEmailSentText2: \"with further instructions. Please check your email box.\",\r\n  authReturn: \"Return to the Login form\",\r\n  authSignInShort: \"Sign in\",\r\n  emailNotReg: \"This email isn't registered\",\r\n  authError: \"Authorization error, check the data and try again\",\r\n  authErrorEmailExist: \"The user with this Email already exists\",\r\n  authErrorEmailNotReg: \"The user with this Email isn't registered yet\",\r\n  authErrorInvalidPassword: \"Invalid password\",\r\n  authErrorOther: \"An error occurred, please try again later\",\r\n\r\n  // Registration form\r\n  registration: \"Registration\",\r\n  regEnterUserDetails: \"Enter your personal information\",\r\n  regEnterPrevIndicators: \"Enter the primary indicators\",\r\n  regValidateData: \"Validate data\",\r\n  regUserDetails: \"Personal information\",\r\n  regPrevIndicators: \"Primary indicators\",\r\n  regSuccess: \"Registration completed successfully\",\r\n\r\n  // Navigation\r\n  indications: \"Indications\",\r\n  expenses: \"Expenses\",\r\n  tariffs: \"Tariffs\",\r\n  profile: \"Profile\",\r\n\r\n  // Send indicators form\r\n  sendIndicators: \"Send indicators\",\r\n  sendIndicatorsMonthYear: \"Month and year\",\r\n  sendIndicatorsMonth: \"Month\",\r\n  sendIndicatorsYear: \"Year\",\r\n  sendIndicatorsElectricity: \"Electricity\",\r\n  sendIndicatorsDay: \"Day\",\r\n  sendIndicatorsNight: \"Night\",\r\n  sendIndicatorsKitchen: \"Kitchen:\",\r\n  sendIndicatorsBathroom: \"Bathroom\",\r\n  sendIndicatorsColdWater: \"Cold water\",\r\n  sendIndicatorsHotWater: \"Hot water\",\r\n  dialogCheckTitle: \"Check the indicators for\",\r\n  switchMail: \"Send to the accountant\",\r\n\r\n  // Outlay form\r\n  outlayCurrentExpenditure: \"Current expenditure\",\r\n  outlayIndicator: \"Indicator\",\r\n  outlayCharge: \"Charge\",\r\n  outlayConsumption: \"Consumption\",\r\n  outlayCost: \"Cost calculation\",\r\n  outlayElectricityDay: \"El. day:\",\r\n  outlayElectricityNight: \"El. night:\",\r\n  outlayColdWater: \"Cold water:\",\r\n  outlayHotWater: \"Hot water:\",\r\n  outlayDisposalWater: \"Water disposal:\",\r\n  outlayWaterSupply: \"Water supply\",\r\n  outlayElectricity: \"Electricity\",\r\n  outlaySendDialogTitle: \"Send indicators\",\r\n  outlaySendDialogContent:\r\n    \"Are you sure you want to send indicators to the accounting Department's email address?\",\r\n  outlayDeleteDialogTitle: \"Are you sure?\",\r\n  outlayDeleteDialogContent:\r\n    \"Are you sure you want to delete this item? This process cannot be canceled.\",\r\n  outlayNoData: \"No data for\",\r\n  outlayNoDataYear: \"year\",\r\n  outlayErrorNotYetSend: \"The indicators hasn't been sent yet\",\r\n  outlaySendSuccess: \"The data was successfully sent to the accountant's email!\",\r\n\r\n  // Tariffs form\r\n  addTariff: \"Add tariff\",\r\n  tariffName: \"Name\",\r\n  tariffCost: \"Cost\",\r\n  tariffDateStart: \"Date since\",\r\n  tariffDateEnd: \"Date till\",\r\n  tariffWater: \"Water supply\",\r\n  tariffHotWater: \"Water heating\",\r\n  tariffDisposalWater: \"Water disposal\",\r\n  tariffElectricityDay: \"Electricity day\",\r\n  tariffElectricityNight: \"Electricity night\",\r\n  tariffErrorNotYetSend: \"The tariffs hasn't been created yet\",\r\n\r\n  // User profile form\r\n  userProfile: \"Profile\",\r\n  contacts: \"Contacts\",\r\n  firstName: \"First name\",\r\n  lastName: \"Last name\",\r\n  address: \"Address\",\r\n  userEmail: \"User's Email\",\r\n  accountantEmail: \"Accountant's Email\",\r\n  primaryIndicators: \"Primary indicators\",\r\n  prevIndicatorsDate: \"Date of primary indicators\",\r\n  electricityDay: \"Electricity: Day\",\r\n  electricityNight: \"Electricity: Night\",\r\n  kitchenColdWater: \"Kitchen: Cold water\",\r\n  kitchenHotWater: \"Kitchen: Hot water\",\r\n  bathroomColdWater: \"Bathroom: Cold water\",\r\n  bathroomHotWater: \"Bathroom: Hot water\",\r\n\r\n  // General\r\n  systemName: \"The system of municipal indicators\",\r\n  save: \"Save\",\r\n  send: \"Send\",\r\n  delete: \"Delete\",\r\n  cancel: \"Cancel\",\r\n  recover: \"Recover\",\r\n  loading: \"Loading\",\r\n  saveData: \"Data saved successfully!\",\r\n  objectDeleted: \"The object was successfully deleted!\",\r\n  prev: \"Prev\",\r\n  next: \"Next\",\r\n  finish: \"Finish\",\r\n  requiredField: \"This field is required\",\r\n  unvalidEmail: \"Please enter a valid email address\",\r\n  unvalidPassword: \"The password must consist of more than 6 characters\",\r\n  responseError: \"An error occurred, try refreshing the page\",\r\n\r\n  //Months\r\n  january: \"January\",\r\n  february: \"February\",\r\n  march: \"March\",\r\n  april: \"April\",\r\n  may: \"May\",\r\n  june: \"June\",\r\n  july: \"July\",\r\n  august: \"August\",\r\n  september: \"September\",\r\n  october: \"October\",\r\n  november: \"November\",\r\n  december: \"December\",\r\n  year: \"year\",\r\n  notDefined: \"Not defined\",\r\n};\r\n\r\nexport default en;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport { languageOptions, dictionaryList } from \"./Dictionaries\";\r\n\r\n// create the language context with default selected language\r\nconst languageIndex =\r\n  localStorage.getItem(\"languageIndex\") === undefined\r\n    ? 0\r\n    : +localStorage.getItem(\"languageIndex\");\r\n\r\nexport const LanguageContext = createContext({\r\n  language: languageOptions[languageIndex],\r\n  dictionary: dictionaryList[languageOptions[languageIndex].id],\r\n});\r\n\r\n// it provides the language context to app\r\nexport function LanguageProvider(props) {\r\n  const languageContext = useContext(LanguageContext);\r\n  const [language, setLanguage] = useState(languageContext.language);\r\n  const [dictionary, setDictionary] = useState(languageContext.dictionary);\r\n\r\n  const provider = {\r\n    language,\r\n    dictionary,\r\n    setLanguage: (selectedLanguage) => {\r\n      setLanguage(selectedLanguage); // it will update the language in state\r\n      setDictionary(dictionaryList[selectedLanguage.id]);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={provider}>\r\n      {props.children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { languageOptions } from \"./Dictionaries\";\r\nimport { LanguageContext } from \"./Language\";\r\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  rootLight: {\r\n    paddingTop: \"1px\",\r\n    marginRight: \"5px\",\r\n    \"& .MuiInput-underline:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiSelect-select:focus\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  selectLight: {\r\n    color: \"white\",\r\n  },\r\n  rootDark: {\r\n    paddingTop: \"1px\",\r\n    marginRight: \"5px\",\r\n    \"& .MuiInput-underline:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"#757575\",\r\n    },\r\n    \"& .MuiSelect-select:focus\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  selectDark: {\r\n    color: \"#757575\",\r\n  },\r\n});\r\n\r\nexport default function LanguageSelector(props) {\r\n  const classes = useStyles();\r\n  const languageContext = useContext(LanguageContext);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const selectedLanguage = languageOptions.find(\r\n      (item) => item.id === event.target.value\r\n    );\r\n    // set selected language by calling context method\r\n    languageContext.setLanguage(selectedLanguage);  \r\n    localStorage.setItem(\"languageIndex\", languageOptions.indexOf(selectedLanguage));\r\n  };\r\n\r\n  return (\r\n    <FormControl className={props.theme === \"light\" ? classes.rootLight: classes.rootDark}>\r\n      <Select\r\n        value={languageContext.language.id}\r\n        onChange={handleLanguageChange}\r\n        className={props.theme === \"light\" ? classes.selectLight: classes.selectDark}\r\n      >\r\n        {languageOptions.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { LanguageContext } from \"../../Languages/Language\";\r\n\r\nconst Text = (props) => {\r\n  const languageContext = useContext(LanguageContext);\r\n\r\n  return languageContext.dictionary[props.tid];\r\n};\r\n\r\nexport default Text;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport LanguageSelector from \"../Languages/LanguageSelector\";\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExitToApp,\r\n  Menu,\r\n  ListAlt,\r\n  EventNote,\r\n  MonetizationOn,\r\n  AccountCircle,\r\n} from \"@material-ui/icons\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"indications\", path: \"/send-indicators\", icon: <ListAlt /> },\r\n  { name: \"expenses\", path: \"/outlay\", icon: <EventNote /> },\r\n  { name: \"tariffs\", path: \"/tariffs\", icon: <MonetizationOn /> },\r\n  { name: \"profile\", path: \"/profile\", icon: <AccountCircle /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  logo: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    padding: \"10px 10px 10px 0\",\r\n    background: `url(\"${process.env.PUBLIC_URL}/img/logo.png\") no-repeat`,\r\n    backgroundSize: \"40px\",\r\n    backgroundPosition: \"left\",\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"indications\";\r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"indications\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"expenses\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"tariffs\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"profile\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(\r\n    <Text tid={sectionTitleName} />\r\n  );\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:525px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          {titleShow ? <div className={classes.logo}></div> : null}\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          <LanguageSelector theme=\"light\" />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToApp />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(<Text tid={item.name} />);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={<Text tid={item.name} />} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme();\r\n\r\ntheme.typography.h4 = {\r\n  fontSize: \"2.125rem\",\r\n  fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\r\n  fontWeight: \"400\",\r\n  lineHeight: \"1.235\",\r\n  letterSpacing: \"0.00735em\",\r\n\r\n  \"@media (max-width:767px)\": {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n};\r\n\r\ntheme.typography.h5 = {\r\n  fontSize: \"1.5rem\",\r\n  fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\r\n  fontWeight: \"400\",\r\n  lineHeight: \"1.334\",\r\n  letterSpacing: \"0em\",\r\n\r\n  \"@media (max-width:767px)\": {\r\n    fontSize: \"1.25rem\",\r\n  },\r\n};\r\n\r\ntheme.typography.h6 = {\r\n  fontSize: \"1.25rem\",\r\n  fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\r\n  fontWeight: \"400\",\r\n  lineHeight: \"1.6\",\r\n  letterSpacing: \"0.0075em\",\r\n\r\n  \"@media (max-width:767px)\": {\r\n    fontSize: \"1rem\",\r\n  },\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"./Theme\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    const languageIndex =\r\n      localStorage.getItem(\"languageIndex\") === undefined\r\n        ? 0\r\n        : +localStorage.getItem(\"languageIndex\");\r\n\r\n    if (languageIndex === 0) {\r\n      document.title = \"Система коммунальных показателей\";\r\n    }\r\n    if (languageIndex === 1) {\r\n      document.title = \"The system of municipal indicators\";\r\n    }\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          {this.props.isAuth && (\r\n            <Grid item xs={12} style={{ width: \"100%\" }}>\r\n              <AppBar userDetails={this.props.userDetails} />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <Paper className=\"paper\">{this.props.children}</Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","const isEmpty = (value) => {\r\n  if (typeof value === \"string\") return value.trim() === \"\";\r\n  if (typeof value === \"number\") return value === 0;\r\n  if (value === null) return true;\r\n};\r\n\r\nexport const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = !isEmpty(value) && validation.isValid;\r\n    validation.errorMessage = !validation.isValid ? \"requiredField\" : null;\r\n    if (validation.errorMessage === \"requiredField\") return validation;\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    if (isEmpty(value) && validation.isValid) validation.isValid = true;\r\n    else validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage = !validation.isValid ? \"unvalidEmail\" : null;\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    validation.errorMessage =\r\n      value.length < 6 && value.length > 0 ? \"unvalidPassword\" : null;\r\n  }\r\n\r\n  return validation;\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nexport const AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nexport const AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./Authorization.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthButton,\r\n  AuthInput,\r\n  AuthInputPassword,\r\n  AuthAlert,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link, Grid } from \"@material-ui/core\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\n// Реализация классового компонента формы\r\nclass Authorization extends Component {\r\n  state = {\r\n    auth: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    authValid: false,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state.auth[key].validation);\r\n    let newAuthState = {\r\n      ...this.state.auth,\r\n      [key]: {\r\n        ...this.state.auth[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newAuthState);\r\n\r\n    this.setState({ auth: newAuthState, authValid: formValid });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const { email, password } = stateData;\r\n      if (email.valid && password.valid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newAuthState = {\r\n        ...this.state.auth,\r\n        email: {\r\n          ...this.state.auth.email,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        password: {\r\n          ...this.state.auth.password,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ auth: newAuthState });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    this.props.onAuth(\r\n      this.state.auth.email.value,\r\n      this.state.auth.password.value\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.auth;\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ position: \"absolute\", top: \"20px\", right: \"20px\" }}>\r\n          <LanguageSelector theme=\"dark\" />\r\n        </div>\r\n        <div className=\"auth_container\">\r\n          <form>\r\n            <div className=\"lockIconContainer\">\r\n              <div\r\n                className=\"roundIcon\"\r\n                style={{\r\n                  background: `url(\"${process.env.PUBLIC_URL}/img/logo.png\") no-repeat`,\r\n                  backgroundPosition: \"50% 0\",\r\n                  backgroundSize: \"60px\"\r\n                }}\r\n              >\r\n              </div>\r\n            </div>\r\n            <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n              <Text tid=\"systemName\" />\r\n            </Typography>\r\n            {this.props.errorMessage ? (\r\n              <AuthAlert severity=\"error\">\r\n                <Text tid={this.props.errorMessage} />\r\n              </AuthAlert>\r\n            ) : null}\r\n            <AuthInput\r\n              id=\"email\"\r\n              label={<Text tid=\"authEmail\" />}\r\n              name=\"email\"\r\n              error={!email.valid && email.touched}\r\n              helperText={\r\n                !email.valid && email.touched ? (\r\n                  <Text tid={email.errorMessage} />\r\n                ) : null\r\n              }\r\n              onChange={(event) =>\r\n                this.inputHandler(\"email\", event.target.value)\r\n              }\r\n              value={email.value}\r\n            />\r\n            <AuthInputPassword\r\n              id=\"password\"\r\n              label={<Text tid=\"authPassword\" />}\r\n              name=\"password\"\r\n              error={!password.valid && password.touched}\r\n              helperText={\r\n                !password.valid && password.touched ? (\r\n                  <Text tid={password.errorMessage} />\r\n                ) : null\r\n              }\r\n              onChange={(event) =>\r\n                this.inputHandler(\"password\", event.target.value)\r\n              }\r\n              onKeyUp={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  this.state.authValid\r\n                    ? this.formSenderHandler()\r\n                    : this.checkFormValidity();\r\n                }\r\n              }}\r\n              value={password.value}\r\n            />\r\n            <AuthButton\r\n              onClick={\r\n                this.state.authValid\r\n                  ? () => this.formSenderHandler()\r\n                  : () => this.checkFormValidity()\r\n              }\r\n            >\r\n              <Text tid=\"authSignIn\" />\r\n            </AuthButton>\r\n            <Grid\r\n              className=\"linkContainer\"\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n            >\r\n              <Grid item xs={6}>\r\n                <Typography>\r\n                  <Link\r\n                    component={NavLink}\r\n                    to=\"/forgot-password\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    <Text tid=\"authForgotPassword\" />\r\n                  </Link>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid className=\"signUpLink\" item xs={6}>\r\n                <Typography align=\"right\">\r\n                  <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n                    <Text tid=\"authSignUp\" />\r\n                  </Link>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { authLogout } from \"../../../store/actions/index\";\r\n\r\nconst Logout = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => async () => {\r\n      dispatch(authLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched ? (\r\n              <Text tid={userEmail.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"authPassword\" />}\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? (\r\n              <Text tid={password.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          fullWidth\r\n          label={<Text tid=\"firstName\" />}\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched ? (\r\n              <Text tid={firstName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          label={<Text tid=\"lastName\" />}\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? (\r\n              <Text tid={lastName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"address\" />}\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? (\r\n              <Text tid={address.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"accountantEmail\" />}\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? <Text tid={accountantEmail.errorMessage} />\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst NumberTextField = (props) => {\r\n  return (\r\n    <NumberFormat\r\n      {...props}\r\n      type=\"tel\"\r\n      style={{ width: \"100%\" }}\r\n      thousandSeparator={\" \"}\r\n      decimalSeparator=\".\"\r\n      decimalScale={2}\r\n      allowNegative={false}\r\n      customInput={TextField}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberTextField;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport NumberTextField from \"../UI/NumberTextField/NumberTextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label={<Text tid=\"prevIndicatorsDate\" />}\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched ? (\r\n                <Text tid={prevIndicatorsDate.errorMessage} />\r\n              ) : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"electricityDay\" />}\r\n          value={electricityDay.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"electricityDay\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"electricityNight\" />}\r\n          value={electricityNight.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"electricityNight\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"kitchenColdWater\" />}\r\n          value={kitchenColdWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"kitchenColdWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched ? (\r\n              <Text tid={kitchenColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"kitchenHotWater\" />}\r\n          value={kitchenHotWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"kitchenHotWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched ? (\r\n              <Text tid={kitchenHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"bathroomColdWater\" />}\r\n          value={bathroomColdWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"bathroomColdWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched ? (\r\n              <Text tid={bathroomColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"bathroomHotWater\" />}\r\n          value={bathroomHotWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"bathroomHotWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched ? (\r\n              <Text tid={bathroomHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst getSteps = () => {\r\n  return [\r\n    <Text tid=\"regEnterUserDetails\" />,\r\n    <Text tid=\"regEnterPrevIndicators\" />,\r\n    <Text tid=\"regValidateData\" />,\r\n  ];\r\n};\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              <Text tid=\"regUserDetails\" />\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              <Text tid=\"regPrevIndicators\" />\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label, index) => (\r\n          <Step key={index}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography\r\n              className={classes.instructions}\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Text tid=\"regSuccess\" />\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              <Text tid=\"authSignIn\" />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                <Text tid=\"prev\" />\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? (\r\n                  <Text tid=\"finish\" />\r\n                ) : (\r\n                  <Text tid=\"next\" />\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport \"./Registration.css\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: +this.state.prevIndicators.electricityDay.value,\r\n          night: +this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: +this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: +this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: +this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: +this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    if (this.props.errorMessage) window.scrollTo(0, 0);\r\n\r\n    return (\r\n      <div className=\"reg-container\">\r\n        <div className=\"top-div\">\r\n          <LanguageSelector theme=\"dark\" />\r\n          <Typography>\r\n            <Link\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n              variant=\"body2\"\r\n              style={{ fontSize: \"16px\" }}\r\n            >\r\n              <Text tid=\"authSignInShort\" />\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"registration\" />\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">\r\n            <Text tid={this.props.errorMessage} />\r\n          </Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { sendOobCode } from \"../../api/auth\";\r\n\r\nimport \"./ForgotPassword.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthAlert,\r\n  AuthButton,\r\n  AuthInput,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  state = {\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    errorMessage: \"\",\r\n    emailSend: false,\r\n  };\r\n\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state[key].validation);\r\n    let newItem = {\r\n      ...this.state[key],\r\n      value: value,\r\n      valid: validation.isValid,\r\n      errorMessage: validation.errorMessage,\r\n      touched: true,\r\n    };\r\n\r\n    this.setState({ [key]: newItem });\r\n  };\r\n\r\n  sendPasswordRecovery = () => {\r\n    const requestData = {\r\n      requestType: \"PASSWORD_RESET\",\r\n      email: this.state.email.value,\r\n    };\r\n    sendOobCode(requestData)\r\n      .then((response) => {\r\n        console.log(\"sendOobCode\", response);\r\n        this.setState({ emailSend: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] sendOobCode\", error);\r\n        if (error.response.data.error.message === \"EMAIL_NOT_FOUND\") {\r\n          this.setState({\r\n            errorMessage: \"emailNotReg\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email } = this.state;\r\n\r\n    const enterEmail = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          <Text tid=\"authForgotPassword\" />\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          <Text tid=\"authPasswordRecovery\" />\r\n        </Typography>\r\n        {this.state.errorMessage ? (\r\n          <AuthAlert severity=\"error\">\r\n            <Text tid={this.state.errorMessage} />\r\n          </AuthAlert>\r\n        ) : null}\r\n        <AuthInput\r\n          id=\"email\"\r\n          label={<Text tid=\"authEmail\" />}\r\n          name=\"email\"\r\n          value={email.value}\r\n          error={!email.valid && email.touched}\r\n          helperText={\r\n            !email.valid && email.touched ? (\r\n              <Text tid={email.errorMessage} />\r\n            ) : null\r\n          }\r\n          onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n        />\r\n        <AuthButton\r\n          disabled={!this.state.email.valid}\r\n          onClick={this.sendPasswordRecovery}\r\n        >\r\n          <Text tid=\"recover\" />\r\n        </AuthButton>\r\n      </div>\r\n    );\r\n\r\n    const information = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          <Text tid=\"authEmailSent\" />\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          <Text tid=\"authEmailSentText1\" /> <b>{email.value}</b>{\" \"}\r\n          <Text tid=\"authEmailSentText2\" />\r\n        </Typography>\r\n        <Typography>\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            <Text tid=\"authReturn\" />\r\n          </Link>\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            right: \"20px\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <LanguageSelector theme=\"dark\" />\r\n          <Typography>\r\n            <Link\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n              variant=\"body2\"\r\n              style={{ fontSize: \"16px\" }}\r\n            >\r\n              <Text tid=\"authSignInShort\" />\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        <div className=\"form_container\">\r\n          {!this.state.emailSend ? enterEmail : information}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"../axios-main\";\r\n\r\nexport const insertIndicators = (token, indicatorsData) => {\r\n  return axios.post(`/indicators.json?auth=${token}`, indicatorsData);\r\n};\r\n\r\nexport const extractIndicators = (token, userId) => {\r\n  return axios.get(`/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`);\r\n};\r\n\r\nexport const deleteIndicators = (id, token) => {\r\n  return axios.delete(`/indicators/${id}.json?auth=${token}`);\r\n};\r\n","export const MONTHS_LIST = [\r\n  {\r\n    text: \"january\",\r\n    rusName: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    text: \"february\",\r\n    rusName: \"Февраль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    text: \"march\",\r\n    rusName: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    text: \"april\",\r\n    rusName: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    text: \"may\",\r\n    rusName: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    text: \"june\",\r\n    rusName: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    text: \"july\",\r\n    rusName: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    text: \"august\",\r\n    rusName: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    text: \"september\",\r\n    rusName: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    text: \"october\",\r\n    rusName: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    text: \"november\",\r\n    rusName: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    text: \"december\",\r\n    rusName: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst SwitchLabels = (props) => {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default SwitchLabels;\r\n","import React from \"react\";\r\n\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst DialogCheck = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.modalOpen}\r\n      onClose={props.modalHandlerClose}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle align=\"center\">\r\n        <Text tid=\"dialogCheckTitle\" />{\" \"}\r\n        <Text tid={MONTHS_LIST[props.monthYear.month].text} />{\" \"}\r\n        {props.monthYear.year} <Text tid=\"year\" />\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Switch\r\n              label={<Text tid=\"switchMail\" />}\r\n              checked={props.sendDataToAccountant}\r\n              switchChange={props.switchChange}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsElectricity\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsDay\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityDay.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsNight\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityNight.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsKitchen\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsColdWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsHotWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsBathroom\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsColdWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsHotWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.modalHandlerClose} color=\"secondary\">\r\n          <Text tid=\"cancel\" />\r\n        </Button>\r\n        <Button onClick={props.sendIndicators} color=\"primary\" autoFocus>\r\n          <Text tid=\"send\" />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogCheck;\r\n","import React from \"react\";\r\n\r\nimport NumberTextField from \"../UI/NumberTextField/NumberTextField\";\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst Indicators = (props) => {\r\n  const {\r\n    electricityDay,\r\n    electricityNight,\r\n    coldWaterKitchen,\r\n    coldWaterBathroom,\r\n    hotWaterKitchen,\r\n    hotWaterBathroom,\r\n  } = props.indicators;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsMonthYear\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>\r\n            <Text tid=\"sendIndicatorsMonth\" />\r\n          </InputLabel>\r\n          <Select\r\n            value={props.monthYear.month || 0}\r\n            onChange={(event) =>\r\n              props.setStateMonthYear(\"month\", event.target.value)\r\n            }\r\n          >\r\n            {MONTHS_LIST.map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                <Text tid={item.text} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>\r\n            <Text tid=\"sendIndicatorsYear\" />\r\n          </InputLabel>\r\n          <Select\r\n            value={props.monthYear.year || 2020}\r\n            onChange={(event) =>\r\n              props.setStateMonthYear(\"year\", event.target.value)\r\n            }\r\n          >\r\n            {props.getCurrentYear().map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsElectricity\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsDay\" />}\r\n          value={electricityDay.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\"electricityDay\", event.target.value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsNight\" />}\r\n          value={electricityNight.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\"electricityNight\", event.target.value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsKitchen\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsColdWater\" />}\r\n          value={coldWaterKitchen.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\"coldWaterKitchen\", event.target.value)\r\n          }\r\n          error={!coldWaterKitchen.valid && coldWaterKitchen.touched}\r\n          helperText={\r\n            !coldWaterKitchen.valid && coldWaterKitchen.touched ? (\r\n              <Text tid={coldWaterKitchen.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsHotWater\" />}\r\n          value={hotWaterKitchen.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\"hotWaterKitchen\", event.target.value)\r\n          }\r\n          error={!hotWaterKitchen.valid && hotWaterKitchen.touched}\r\n          helperText={\r\n            !hotWaterKitchen.valid && hotWaterKitchen.touched ? (\r\n              <Text tid={hotWaterKitchen.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsBathroom\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsColdWater\" />}\r\n          value={coldWaterBathroom.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\r\n              \"coldWaterBathroom\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!coldWaterBathroom.valid && coldWaterBathroom.touched}\r\n          helperText={\r\n            !coldWaterBathroom.valid && coldWaterBathroom.touched ? (\r\n              <Text tid={coldWaterBathroom.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"sendIndicatorsHotWater\" />}\r\n          value={hotWaterBathroom.value}\r\n          onChange={(event) =>\r\n            props.updateIndicatorsInState(\r\n              \"hotWaterBathroom\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!hotWaterBathroom.valid && hotWaterBathroom.touched}\r\n          helperText={\r\n            !hotWaterBathroom.valid && hotWaterBathroom.touched ? (\r\n              <Text tid={hotWaterBathroom.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={\r\n            props.indicatorsValid\r\n              ? props.modalHandlerOpen\r\n              : () => props.checkFormValidity()\r\n          }\r\n        >\r\n          <Text tid=\"send\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { insertIndicators } from \"../../api/indicators\";\r\n\r\nimport \"./IndicatorsInsert.css\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsert/Constants\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport DialogCheck from \"../../components/IndicatorsInsert/DialogCheck\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Indicators from \"../../components/IndicatorsInsert/Indicators\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    indicatorsValid: false,\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  updateIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.indicators[key].validation\r\n    );\r\n    let newIndicators = {\r\n      ...this.state.indicators,\r\n      [key]: {\r\n        ...this.state.indicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newIndicators);\r\n\r\n    this.setState({\r\n      indicators: newIndicators,\r\n      indicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const {\r\n        electricityDay,\r\n        electricityNight,\r\n        coldWaterKitchen,\r\n        coldWaterBathroom,\r\n        hotWaterKitchen,\r\n        hotWaterBathroom,\r\n      } = stateData;\r\n\r\n      if (\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        coldWaterKitchen.valid &&\r\n        coldWaterBathroom.valid &&\r\n        hotWaterKitchen.valid &&\r\n        hotWaterBathroom.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newIndicators = {\r\n        ...this.state.indicators,\r\n        electricityDay: {\r\n          ...this.state.indicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.indicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        coldWaterKitchen: {\r\n          ...this.state.indicators.coldWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        coldWaterBathroom: {\r\n          ...this.state.indicators.coldWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        hotWaterKitchen: {\r\n          ...this.state.indicators.hotWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        hotWaterBathroom: {\r\n          ...this.state.indicators.hotWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ indicators: newIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].rusName,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    const indicatorsData = {\r\n      electricity: {\r\n        day: +this.state.indicators.electricityDay.value,\r\n        night: +this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: +this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: +this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: +this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: +this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    insertIndicators(token, indicatorsData)\r\n      .then((response) => {\r\n        console.log(\"insertIndicators\", response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] insertIndicators\", error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonthYear = (key, value) => {\r\n    const updatedMonthYear = {\r\n      ...this.state.monthYear,\r\n      [key]: value,\r\n    };\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DialogCheck\r\n          indicators={this.state.indicators}\r\n          monthYear={this.state.monthYear}\r\n          modalOpen={this.state.modalOpen}\r\n          sendDataToAccountant={this.state.sendDataToAccountant}\r\n          switchChange={this.switchChange}\r\n          modalHandlerClose={this.modalHandlerClose}\r\n          sendIndicators={this.sendIndicators}\r\n        />\r\n\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          <Text tid=\"sendIndicators\" />\r\n        </Typography>\r\n\r\n        <CardBody>\r\n          <Indicators\r\n            indicators={this.state.indicators}\r\n            monthYear={this.state.monthYear}\r\n            indicatorsValid={this.state.indicatorsValid}\r\n            setStateMonthYear={this.setStateMonthYear}\r\n            getCurrentYear={this.getCurrentYear}\r\n            updateIndicatorsInState={this.updateIndicatorsInState}\r\n            modalHandlerOpen={this.modalHandlerOpen}\r\n            checkFormValidity={this.checkFormValidity}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import axios from \"../axios-main\";\r\n\r\nexport const insertTariff = (token, tariffData) => {\r\n  return axios.post(`/tariffs.json?auth=${token}`, tariffData)\r\n};\r\n\r\nexport const extractTariff = (token, userId) => {\r\n  return axios.get(`/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`);\r\n};\r\n\r\nexport const updateTariff = (id, token, tariffData) => {\r\n  return axios.patch(`/tariffs/${id}.json?auth=${token}`, tariffData)\r\n}\r\n\r\nexport const daleteTariff = (id, token) => {\r\n  return axios.delete(`/tariffs/${id}.json?auth=${token}`)\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {CircularProgress, Typography} from \"@material-ui/core\";\r\nimport Text from '../Text/Text'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}><Text tid=\"loading\" /></Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Close, Email } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n  buttonSend: {\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costWaterSupply, costElectricity } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = <Text tid=\"january\" />;\r\n      break;\r\n    case 1:\r\n      indicatorMonth = <Text tid=\"february\" />;\r\n      break;\r\n    case 2:\r\n      indicatorMonth = <Text tid=\"march\" />;\r\n      break;\r\n    case 3:\r\n      indicatorMonth = <Text tid=\"april\" />;\r\n      break;\r\n    case 4:\r\n      indicatorMonth = <Text tid=\"may\" />;\r\n      break;\r\n    case 5:\r\n      indicatorMonth = <Text tid=\"june\" />;\r\n      break;\r\n    case 6:\r\n      indicatorMonth = <Text tid=\"july\" />;\r\n      break;\r\n    case 7:\r\n      indicatorMonth = <Text tid=\"august\" />;\r\n      break;\r\n    case 8:\r\n      indicatorMonth = <Text tid=\"september\" />;\r\n      break;\r\n    case 9:\r\n      indicatorMonth = <Text tid=\"october\" />;\r\n      break;\r\n    case 10:\r\n      indicatorMonth = <Text tid=\"november\" />;\r\n      break;\r\n    case 11:\r\n      indicatorMonth = <Text tid=\"december\" />;\r\n      break;\r\n    default:\r\n      indicatorMonth = <Text tid=\"notDefined\" />;\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IconButton\r\n        className={classes.buttonSend}\r\n        aria-label={<Text tid=\"send\" />}\r\n        component=\"span\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.handleSendDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Email />\r\n      </IconButton>\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label={<Text tid=\"delete\" />}\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>\r\n                  <Text tid=\"outlayIndicator\" />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b>\r\n                  <Text tid=\"outlayCharge\" />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b>\r\n                  <Text tid=\"outlayConsumption\" />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {indicators.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Text tid={row.name} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.intake}</TableCell>\r\n                <TableCell align=\"center\">{row.outlay}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell align=\"center\" colSpan={3}>\r\n                <b>\r\n                  <Text tid=\"outlayCost\" />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n                <Text tid=\"outlayWaterSupply\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{costWaterSupply} ₽</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n                <Text tid=\"outlayElectricity\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{costElectricity} ₽</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../Text/Text\";\r\n\r\nconst DialogSimple = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        <Text tid={props.dialogTitle} />\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <Text tid={props.dialogContent} />\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          <Text tid=\"cancel\" />\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          <Text tid={props.activeButtonName} />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default DialogSimple;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { extractTariff } from \"../../api/tariffs\";\r\nimport { extractIndicators, deleteIndicators } from \"../../api/indicators\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsert/Constants\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n    sendDialogOpen: false,\r\n    sendIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userDetails) {\r\n      this.getDataFromFirebase(this.props);\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(newProps) {\r\n    if (this.props.userDetails !== newProps.userDetails) {\r\n      this.getDataFromFirebase(newProps);\r\n    }\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const promise1 = extractTariff(token, userId);\r\n    const promise2 = extractIndicators(token, userId);\r\n\r\n    Promise.all([promise1, promise2])\r\n      .then((values) => {\r\n        console.log(\"extractTariff\", values[0]);\r\n        console.log(\"extractIndicators\", values[1]);\r\n\r\n        const prevIndicators = this.getUserDetails(this.props.prevIndicators);\r\n        const tariffs = this.getListOfTariffs(values[0].data);\r\n        let indicatorsList = this.getListOfIndicators(values[1].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"outlayErrorNotYetSend\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"responseError\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (prevIndicators) => {\r\n    return [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"outlayElectricityDay\",\r\n        intake: prevIndicators.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"outlayElectricityNight\",\r\n        intake: prevIndicators.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"outlayColdWater\",\r\n        intake:\r\n          prevIndicators.bathroom.coldWater + prevIndicators.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"outlayHotWater\",\r\n        intake:\r\n          prevIndicators.bathroom.hotWater + prevIndicators.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"outlayDisposalWater\",\r\n        intake:\r\n          prevIndicators.bathroom.coldWater +\r\n          prevIndicators.kitchen.coldWater +\r\n          prevIndicators.bathroom.hotWater +\r\n          prevIndicators.kitchen.hotWater,\r\n      },\r\n    ];\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        year: data[key].currentDate.year,\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"outlayElectricityDay\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"outlayElectricityNight\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"outlayColdWater\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n            bathroom: data[key].coldWater.bathroom,\r\n            kitchen: data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"outlayHotWater\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n            bathroom: data[key].hotWater.bathroom,\r\n            kitchen: data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"outlayDisposalWater\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    const indicator = this.getOneIndicator();\r\n\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[new Date(indicator.date).getMonth()].text,\r\n      year: indicator.year,\r\n      electricityDay: indicator.indicators[0].intake,\r\n      electricityNight: indicator.indicators[1].intake,\r\n      coldWaterKitchen: indicator.indicators[2].kitchen,\r\n      coldWaterBathroom: indicator.indicators[2].bathroom,\r\n      hotWaterKitchen: indicator.indicators[3].kitchen,\r\n      hotWaterBathroom: indicator.indicators[3].bathroom,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          this.props.enqueueSnackbar(<Text tid=\"outlaySendSuccess\" />, {\r\n            variant: \"success\",\r\n            preventDuplicate: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getOneIndicator = () => {\r\n    let oneIndicator = this.state.indicatorsList.find(\r\n      ({ id }) => id === this.state.sendIndicatorId\r\n    );\r\n    return oneIndicator;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    deleteIndicators(this.state.deleteIndicatorId, token)\r\n      .then((response) => {\r\n        console.log(\"deleteIndicators\", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(<Text tid=\"objectDeleted\" />, {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] deleteIndicators\", error);\r\n      });\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  handleSendDialogOpen = (id) => {\r\n    this.setState({ sendDialogOpen: true, sendIndicatorId: id });\r\n  };\r\n\r\n  handleSendDialogClose = () => {\r\n    this.setState({ sendDialogOpen: false });\r\n  };\r\n\r\n  handleSendDialogContinue = () => {\r\n    this.sendEmailHandler();\r\n    this.handleSendDialogClose();\r\n  };\r\n\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostElectricity = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let electricityDay = null;\r\n    try {\r\n      electricityDay = indicators.find(({ id }) => id === \"day_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество день\", e);\r\n    }\r\n\r\n    let electricityNight = null;\r\n    try {\r\n      electricityNight = indicators.find(({ id }) => id === \"night_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество ночь\", e);\r\n    }\r\n\r\n    let electricityDayTariff = null;\r\n    try {\r\n      electricityDayTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_day\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество день загружается...\");\r\n    }\r\n\r\n    let electricityNightTariff = null;\r\n    try {\r\n      electricityNightTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_night\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество ночь загружается...\");\r\n    }\r\n\r\n    return (\r\n      electricityDay * electricityDayTariff +\r\n      electricityNight * electricityNightTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  countCostWaterSupply = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n            new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n            new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    return (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costWaterSupply={this.countCostWaterSupply(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              costElectricity={this.countCostElectricity(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n              handleSendDialogOpen={this.handleSendDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <Text tid=\"outlayNoData\" /> {this.state.currentYear}{\" \"}\r\n            <Text tid=\"outlayNoDataYear\" />\r\n          </p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <Text tid={this.state.error} />\r\n        </p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.sendDialogOpen}\r\n          handleClose={this.handleSendDialogClose}\r\n          handleContinue={this.handleSendDialogContinue}\r\n          dialogTitle=\"outlaySendDialogTitle\"\r\n          dialogContent=\"outlaySendDialogContent\"\r\n          activeButtonName=\"send\"\r\n        />\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"outlayDeleteDialogTitle\"\r\n          dialogContent=\"outlayDeleteDialogContent\"\r\n          activeButtonName=\"delete\"\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          <Text tid=\"outlayCurrentExpenditure\" />\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n    prevIndicators: state.prevIndicators,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withSnackbar(OutlayDetails));\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport NumberTextField from \"../UI/NumberTextField/NumberTextField\";\r\nimport { Close, Edit, Save } from \"@material-ui/icons\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"35px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonIconSuccessDisabled: {\r\n    color: \"#9E9E9E\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart, tariffValid } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          disabled={!tariffValid}\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs(props.tarriffIndex);\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <Save\r\n            className={\r\n              !tariffValid\r\n                ? classes.buttonIconSuccessDisabled\r\n                : classes.buttonIconSuccess\r\n            }\r\n          />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>\r\n                <Text tid=\"tariffName\" />\r\n              </InputLabel>\r\n              <Select\r\n                value={name.value}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n                error={!name.valid && name.touched}\r\n              >\r\n                <MenuItem value={\"water\"}>\r\n                  <Text tid=\"tariffWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"hot_water\"}>\r\n                  <Text tid=\"tariffHotWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>\r\n                  <Text tid=\"tariffDisposalWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>\r\n                  <Text tid=\"tariffElectricityDay\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  <Text tid=\"tariffElectricityNight\" />\r\n                </MenuItem>\r\n              </Select>\r\n              {!name.valid && name.touched ? (\r\n                <FormHelperText>{name.errorMessage}</FormHelperText>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} className={classes.row}>\r\n            <NumberTextField\r\n              label={<Text tid=\"tariffCost\" />}\r\n              prefix=\"₽ \"\r\n              disabled={disabled}\r\n              value={cost.value}\r\n              onChange={(event) =>\r\n                props.updateTariffInState(id, \"cost\", event.target.value)\r\n              }\r\n              error={!cost.valid && cost.touched}\r\n              helperText={\r\n                !cost.valid && cost.touched ? (\r\n                  <Text tid={cost.errorMessage} />\r\n                ) : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={12} sm={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label={<Text tid=\"tariffDateStart\" />}\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart.value}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n                error={!dateStart.valid && dateStart.touched}\r\n                helperText={\r\n                  !dateStart.valid && dateStart.touched ? (\r\n                    <Text tid={dateStart.errorMessage} />\r\n                  ) : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label={<Text tid=\"tariffDateEnd\" />}\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd.value}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n                error={!dateEnd.valid && dateEnd.touched}\r\n                helperText={\r\n                  !dateEnd.valid && dateEnd.touched ? (\r\n                    <Text tid={dateEnd.errorMessage} />\r\n                  ) : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  extractTariff,\r\n  insertTariff,\r\n  updateTariff,\r\n  daleteTariff,\r\n} from \"../../api/tariffs\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    extractTariff(token, userId)\r\n      .then((response) => {\r\n        console.log(\"extractTariff\", response.data);\r\n\r\n        if (Object.keys(response.data).length !== 0) {\r\n          let tariffs = Object.keys(response.data).map((item) => {\r\n            let tariff = {};\r\n            tariff.name = {\r\n              value: response.data[item].name,\r\n              validation: {\r\n                required: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.cost = {\r\n              value: response.data[item].cost,\r\n              validation: {\r\n                required: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.dateStart = {\r\n              value: response.data[item].dateStart,\r\n              validation: {\r\n                required: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.dateEnd = {\r\n              value: response.data[item].dateEnd,\r\n              validation: {\r\n                required: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.id = item;\r\n            tariff.tariffValid = true;\r\n            tariff.userId = response.data[item].userId;\r\n            return tariff;\r\n          });\r\n          this.setState({ tariffs: tariffs });\r\n        } else {\r\n          this.setState({ error: \"tariffErrorNotYetSend\" });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] extractTariff\", error);\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    daleteTariff(this.state.deleteTariffId, token)\r\n      .then((response) => {\r\n        console.log(\"daleteTariff\", response);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(<Text tid=\"objectDeleted\" />, {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] daleteTariff\", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const tariffData = {\r\n      cost: Number(oldData.cost.value.slice(2)),\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: oldData.userId,\r\n    };\r\n\r\n    updateTariff(id, token, tariffData)\r\n      .then((response) => {\r\n        console.log(\"updateTariff\", response);\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] updateTariff\", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = (index) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const oldData = this.state.tariffs[index];\r\n    const tariffData = {\r\n      cost: Number(oldData.cost.value.slice(2)),\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: userId,\r\n    };\r\n    \r\n    insertTariff(token, tariffData)\r\n      .then((response) => {\r\n        console.log(\"insertTariff\", response);\r\n        let newTariffs = [...this.state.tariffs];\r\n\r\n        newTariffs[index] = {\r\n          ...this.state.tariffs[index],\r\n          id: response.data.name,\r\n          userId: userId,\r\n        };\r\n\r\n        this.setState({ addButtonDisabled: false, tariffs: newTariffs });\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] insertTariff\", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      if (this.state.tariffs.length === 1) {\r\n        this.setState({ error: \"tariffErrorNotYetSend\" });\r\n      }\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    this.setState({ error: null });\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      name: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      cost: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateStart: {\r\n        value: null,\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateEnd: {\r\n        value: null,\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newTariff = [...this.state.tariffs];\r\n    let changeIndex = newTariff.findIndex((item) => item.id === id);\r\n\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      newTariff[changeIndex][key].validation\r\n    );\r\n\r\n    newTariff[changeIndex] = {\r\n      ...this.state.tariffs[changeIndex],\r\n      [key]: {\r\n        ...this.state.tariffs[changeIndex][key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newTariff[changeIndex]);\r\n\r\n    newTariff[changeIndex].tariffValid = formValid;\r\n\r\n    this.setState({ tariffs: newTariff });\r\n  };\r\n\r\n  checkFormValidity = (tariff) => {\r\n    const { name, cost, dateStart, dateEnd } = tariff;\r\n\r\n    if (name.valid && cost.valid && dateStart.valid && dateEnd.valid) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0 && this.state.error === null)\r\n      tariffCards = <Loader />;\r\n    else if (this.state.error !== null) {\r\n      tariffCards = (\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <Text tid={this.state.error} />\r\n        </p>\r\n      );\r\n    } else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tarriffIndex={index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"outlayDeleteDialogTitle\"\r\n          dialogContent=\"outlayDeleteDialogContent\"\r\n          activeButtonName=\"delete\"\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"tariffs\" />\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            <Text tid=\"addTariff\" />\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport NumberTextField from \"../UI/NumberTextField/NumberTextField\";\r\nimport { Grid, Typography, Button, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          <Text tid=\"contacts\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          label={<Text tid=\"firstName\" />}\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched ? (\r\n              <Text tid={firstName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          label={<Text tid=\"lastName\" />}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? (\r\n              <Text tid={lastName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"address\" />}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? (\r\n              <Text tid={address.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"userEmail\" />}\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"accountantEmail\" />}\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched ? (\r\n              <Text tid={accountantEmail.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          <Text tid=\"primaryIndicators\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label={<Text tid=\"prevIndicatorsDate\" />}\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched ? (\r\n                <Text tid={prevIndicatorsDate.errorMessage} />\r\n              ) : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"electricityDay\" />}\r\n          value={electricityDay.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"electricityDay\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"electricityNight\" />}\r\n          value={electricityNight.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"electricityNight\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"kitchenColdWater\" />}\r\n          value={kitchenColdWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"kitchenColdWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched ? (\r\n              <Text tid={kitchenColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"kitchenHotWater\" />}\r\n          value={kitchenHotWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"kitchenHotWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched ? (\r\n              <Text tid={kitchenHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"bathroomColdWater\" />}\r\n          value={bathroomColdWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"bathroomColdWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched ? (\r\n              <Text tid={bathroomColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <NumberTextField\r\n          label={<Text tid=\"bathroomHotWater\" />}\r\n          value={bathroomHotWater.value}\r\n          onChange={(event) =>\r\n            props.updatePrevIndicatorsInState(\r\n              \"bathroomHotWater\",\r\n              event.target.value\r\n            )\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched ? (\r\n              <Text tid={bathroomHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          <Text tid=\"save\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport { updateUser } from \"../../api/users\";\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userDetails) {\r\n      this.updateState(this.props);\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(newProps) {\r\n    if (this.props.userDetails !== newProps.userDetails) {\r\n      this.updateState(newProps);\r\n    }\r\n  }\r\n\r\n  updateState = (newProps) => {\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      firstName: {\r\n        ...this.state.userDetails.firstName,\r\n        value: newProps.userDetails.firstName,\r\n      },\r\n      lastName: {\r\n        ...this.state.userDetails.lastName,\r\n        value: newProps.userDetails.lastName,\r\n      },\r\n      userEmail: {\r\n        ...this.state.userDetails.userEmail,\r\n        value: newProps.userDetails.userEmail,\r\n      },\r\n      accountantEmail: {\r\n        ...this.state.userDetails.accountantEmail,\r\n        value: newProps.userDetails.accountantEmail,\r\n      },\r\n      address: {\r\n        ...this.state.userDetails.address,\r\n        value: newProps.userDetails.address,\r\n      },\r\n    };\r\n    let prevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      prevIndicatorsDate: {\r\n        ...this.state.prevIndicators.prevIndicatorsDate,\r\n        value: newProps.prevIndicators.prevIndicatorsDate,\r\n      },\r\n      electricityDay: {\r\n        ...this.state.prevIndicators.electricityDay,\r\n        value: newProps.prevIndicators.electricity.day,\r\n      },\r\n      electricityNight: {\r\n        ...this.state.prevIndicators.electricityNight,\r\n        value: newProps.prevIndicators.electricity.night,\r\n      },\r\n      kitchenColdWater: {\r\n        ...this.state.prevIndicators.kitchenColdWater,\r\n        value: newProps.prevIndicators.kitchen.coldWater,\r\n      },\r\n      kitchenHotWater: {\r\n        ...this.state.prevIndicators.kitchenHotWater,\r\n        value: newProps.prevIndicators.kitchen.hotWater,\r\n      },\r\n      bathroomColdWater: {\r\n        ...this.state.prevIndicators.bathroomColdWater,\r\n        value: newProps.prevIndicators.bathroom.coldWater,\r\n      },\r\n      bathroomHotWater: {\r\n        ...this.state.prevIndicators.bathroomHotWater,\r\n        value: newProps.prevIndicators.bathroom.hotWater,\r\n      },\r\n    };\r\n\r\n    this.setState({\r\n      userDetails: newUserDetails,\r\n      prevIndicators: prevIndicators,\r\n    });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: +this.state.prevIndicators.electricityDay.value,\r\n          night: +this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: +this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: +this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: +this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: +this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    updateUser(this.state.id, token, userFormData)\r\n      .then((response) => {\r\n        console.log(\"updateUser\", response.data);\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"[ERROR] updateUser\", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"userProfile\" />\r\n        </Typography>\r\n        {this.props.userIdDb === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n    prevIndicators: state.prevIndicators,\r\n    userIdDb: state.userIdDb,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withSnackbar(UsersProfile));\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nimport { LanguageProvider } from \"./components/Languages/Language\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Authorization from \"./containers/Authorization/Authorization\";\r\nimport Logout from \"./containers/Authorization/Logout/Logout\";\r\nimport Registration from \"./containers/Registration/Registration\";\r\nimport ForgotPassword from \"./containers/ForgotPassword/ForgotPassword\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\n\r\nclass App extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Authorization} />\r\n        <Route path=\"/registration\" component={Registration} />\r\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <LanguageProvider>\r\n        <Layout isAuth={this.props.isAuth}>{routes}</Layout>\r\n      </LanguageProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"authError\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"authErrorEmailExist\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"authErrorEmailNotReg\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"INVALID_PASSWORD\"\r\n  ) {\r\n    errorMessage = \"authErrorInvalidPassword\";\r\n  }else {\r\n    errorMessage = \"authErrorOther\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}