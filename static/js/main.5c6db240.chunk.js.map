{"version":3,"sources":["axios-main.js","store/actions/auth.js","store/actions/actionTypes.js","components/Navigation/AppBar.js","hoc/Layout/Layout.js","components/Helpers/FormHelper.js","components/UI/AuthComponents/AuthAlert.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/UI/CardBody/CardBody.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","containers/ForgotPassword/ForgotPassword.js","components/IndicatorsInsertForm/Constants.js","components/UI/Switch/Switch.js","components/IndicatorsInsertForm/DialogCheck.js","components/IndicatorsInsertForm/Indicators.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","containers/UsersProfile/UsersProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["instance","axios","create","baseURL","authSuccess","token","userId","dispatch","loadUserData","type","idToken","authSuccessDone","authFail","error","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","getItem","get","then","response","console","log","userDetails","prevIndicators","userIdDb","dataFromDB","data","Object","keys","catch","APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","width","button","color","grow","list","MenuAppBar","props","classes","sectionTitleName","window","location","hash","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","firstName","lastName","aria-controls","aria-haspopup","component","NavLink","to","Drawer","drawer","anchor","open","onClose","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","children","Component","connect","state","checkFieldValidity","value","rules","validation","isValid","errorMessage","required","trim","isEmail","test","isDate","isNumber","isPassord","length","CSSAlert","withStyles","marginBottom","Alert","AuthAlert","CSSButton","textTransform","margin","Button","AuthButton","createStyles","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","React","showPassword","setState","InputProps","endAdornment","InputAdornment","AuthForm","auth","email","valid","touched","password","authValid","inputHandler","newAuthState","formValid","checkFormValidity","stateData","formSenderHandler","onAuth","align","severity","id","label","helperText","onChange","event","target","spacing","Link","loading","authData","returnSecureToken","url","CONFIG","AUTH_API_KEY","post","expirationDate","Date","getTime","expiresIn","setItem","localId","actions","Logout","onLogout","history","cardPadding","padding","CardBody","Card","CardContent","StepOne","userEmail","accountantEmail","address","disabled","isDisabled","autoComplete","fullWidth","updateUserDataInState","field","StepTwo","prevIndicatorsDate","electricityDay","electricityNight","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","utils","DateFnsUtils","DatePicker","clearable","format","date","updatePrevIndicatorsInState","currencySymbol","minimumValue","_","stepLabel","wordBreak","backButton","marginRight","instructions","marginTop","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","userDetailsValid","prevIndicatorsValid","registration","RegistrationForm","userFormData","electricity","day","night","kitchen","coldWater","hotWater","bathroom","onRegistration","newUserDetails","newPrevIndicators","formId","scrollTo","top","right","ForgotPassword","emailSend","newItem","sendPasswordRecovery","body","requestType","message","enterEmail","information","MONTHS_LIST","text","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","switchChange","DialogCheck","Dialog","modalOpen","modalHandlerClose","maxWidth","DialogTitle","monthYear","month","year","DialogContent","dividers","indicators","coldWaterKitchen","hotWaterKitchen","coldWaterBathroom","hotWaterBathroom","sendDataToAccountant","DialogActions","sendIndicators","autoFocus","Indicators","FormControl","InputLabel","Select","setStateMonthYear","MenuItem","getCurrentYear","updateIndicatorsInState","textAlign","disableElevation","indicatorsValid","modalHandlerOpen","IndicatorsInsert","getMonth","getFullYear","newIndicators","ind","preventDefault","updatedIndicators","sendEmailHandler","templateParams","recipient","emailjs","send","status","dateOfIndicators","UTC","setUTCHours","currentDate","today","toUTCString","push","getCurrentMonth","currentYear","currentYearList","i","updatedMonthYear","withRouter","display","flexDirection","paragraph","Loader","CircularProgress","buttonClose","buttonSend","left","Outlay","indicatorsList","costWaterSupply","costElectricity","indicatorMonth","TableContainer","handleSendDialogOpen","disableRipple","disableFocusRipple","handleDeleteDialogOpen","Table","TableHead","TableRow","TableCell","TableBody","index","scope","intake","outlay","colSpan","boxShadow","fontSize","TabUI","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","aria-labelledby","aria-describedby","dialogTitle","DialogContentText","dialogContent","handleContinue","activeButtonName","OutlayDetails","tariffs","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","sendDialogOpen","sendIndicatorId","getDataFromFirebase","url_1","url_2","url_3","promise1","promise2","promise3","Promise","all","values","getUserDetails","getListOfTariffs","getListOfIndicators","countOutlay","prevIndicatorsData","tariff","sort","a","b","indicator","getOneIndicator","enqueueSnackbar","preventDuplicate","find","deleteItemFromIndicators","delete","removeIndicatorFromState","removeId","newIndicatorsList","filter","handleDeleteDialogClose","handleDeleteDialogContinue","handleSendDialogClose","handleSendDialogContinue","countCostElectricity","indicatorsDate","getDate","e","electricityDayTariff","dateStart","dateEnd","setDate","cost","electricityNightTariff","toFixed","countCostWaterSupply","disposalWater","waterTariff","disposalTariff","withSnackbar","paddingBottom","paddingTop","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonIconSuccessDisabled","buttonSuccess","backgorundColor","TariffCard","tariffValid","setDisabled","updateItemInTariffs","insertItemToTariffs","updateTariffInState","FormHelperText","maximumValue","textFieldMargin","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newTariff","changeIndex","findIndex","tariffCards","alignContent","wrap","buttonPosition","UserCard","updateUserDetails","UsersProfile","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.5c6db240.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccessDone = (token, userId) => {\r\n  return { type: actionTypes.AUTH_SUCCESS, idToken: token, userId: userId };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(loadUserData());\r\n    dispatch(authSuccessDone(token, userId));\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n          .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon /> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon /> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon /> },\r\n  { name: \"Профиль\", path: \"/profile\", icon: <AccountCircleIcon /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"Показания\";  \r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"Показания\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"Расходы\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"Тарифы\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"Профиль\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(sectionTitleName);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:425px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\" \r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\nrender() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <AppBar userDetails={this.props.userDetails}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} style={{ width: \"100%\" }}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"Поле обязательно для заполнения\"\r\n        : \"Пожалуйста, введите корректный email\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"Пароль должен состоять из более чем 6 символов\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"Поле обязательно для заполнения\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n}","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nexport const AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nexport const AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthButton,\r\n  AuthInput,\r\n  AuthInputPassword,\r\n  AuthAlert,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link, Grid } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    auth: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    authValid: false,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state.auth[key].validation);\r\n    let newAuthState = {\r\n      ...this.state.auth,\r\n      [key]: {\r\n        ...this.state.auth[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newAuthState);\r\n\r\n    this.setState({ auth: newAuthState, authValid: formValid });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const { email, password } = stateData;\r\n      if (email.valid && password.valid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newAuthState = {\r\n        ...this.state.auth,\r\n        email: {\r\n          ...this.state.auth.email,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.auth.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ auth: newAuthState });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    this.props.onAuth(\r\n      this.state.auth.email.value,\r\n      this.state.auth.password.value\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.auth;\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n            Система коммунальных показателей\r\n          </Typography>\r\n          {this.props.errorMessage ? (\r\n            <AuthAlert severity=\"error\">{this.props.errorMessage}</AuthAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={!email.valid && email.touched}\r\n            helperText={\r\n              !email.valid && email.touched ? email.errorMessage : null\r\n            }\r\n            onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n            value={email.value}\r\n          />\r\n          <AuthInputPassword\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={!password.valid && password.touched}\r\n            helperText={\r\n              !password.valid && password.touched ? password.errorMessage : null\r\n            }\r\n            onChange={(event) =>\r\n              this.inputHandler(\"password\", event.target.value)\r\n            }\r\n            value={password.value}\r\n          />\r\n          <AuthButton\r\n            onClick={\r\n              this.state.authValid\r\n                ? () => this.formSenderHandler()\r\n                : () => this.checkFormValidity()\r\n            }\r\n          >\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n          <Grid container spacing={1} direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Typography>\r\n                <Link component={NavLink} to=\"/forgot-password\" variant=\"body2\">\r\n                  Забыли пароль?\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography align=\"right\">\r\n                <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n                  Еще нет аккаунта? Регистрация\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched\r\n              ? userEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Пароль\"\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete='new-password'\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? password.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Введите персональные данные\",\r\n    \"Введите первичные показатели\",\r\n    \"Проверьте данные\",\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              Персональные данные\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              Первичные показатели\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Регистрация успешно завершена\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              Войти в систему\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Назад\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Готово\" : \"Далее\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    if (this.props.errorMessage) window.scrollTo(0, 0);\r\n\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ position: \"absolute\", top: \"10px\", right: \"15px\" }}\r\n        >\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Регистрация\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">{this.props.errorMessage}</Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nimport \"./ForgotPassword.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthAlert,\r\n  AuthButton,\r\n  AuthInput,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  state = {\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    errorMessage: \"\",\r\n    emailSend: false,\r\n  };\r\n\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state[key].validation);\r\n    let newItem = {\r\n      ...this.state[key],\r\n      value: value,\r\n      valid: validation.isValid,\r\n      errorMessage: validation.errorMessage,\r\n      touched: true,\r\n    };\r\n\r\n    this.setState({ [key]: newItem });\r\n  };\r\n\r\n  sendPasswordRecovery = () => {\r\n    console.log(\"Пароль восстановлен\");\r\n    const body = {\r\n      requestType: \"PASSWORD_RESET\",\r\n      email: this.state.email.value,\r\n    };\r\n    axios\r\n      .post(\r\n        `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${CONFIG.AUTH_API_KEY}`,\r\n        body\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ emailSend: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        if (error.response.data.error.message === \"EMAIL_NOT_FOUND\") {\r\n          this.setState({ errorMessage: \"Данный почтовый ящик не зарегистрирован\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email } = this.state;\r\n\r\n    const enterEmail = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          Забыли пароль?\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          Для восстановления пароля введите ваш адрес электронной почты и вам\r\n          будет отправлено письмо с дальнейшими инструкциями.\r\n        </Typography>\r\n        {this.state.errorMessage ? (\r\n          <AuthAlert severity=\"error\">{this.state.errorMessage}</AuthAlert>\r\n        ) : null}\r\n        <AuthInput\r\n          id=\"email\"\r\n          label=\"Почта\"\r\n          name=\"email\"\r\n          value={email.value}\r\n          error={!email.valid && email.touched}\r\n          helperText={!email.valid && email.touched ? email.errorMessage : null}\r\n          onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n        />\r\n        <AuthButton\r\n          disabled={!this.state.email.valid}\r\n          onClick={this.sendPasswordRecovery}\r\n        >\r\n          Восстановить\r\n        </AuthButton>\r\n      </div>\r\n    );\r\n\r\n    const information = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          Письмо отправлено!\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          Вам было отправлено письмо на адрес электронной почты{\" \"}\r\n          <b>{email.value}</b> с дальнейшими инструкциями. Пожалуйста проверьте\r\n          ваш почтовый ящик.\r\n        </Typography>\r\n        <Typography>\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Вернутся на форму входа\r\n          </Link>\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"form_container\">\r\n        {!this.state.emailSend ? enterEmail : information}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchLabels(props) {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            name={props.label}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst DialogCheck = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.modalOpen}\r\n      onClose={props.modalHandlerClose}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle align=\"center\">\r\n        Проверьте показатели за {MONTHS_LIST[props.monthYear.month].text}{\" \"}\r\n        {props.monthYear.year} г.\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Электроэнергия\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              День:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityDay.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Ночь:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityNight.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Кухня\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Ванная\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Switch\r\n              label=\"Отправить в бухгалтерию\"\r\n              checked={props.sendDataToAccountant}\r\n              switchChange={props.switchChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.modalHandlerClose} color=\"secondary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.sendIndicators} color=\"primary\" autoFocus>\r\n          Отправить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogCheck;\r\n","import React from \"react\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nconst Indicators = (props) => {\r\n  const {\r\n    electricityDay,\r\n    electricityNight,\r\n    coldWaterKitchen,\r\n    coldWaterBathroom,\r\n    hotWaterKitchen,\r\n    hotWaterBathroom,\r\n  } = props.indicators;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Месяц и год\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Месяц</InputLabel>\r\n          <Select\r\n            value={props.monthYear.month || 0}\r\n            onChange={(event) => props.setStateMonthYear(\"month\", event.target.value)}\r\n          >\r\n            {MONTHS_LIST.map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Год</InputLabel>\r\n          <Select\r\n            value={props.monthYear.year || 2020}\r\n            onChange={(event) => props.setStateMonthYear(\"year\", event.target.value)}\r\n          >\r\n            {props.getCurrentYear().map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Электроэнергия\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? electricityDay.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? electricityNight.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Кухня\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={coldWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterKitchen\", value)\r\n          }\r\n          error={!coldWaterKitchen.valid && coldWaterKitchen.touched}\r\n          helperText={\r\n            !coldWaterKitchen.valid && coldWaterKitchen.touched ? coldWaterKitchen.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={hotWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterKitchen\", value)\r\n          }\r\n          error={!hotWaterKitchen.valid && hotWaterKitchen.touched}\r\n          helperText={\r\n            !hotWaterKitchen.valid && hotWaterKitchen.touched ? hotWaterKitchen.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Ванная\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={coldWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterBathroom\", value)\r\n          }\r\n          error={!coldWaterBathroom.valid && coldWaterBathroom.touched}\r\n          helperText={\r\n            !coldWaterBathroom.valid && coldWaterBathroom.touched ? coldWaterBathroom.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={hotWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterBathroom\", value)\r\n          }\r\n          error={!hotWaterBathroom.valid && hotWaterBathroom.touched}\r\n          helperText={\r\n            !hotWaterBathroom.valid && hotWaterBathroom.touched ? hotWaterBathroom.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={props.indicatorsValid ? props.modalHandlerOpen : () => props.checkFormValidity()}\r\n        >\r\n          Отправить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport \"./IndicatorsInsert.css\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport DialogCheck from \"../../components/IndicatorsInsertForm/DialogCheck\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Indicators from \"../../components/IndicatorsInsertForm/Indicators\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    indicatorsValid: false,\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  updateIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.indicators[key].validation\r\n    );\r\n    let newIndicators = {\r\n      ...this.state.indicators,\r\n      [key]: {\r\n        ...this.state.indicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newIndicators);\r\n\r\n    this.setState({\r\n      indicators: newIndicators,\r\n      indicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    console.log(typeof stateData);\r\n\r\n    if (typeof stateData !== \"undefined\") {\r\n      const {\r\n        electricityDay,\r\n        electricityNight,\r\n        coldWaterKitchen,\r\n        coldWaterBathroom,\r\n        hotWaterKitchen,\r\n        hotWaterBathroom,\r\n      } = stateData;\r\n\r\n      if (\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        coldWaterKitchen.valid &&\r\n        coldWaterBathroom.valid &&\r\n        hotWaterKitchen.valid &&\r\n        hotWaterBathroom.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newIndicators = {\r\n        ...this.state.indicators,\r\n        electricityDay: {\r\n          ...this.state.indicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.indicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        coldWaterKitchen: {\r\n          ...this.state.indicators.coldWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        coldWaterBathroom: {\r\n          ...this.state.indicators.coldWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        hotWaterKitchen: {\r\n          ...this.state.indicators.hotWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        hotWaterBathroom: {\r\n          ...this.state.indicators.hotWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ indicators: newIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonthYear = (key, value) => {\r\n    const updatedMonthYear = { \r\n      ...this.state.monthYear,\r\n      [key]: value\r\n    };\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DialogCheck\r\n          indicators={this.state.indicators}\r\n          monthYear={this.state.monthYear}\r\n          modalOpen={this.state.modalOpen}\r\n          sendDataToAccountant={this.state.sendDataToAccountant}\r\n          switchChange={this.switchChange}\r\n          modalHandlerClose={this.modalHandlerClose}\r\n          sendIndicators={this.sendIndicators}\r\n        />\r\n\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Подать показания\r\n        </Typography>\r\n\r\n        <CardBody>\r\n          <Indicators\r\n            indicators={this.state.indicators}\r\n            monthYear={this.state.monthYear}\r\n            indicatorsValid={this.state.indicatorsValid}\r\n            setStateMonthYear={this.setStateMonthYear}\r\n            getCurrentYear={this.getCurrentYear}\r\n            updateIndicatorsInState={this.updateIndicatorsInState}\r\n            modalHandlerOpen={this.modalHandlerOpen}\r\n            checkFormValidity={this.checkFormValidity}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n  buttonSend: {\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costWaterSupply, costElectricity } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <IconButton\r\n        className={classes.buttonSend}\r\n        aria-label=\"Отправить\"\r\n        component=\"span\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.handleSendDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <EmailIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Показатель</b>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <b>Расход</b>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <b>Потребление</b>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              <b>Расчет стоимости</b>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n              Водоснабжение\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costWaterSupply} ₽</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n              Электроэнергия\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costElectricity} ₽</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          {props.activeButtonName}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport emailjs from \"emailjs-com\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n    sendDialogOpen: false,\r\n    sendIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"Передайте показания\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, попробуйте обновить страницу.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"Эл-я день:\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"Эл-я ночь:\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"Холодная вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"Горячая вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"Водоотведение:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        year: data[key].currentDate.year,\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"Эл-я день:\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"Эл-я ночь:\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"Холодная вода:\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n            bathroom: data[key].coldWater.bathroom,\r\n            kitchen: data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"Горячая вода:\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n            bathroom: data[key].hotWater.bathroom,\r\n            kitchen: data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"Водоотведение:\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    const indicator = this.getOneIndicator();\r\n\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[new Date(indicator.date).getMonth()].text,\r\n      year: indicator.year,\r\n      electricityDay: indicator.indicators[0].intake,\r\n      electricityNight: indicator.indicators[1].intake,\r\n      coldWaterKitchen: indicator.indicators[2].kitchen,\r\n      coldWaterBathroom: indicator.indicators[2].bathroom,\r\n      hotWaterKitchen: indicator.indicators[3].kitchen,\r\n      hotWaterBathroom: indicator.indicators[3].bathroom,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          this.props.enqueueSnackbar(\"Данные успешно переданы на почту!\", {\r\n            variant: \"success\",\r\n            preventDuplicate: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getOneIndicator = () => {\r\n    let oneIndicator = this.state.indicatorsList.find(\r\n      ({ id }) => id === this.state.sendIndicatorId\r\n    );\r\n    return oneIndicator;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  handleSendDialogOpen = (id) => {\r\n    this.setState({ sendDialogOpen: true, sendIndicatorId: id });\r\n  };\r\n\r\n  handleSendDialogClose = () => {\r\n    this.setState({ sendDialogOpen: false });\r\n  };\r\n\r\n  handleSendDialogContinue = () => {\r\n    this.sendEmailHandler();\r\n    this.handleSendDialogClose();\r\n  };\r\n\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostElectricity = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let electricityDay = null;\r\n    try {\r\n      electricityDay = indicators.find(({ id }) => id === \"day_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество день\", e);\r\n    }\r\n\r\n    let electricityNight = null;\r\n    try {\r\n      electricityNight = indicators.find(({ id }) => id === \"night_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество ночь\", e);\r\n    }\r\n\r\n    let electricityDayTariff = null;\r\n    try {\r\n      electricityDayTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_day\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество день загружается...\");\r\n    }\r\n\r\n    let electricityNightTariff = null;\r\n    try {\r\n      electricityNightTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_night\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество ночь загружается...\");\r\n    }\r\n\r\n    return (\r\n      electricityDay * electricityDayTariff +\r\n      electricityNight * electricityNightTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  countCostWaterSupply = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n            new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n            new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    return (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costWaterSupply={this.countCostWaterSupply(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              costElectricity={this.countCostElectricity(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n              handleSendDialogOpen={this.handleSendDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.sendDialogOpen}\r\n          handleClose={this.handleSendDialogClose}\r\n          handleContinue={this.handleSendDialogContinue}\r\n          dialogTitle=\"Отправка показателей\"\r\n          dialogContent=\"Вы уверены, что хотите отправить показатели на адрес электронной почты бухгалтерии?\"\r\n          activeButtonName=\"Отправить\"\r\n        />\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withSnackbar(connect(mapStateToProps)(OutlayDetails));\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"35px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonIconSuccessDisabled: {\r\n    color: \"#9E9E9E\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart, tariffValid } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          disabled={!tariffValid}\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={!tariffValid ? classes.buttonIconSuccessDisabled : classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name.value}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n                error={!name.valid && name.touched}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n              {!name.valid && name.touched ? (\r\n                <FormHelperText>{name.errorMessage}</FormHelperText>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost.value}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n              error={!cost.valid && cost.touched}\r\n              helperText={\r\n                !cost.valid && cost.touched ? cost.errorMessage : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart.value}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n                error={!dateStart.valid && dateStart.touched}\r\n                helperText={\r\n                  !dateStart.valid && dateStart.touched\r\n                    ? dateStart.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd.value}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n                error={!dateEnd.valid && dateEnd.touched}\r\n                helperText={\r\n                  !dateEnd.valid && dateEnd.touched\r\n                    ? dateEnd.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    axios\r\n      .get(`/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = {};\r\n          tariff.name = {\r\n            value: response.data[item].name,\r\n            validation: {\r\n              required: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.cost = {\r\n            value: response.data[item].cost,\r\n            validation: {\r\n              isNumber: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateStart = {\r\n            value: response.data[item].dateStart,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateEnd = {\r\n            value: response.data[item].dateEnd,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.id = item;\r\n          tariff.tariffValid = true;\r\n          tariff.userId = response.data[item].userId;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: oldData.userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      name: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      cost: {\r\n        value: 0,\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateStart: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateEnd: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newTariff = [...this.state.tariffs];\r\n    let changeIndex = newTariff.findIndex((item) => item.id === id);\r\n\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      newTariff[changeIndex][key].validation\r\n    );\r\n    \r\n    newTariff[changeIndex] = {\r\n      ...this.state.tariffs[changeIndex],\r\n      [key]: {\r\n        ...this.state.tariffs[changeIndex][key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newTariff[changeIndex]);\r\n\r\n    newTariff[changeIndex].tariffValid = formValid;\r\n\r\n    this.setState({ tariffs: newTariff });\r\n  };\r\n\r\n  checkFormValidity = (tariff) => {\r\n    const { name, cost, dateStart, dateEnd } = tariff;\r\n\r\n    if (\r\n      name.valid &&\r\n      cost.valid &&\r\n      dateStart.valid &&\r\n      dateEnd.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            Добавить тариф\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Контакты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Ваша почта\"\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Первичные показатели\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0],\r\n          userId: dataFromDB.userId,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Профиль пользователя\r\n        </Typography>\r\n        {this.state.userId === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport ForgotPassword from \"./containers/ForgotPassword/ForgotPassword\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\n\r\nclass App extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email уже существует\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email еще не зарегистрирован\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"INVALID_PASSWORD\"\r\n  ) {\r\n    errorMessage = \"Не правильно указан пароль\";\r\n  }else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}