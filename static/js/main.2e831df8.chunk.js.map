{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","containers/OutlayDetails/OutlayDetails.js","components/IndicatorsInsertForm/Constants.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/TariffCard/TariffCard.js","components/UI/DialogSimple/DialogSimple.js","containers/Tariffs/Tariffs.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthAlert.js","store/actions/auth.js","store/actions/actionTypes.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","App.js","serviceWorker.js","store/history.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","button","color","grow","list","width","MenuAppBar","props","classes","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","title","aria-controls","aria-haspopup","component","NavLink","to","SwipeableDrawer","drawer","anchor","open","onClose","onOpen","console","log","disableBackdropTransition","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","this","isAuth","xs","Paper","children","Component","instance","axios","create","baseURL","display","flexDirection","alignItems","marginTop","paragraph","Loader","CircularProgress","outlay","indicatorsList","date","indicators","costNovogor","indicatorMonth","getMonth","TableContainer","style","align","getFullYear","Table","TableHead","TableRow","TableCell","TableBody","row","index","scope","intake","boxShadow","label","fontSize","TabUI","React","value","setValue","Tabs","onChange","event","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","OutlayDetails","state","prevIndicators","tariffs","currentYear","Date","getUTCFullYear","error","getListOfIndicators","get","then","response","data","Object","keys","id","CurrentDate","today","Number","Electricity","Day","Night","ColdWater","Bathroom","Kittchen","HotWater","sort","a","b","getTime","setState","countOutlay","catch","getListOfTariffs","tariff","newIndicatorsList","i","newItem","length","countCostNovogor","coldWater","find","e","hotWater","disposalWater","waterTariff","dateStart","dateEnd","parse","cost","disposalTariff","toFixed","year","filter","Outlay","textAlign","push","MONTHS_LIST","text","IndicatorsInsert","ElectricityDay","valid","ElectricityNight","ColdWaterKittchen","ColdWaterBathroom","HotWaterKittchen","HotWaterBathroom","monthYear","month","emailData","recipient","CONFIG","RECIPIENT","address","ADDRESS","modalOpen","addIndicatorHandler","type","updatedCount","updatedIndicators","modalHandlerClose","modalHandlerOpen","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","electricityDay","electricityNight","coldWaterKittchen","coldWaterBathroom","hotWaterKittchen","hotWaterBathroom","emailjs","send","SERVICE_ID","TEMPLATE_ID","USER_ID","status","sendIndicators","dateOfIndicators","toISOString","post","history","getCurrentMonth","getCurrentYear","currentYearList","setStateMonth","updatedMonth","updatedMonthYear","setStateYear","updatedYear","errorMessage","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","Button","autoFocus","marginBottom","spacing","FormControl","InputLabel","Select","target","MenuItem","currencySymbol","minimumValue","helperText","justify","disableElevation","withRouter","margin","cardPadding","paddingBottom","paddingTop","textField","textFieldMargin","marginRight","selectPadding","flexBasis","buttonClose","right","buttonEdit","buttonIconSuccess","buttonSuccess","backgorundColor","TariffCard","disabled","setDisabled","Card","disableRipple","disableFocusRipple","updateItemInTariffs","insertItemToTariffs","handleDeleteDialogOpen","CardContent","updateTariffInState","maximumValue","utils","DateFnsUtils","format","KeyboardButtonProps","DialogSimple","handleClose","dialogTitle","DialogContentText","dialogContent","handleContinue","Tariffs","deleteDialogOpen","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","delete","oldData","newData","patch","removeTariffFromState","handleDeleteDialogClose","handleDeleteDialogContinue","addTariffToState","newTariffsList","unshift","removeId","newState","changeIndex","findIndex","tariffCards","ё","createStyles","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","Alert","AuthAlert","authSuccess","token","userId","idToken","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validation","validateFieldsUpdate","test","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","connect","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","authFail","actions","Logout","onLogout","App","onTryAutoSignup","routes","getItem","Boolean","window","location","hostname","match","createBrowserHistory","updateObject","oldObject","updatedProperties","initialState","authStart","action","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e831df8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon/> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon/> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon/> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const [sectionTitle, setSectionTitle] = useState(\"Показания\");\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {sectionTitle}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <SwipeableDrawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n          onOpen={() => console.log(\"Список открыт\")}\r\n          disableBackdropTransition={true}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </SwipeableDrawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./Layout.css\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12}>\r\n            <AppBar />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst outlay = (props) => {\r\n  const { date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"30px\" }}>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass OutlayDetails extends Component {\r\n  // TODO Хранить в бд первоначальные результаты\r\n  state = {\r\n    indicatorsList: [],\r\n    prevIndicators: [\r\n      {\r\n        name: \"Эл-я день:\",\r\n        intake: 18572,\r\n      },\r\n      {\r\n        name: \"Эл-я ночь:\",\r\n        intake: 6699,\r\n      },\r\n      {\r\n        name: \"Холодная вода:\",\r\n        intake: 402,\r\n      },\r\n      {\r\n        name: \"Горячая вода:\",\r\n        intake: 420,\r\n      },\r\n      {\r\n        name: \"Водоотведение:\",\r\n        intake: 822,\r\n      },\r\n    ],\r\n    tariffs: [],\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfIndicators();\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfIndicators = () => {\r\n    axios\r\n      .get(`/indicators.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let indicatorsList = Object.keys(response.data).map((key) => {\r\n          return {\r\n            id: key,\r\n            date: new Date(response.data[key].CurrentDate.today),\r\n            indicators: [\r\n              {\r\n                id: \"day_electricity\",\r\n                name: \"Эл-я день:\",\r\n                intake: Number(response.data[key].Electricity.Day),\r\n              },\r\n              {\r\n                id: \"night_electricity\",\r\n                name: \"Эл-я ночь:\",\r\n                intake: Number(response.data[key].Electricity.Night),\r\n              },\r\n              {\r\n                id: \"cold_water\",\r\n                name: \"Холодная вода:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"hot_water\",\r\n                name: \"Горячая вода:\",\r\n                intake:\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"disposal_water\",\r\n                name: \"Водоотведение:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen) +\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n            ],\r\n          };\r\n        });\r\n        indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n        this.setState({ indicatorsList: this.countOutlay(indicatorsList) });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  countOutlay = (indicatorsList) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake - this.state.prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          Date.parse(dateStart) <= date &&\r\n          Date.parse(dateEnd) >= date\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду\", e);\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            Date.parse(dateStart) <= date &&\r\n            Date.parse(dateEnd) >= date\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение\", e);\r\n    }\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  // TODO: Добавить возможность редактирования и удаления записей\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList.length === 0 && this.state.error == null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList.length > 0) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div className=\"outlayContainer\">\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutlayDetails;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\nimport CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      ElectricityDay: { value: \"\", valid: true },\r\n      ElectricityNight: { value: \"\", valid: true },\r\n      ColdWaterKittchen: { value: \"\", valid: true },\r\n      ColdWaterBathroom: { value: \"\", valid: true },\r\n      HotWaterKittchen: { value: \"\", valid: true },\r\n      HotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    emailData: {\r\n      recipient: CONFIG.RECIPIENT,\r\n      address: CONFIG.ADDRESS,\r\n    },\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, value) => {\r\n    //Обновляем показатель\r\n    const updatedCount = value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.ElectricityDay.valid &&\r\n      this.state.indicators.ElectricityNight.valid &&\r\n      this.state.indicators.ColdWaterKittchen.valid &&\r\n      this.state.indicators.ColdWaterBathroom.valid &&\r\n      this.state.indicators.HotWaterKittchen.valid &&\r\n      this.state.indicators.HotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.state.emailData.recipient,\r\n      address: this.state.emailData.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.ElectricityDay.value,\r\n      electricityNight: this.state.indicators.ElectricityNight.value,\r\n      coldWaterKittchen: this.state.indicators.ColdWaterKittchen.value,\r\n      coldWaterBathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      hotWaterKittchen: this.state.indicators.HotWaterKittchen.value,\r\n      hotWaterBathroom: this.state.indicators.HotWaterBathroom.value,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      this.state.monthYear.year,\r\n      this.state.monthYear.month,\r\n      1,\r\n      5,\r\n      0,\r\n      0,\r\n      0\r\n    ).toISOString();\r\n\r\n    const indicators = {\r\n      Electricity: {\r\n        Day: this.state.indicators.ElectricityDay.value,\r\n        Night: this.state.indicators.ElectricityNight.value,\r\n      },\r\n      ColdWater: {\r\n        Kittchen: this.state.indicators.ColdWaterKittchen.value,\r\n        Bathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      },\r\n      HotWater: {\r\n        Kittchen: this.state.indicators.HotWaterKittchen.value,\r\n        Bathroom: this.state.indicators.HotWaterBathroom.value,\r\n      },\r\n      CurrentDate: { today: dateOfIndicators, year: this.state.monthYear.year },\r\n    };\r\n    axios\r\n      .post(\"/indicators.json\", indicators)\r\n      .then((response) => {\r\n        this.setState({ modalOpen: false });\r\n        this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, value) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, value) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n\r\n    return (\r\n      <div className=\"ui_center\">\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Проверьте показатели за{\" \"}\r\n              {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n              {this.state.monthYear.year} г.\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Электроэнергия\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    День:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityDay.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Ночь:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityNight.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Кухня\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Ванная\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <form>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            Подать показания\r\n          </Typography>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" className=\"headerMargin\">\r\n                Месяц и год\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <InputLabel>Месяц</InputLabel>\r\n                <Select\r\n                  value={this.state.monthYear.month || 0}\r\n                  onChange={(event) =>\r\n                    this.setStateMonth(event, event.target.value)\r\n                  }\r\n                >\r\n                  {MONTHS_LIST.map((item) => (\r\n                    <MenuItem key={item.key} value={item.value}>\r\n                      {item.text}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <InputLabel>Год</InputLabel>\r\n                <Select\r\n                  value={this.state.monthYear.year || 2020}\r\n                  onChange={(event) =>\r\n                    this.setStateYear(event, event.target.value)\r\n                  }\r\n                >\r\n                  {this.getCurrentYear().map((item) => (\r\n                    <MenuItem key={item.key} value={item.value}>\r\n                      {item.text}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" className=\"headerMargin\">\r\n                Электроэнергия\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"День\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.ElectricityDay.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"ElectricityDay\", value)\r\n                }\r\n                error={!this.state.indicators.ElectricityDay.valid}\r\n                helperText={\r\n                  !this.state.indicators.ElectricityDay.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"Ночь\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.ElectricityNight.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"ElectricityNight\", value)\r\n                }\r\n                error={!this.state.indicators.ElectricityNight.valid}\r\n                helperText={\r\n                  !this.state.indicators.ElectricityNight.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" className=\"headerMargin\">\r\n                Кухня\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"Холодная вода\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.ColdWaterKittchen.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"ColdWaterKittchen\", value)\r\n                }\r\n                error={!this.state.indicators.ColdWaterKittchen.valid}\r\n                helperText={\r\n                  !this.state.indicators.ColdWaterKittchen.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"Горячая вода\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.HotWaterKittchen.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"HotWaterKittchen\", value)\r\n                }\r\n                error={!this.state.indicators.HotWaterKittchen.valid}\r\n                helperText={\r\n                  !this.state.indicators.HotWaterKittchen.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" className=\"headerMargin\">\r\n                Ванная\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"Холодная вода\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.ColdWaterBathroom.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"ColdWaterBathroom\", value)\r\n                }\r\n                error={!this.state.indicators.ColdWaterBathroom.valid}\r\n                helperText={\r\n                  !this.state.indicators.ColdWaterBathroom.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <CurrencyTextField\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                label=\"Горячая вода\"\r\n                currencySymbol=\"\"\r\n                value={this.state.indicators.HotWaterBathroom.value}\r\n                minimumValue=\"0\"\r\n                onChange={(event, value) =>\r\n                  this.addIndicatorHandler(\"HotWaterBathroom\", value)\r\n                }\r\n                error={!this.state.indicators.HotWaterBathroom.valid}\r\n                helperText={\r\n                  !this.state.indicators.HotWaterBathroom.valid\r\n                    ? errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ textAlign: \"center\", marginTop: \"15px\" }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={this.modalHandlerOpen}\r\n              >\r\n                Отправить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IndicatorsInsert);\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    flexGrow: 1,\r\n  },\r\n  textFieldMargin: {\r\n    marginRight: \"15px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    right: \"30px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <FormControl\r\n              className={\r\n                classes.textFieldMargin +\r\n                \" \" +\r\n                classes.textField +\r\n                \" \" +\r\n                classes.selectPadding\r\n              }\r\n            >\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.row}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n              />\r\n\r\n              <KeyboardDatePicker\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd}\r\n                className={classes.textField}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          Удалить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport \"./Tariffs.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      cost: 0,\r\n      dateEnd: null,\r\n      dateStart: null,\r\n      name: \"\",\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newState = [...this.state.tariffs];\r\n    let changeIndex = newState.findIndex((item) => item.id === id);\r\n    newState[changeIndex][key] = value;\r\n\r\n    this.setState({ tariffs: newState });\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div className=\"tariffContainer\">\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Button\r\n          onClick={() => this.addTariffToState(tariffCards)}\r\n          color=\"primary\"\r\n          disabled={this.state.addButtonDisabled}\r\n        >\r\n          Добавить тариф\r\n        </Button>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tariffs;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime())/1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/UI/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/UI/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/UI/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/UI/AuthComponents/AuthAlert\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\"\r\n    },\r\n    willSend: true\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.rememberMe\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"authHeader\">Вход в аккаунт</h1>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) =>\r\n      dispatch(actions.auth(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  if (action.error === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport history from \"./store/history\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter history={history} basename={\"/\"}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}