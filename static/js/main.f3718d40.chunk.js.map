{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","containers/OutlayDetails/OutlayDetails.js","components/IndicatorsInsertForm/Constants.js","components/UI/Inputs/InputNum.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/AuthComponents/AuthInput.js","components/AuthComponents/AuthInputPassword.js","components/AuthComponents/AuthButton.js","components/AuthComponents/AuthAlert.js","store/actions/auth.js","store/actions/actionTypes.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","App.js","serviceWorker.js","store/history.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","button","color","grow","MenuAppBar","props","classes","className","AppBar","position","Toolbar","ButtonGroup","disableElevation","variant","Button","component","NavLink","to","IconButton","aria-label","aria-controls","aria-haspopup","Layout","Grid","container","this","isAuth","item","xs","Paper","children","Component","instance","axios","create","baseURL","outlay","indicatorsList","date","indicators","indicatorMonth","getMonth","TableContainer","style","marginTop","Typography","align","getFullYear","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","key","scope","name","intake","boxShadow","label","fontSize","TabUI","React","useState","value","setValue","Tabs","onChange","event","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","OutlayDetails","state","prevIndicators","currentYear","Date","getUTCFullYear","error","getListOfIndicators","get","then","response","console","log","data","Object","keys","length","id","CurrentDate","today","Number","Electricity","Day","Night","ColdWater","Bathroom","Kittchen","HotWater","sort","a","b","getTime","setState","countOutlay","catch","newIndicatorsList","i","newItem","year","Loader","active","inline","filter","Outlay","textAlign","push","MONTHS_LIST","text","inputNum","alertMessage","errorMessage","classEnter","htmlFor","decimalScale","decimalSeparator","allowNegative","placeholder","changed","invalid","IndicatorsInsert","ElectricityDay","valid","ElectricityNight","ColdWaterKittchen","ColdWaterBathroom","HotWaterKittchen","HotWaterBathroom","monthYear","month","emailData","recipient","CONFIG","RECIPIENT","address","ADDRESS","modalOpen","addIndicatorHandler","type","updatedCount","target","updatedIndicators","modalHandlerClose","modalHandlerOpen","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","electricityDay","electricityNight","coldWaterKittchen","coldWaterBathroom","hotWaterKittchen","hotWaterBathroom","emailjs","send","SERVICE_ID","TEMPLATE_ID","USER_ID","status","sendIndicators","dateOfIndicators","toISOString","post","history","getCurrentMonth","getCurrentYear","currentYearList","setStateMonth","e","updatedMonth","updatedMonthYear","setStateYear","updatedYear","inputClasses","inputError","Dialog","open","onClose","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","onClick","autoFocus","Dropdown","selection","fluid","defaultValue","options","InputNum","join","withRouter","createStyles","margin","width","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","edge","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","marginBottom","Alert","AuthAlert","authSuccess","token","userId","idToken","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validation","validateFieldsUpdate","test","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","helperText","connect","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","authFail","actions","Logout","onLogout","App","onTryAutoSignup","routes","path","getItem","Boolean","window","location","hostname","match","createBrowserHistory","updateObject","oldObject","updatedProperties","initialState","authStart","action","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3718d40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles(); \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n            <Button\r\n              className={classes.button}\r\n              component={NavLink}\r\n              to=\"/send-indicators\"\r\n            >\r\n              Показания\r\n            </Button>\r\n            <Button className={classes.button} component={NavLink} to=\"/outlay\">\r\n              Расходы\r\n            </Button>\r\n          </ButtonGroup>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              component={NavLink}\r\n              to=\"/logout\"\r\n            >\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./Layout.css\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12}>\r\n            <AppBar />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst outlay = (props) => {\r\n  let { date, indicators } = props.indicatorsList;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{marginTop: \"30px\"}}>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport \"./OutlayDetails.css\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass OutlayDetails extends Component {\r\n  // TODO Хранить в бд первоначальные результаты\r\n  state = {\r\n    indicatorsList: [],\r\n    prevIndicators: [\r\n      {\r\n        name: \"Эл-я день:\",\r\n        intake: 18572,\r\n      },\r\n      {\r\n        name: \"Эл-я ночь:\",\r\n        intake: 6699,\r\n      },\r\n      {\r\n        name: \"Холодная вода:\",\r\n        intake: 402,\r\n      },\r\n      {\r\n        name: \"Горячая вода:\",\r\n        intake: 420,\r\n      },\r\n      {\r\n        name: \"Водоотведение:\",\r\n        intake: 822,\r\n      },\r\n    ],\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfIndicators();\r\n  }\r\n\r\n  getListOfIndicators = () => {\r\n    axios\r\n      .get(`/indicators.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        if (Object.keys(response.data).length !== 0) {\r\n          let indicatorsList = Object.keys(response.data).map((key) => {\r\n            return {\r\n              id: key,\r\n              date: new Date(response.data[key].CurrentDate.today),\r\n              indicators: [\r\n                {\r\n                  name: \"Эл-я день:\",\r\n                  intake: Number(response.data[key].Electricity.Day),\r\n                },\r\n                {\r\n                  name: \"Эл-я ночь:\",\r\n                  intake: Number(response.data[key].Electricity.Night),\r\n                },\r\n                {\r\n                  name: \"Холодная вода:\",\r\n                  intake:\r\n                    Number(response.data[key].ColdWater.Bathroom) +\r\n                    Number(response.data[key].ColdWater.Kittchen),\r\n                },\r\n                {\r\n                  name: \"Горячая вода:\",\r\n                  intake:\r\n                    Number(response.data[key].HotWater.Bathroom) +\r\n                    Number(response.data[key].HotWater.Kittchen),\r\n                },\r\n                {\r\n                  name: \"Водоотведение:\",\r\n                  intake:\r\n                    Number(response.data[key].ColdWater.Bathroom) +\r\n                    Number(response.data[key].ColdWater.Kittchen) +\r\n                    Number(response.data[key].HotWater.Bathroom) +\r\n                    Number(response.data[key].HotWater.Kittchen),\r\n                },\r\n              ],\r\n            };\r\n          });\r\n          indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n          this.setState({ indicatorsList: this.countOutlay(indicatorsList) });\r\n        } else {\r\n          this.setState({\r\n            error: `Данные за ${this.state.currentYear} год отсутствуют. Передайте показания счетчиков.`,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  countOutlay = (indicatorsList) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake - this.state.prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  // TODO: Добавить возможность редактирования и удаления записей\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList.length === 0 && this.state.error == null) {\r\n      indicatorsList = (\r\n        <Loader active inline=\"centered\">\r\n          Загрузка\r\n        </Loader>\r\n      );\r\n    } else if (this.state.indicatorsList.length > 0) {\r\n      indicatorsList = this.state.indicatorsList\r\n        .filter((item) => {\r\n          return item.date.getUTCFullYear() === this.state.currentYear;\r\n        })\r\n        .map((item, index) => {\r\n          return <Outlay key={index} indicatorsList={item} />;\r\n        });\r\n    } else if (this.state.indicatorsList.length === 0 && this.state.error) {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div className=\"outlayContainer\">\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutlayDetails;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst inputNum = (props) => {\r\n  const alertMessage = (<div className=\"ui pointing red basic label\">{props.errorMessage}</div>);\r\n  return (\r\n    <div className={props.classEnter}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <NumberFormat\r\n        decimalScale=\"2\"\r\n        decimalSeparator=\".\"\r\n        allowNegative={false}\r\n        id={props.id}\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.changed}\r\n        value={props.value}\r\n      />\r\n      {props.invalid ? null : alertMessage}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default inputNum;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\nimport CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport InputNum from \"../../components/UI/Inputs/InputNum\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonUI from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      ElectricityDay: { value: \"\", valid: true },\r\n      ElectricityNight: { value: \"\", valid: true },\r\n      ColdWaterKittchen: { value: \"\", valid: true },\r\n      ColdWaterBathroom: { value: \"\", valid: true },\r\n      HotWaterKittchen: { value: \"\", valid: true },\r\n      HotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    emailData: {\r\n      recipient: CONFIG.RECIPIENT,\r\n      address: CONFIG.ADDRESS,\r\n    },\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, event) => {\r\n    //Обновляем показатель\r\n    const updatedCount = event.target.value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\") {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.ElectricityDay.valid &&\r\n      this.state.indicators.ElectricityNight.valid &&\r\n      this.state.indicators.ColdWaterKittchen.valid &&\r\n      this.state.indicators.ColdWaterBathroom.valid &&\r\n      this.state.indicators.HotWaterKittchen.valid &&\r\n      this.state.indicators.HotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.state.emailData.recipient,\r\n      address: this.state.emailData.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.ElectricityDay.value,\r\n      electricityNight: this.state.indicators.ElectricityNight.value,\r\n      coldWaterKittchen: this.state.indicators.ColdWaterKittchen.value,\r\n      coldWaterBathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      hotWaterKittchen: this.state.indicators.HotWaterKittchen.value,\r\n      hotWaterBathroom: this.state.indicators.HotWaterBathroom.value,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      this.state.monthYear.year,\r\n      this.state.monthYear.month,\r\n      1,\r\n      5,\r\n      0,\r\n      0,\r\n      0\r\n    ).toISOString();\r\n\r\n    const indicators = {\r\n      Electricity: {\r\n        Day: this.state.indicators.ElectricityDay.value,\r\n        Night: this.state.indicators.ElectricityNight.value,\r\n      },\r\n      ColdWater: {\r\n        Kittchen: this.state.indicators.ColdWaterKittchen.value,\r\n        Bathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      },\r\n      HotWater: {\r\n        Kittchen: this.state.indicators.HotWaterKittchen.value,\r\n        Bathroom: this.state.indicators.HotWaterBathroom.value,\r\n      },\r\n      CurrentDate: { today: dateOfIndicators, year: this.state.monthYear.year },\r\n    };\r\n    axios\r\n      .post(\"/indicators.json\", indicators)\r\n      .then((response) => {\r\n        this.setState({ modalOpen: false });\r\n        this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, { value }) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, { value }) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n    const inputClasses = [\"field\"];\r\n    const inputError = [\"field\", \"error\"];\r\n    return (\r\n      <div className=\"ui center ui_center\">\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Проверьте показатели за{\" \"}\r\n              {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n              {this.state.monthYear.year} г.\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Электроэнергия\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    День:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityDay.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Ночь:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityNight.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Кухня\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Ванная\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <ButtonUI onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </ButtonUI>\r\n            <ButtonUI onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </ButtonUI>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <form className=\"ui form\">\r\n          <div className=\"ui one column centered grid\">\r\n            <div className=\"column\">\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                Отправка показаний\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <Typography variant=\"h5\">Месяц и год</Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <Dropdown\r\n                  placeholder=\"Выберите месяц\"\r\n                  selection\r\n                  fluid\r\n                  defaultValue={MONTHS_LIST[this.getCurrentMonth()].value}\r\n                  options={MONTHS_LIST}\r\n                  onChange={this.setStateMonth}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <div className=\"column\">\r\n                  <Dropdown\r\n                    placeholder=\"Выберите месяц\"\r\n                    selection\r\n                    fluid\r\n                    defaultValue={this.getCurrentYear()[2].value}\r\n                    options={this.getCurrentYear()}\r\n                    onChange={this.setStateYear}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Электроэнергия</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityDay.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityDay\"}\r\n                  label={\"День\"}\r\n                  placeholder={\"Введите дневное потребление\"}\r\n                  name={\"ElectricityDay\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityDay\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityDay.value}\r\n                  invalid={this.state.indicators.ElectricityDay.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityNight.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityNight\"}\r\n                  label={\"Ночь\"}\r\n                  placeholder={\"Введите ночное потребление\"}\r\n                  name={\"ElectricityNight\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityNight\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityNight.value}\r\n                  invalid={this.state.indicators.ElectricityNight.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Кухня</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterKittchen\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterKittchen.value}\r\n                  invalid={this.state.indicators.ColdWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterBathroom\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterBathroom.value}\r\n                  invalid={this.state.indicators.HotWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Ванная</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterBathroom\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterBathroom.value}\r\n                  invalid={this.state.indicators.ColdWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterKittchen\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterKittchen.value}\r\n                  invalid={this.state.indicators.HotWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui one column centered grid\">\r\n            <div style={{ textAlign: \"center\" }} className=\"column\">\r\n              <ButtonUI\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={this.modalHandlerOpen}\r\n              >\r\n                Отправить показания\r\n              </ButtonUI>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IndicatorsInsert);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime())/1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/AuthComponents/AuthAlert\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\"\r\n    },\r\n    willSend: true\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.rememberMe\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"authHeader\">Вход в аккаунт</h1>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) =>\r\n      dispatch(actions.auth(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  if (action.error === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport history  from \"./store/history\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter history={history} basename={process.env.PUBLIC_URL + \"/\"}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}