{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/IndicatorsInsertForm/Constants.js","components/UI/Switch/Switch.js","components/IndicatorsInsertForm/DialogCheck.js","components/UI/CardBody/CardBody.js","components/IndicatorsInsertForm/Indicators.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","components/Helpers/FormHelper.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","containers/UsersProfile/UsersProfile.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/AuthComponents/AuthAlert.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","width","button","color","grow","list","MenuAppBar","props","classes","sectionTitleName","window","location","hash","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","userDetails","firstName","lastName","aria-controls","aria-haspopup","component","NavLink","to","Drawer","drawer","anchor","open","onClose","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","children","Component","connect","state","instance","axios","create","baseURL","MONTHS_LIST","text","value","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","switchChange","label","DialogCheck","Dialog","modalOpen","modalHandlerClose","maxWidth","DialogTitle","align","monthYear","month","year","DialogContent","dividers","spacing","indicators","electricityDay","electricityNight","coldWaterKitchen","hotWaterKitchen","coldWaterBathroom","hotWaterBathroom","sendDataToAccountant","DialogActions","Button","sendIndicators","autoFocus","margin","cardPadding","padding","CardBody","Card","CardContent","Indicators","errorMessage","FormControl","InputLabel","Select","event","setStateMonth","target","MenuItem","setStateYear","getCurrentYear","currencySymbol","minimumValue","addIndicatorHandler","error","valid","helperText","textAlign","marginTop","disableElevation","modalHandlerOpen","IndicatorsInsert","Date","getMonth","getFullYear","type","updatedCount","updatedIndicators","setState","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","recipient","accountantEmail","address","console","log","emailjs","send","CONFIG","then","response","status","dateOfIndicators","UTC","setUTCHours","electricity","day","night","coldWater","kitchen","bathroom","hotWater","currentDate","today","toUTCString","userId","localStorage","getItem","token","post","history","push","catch","getCurrentMonth","currentYear","currentYearList","i","e","updatedMonth","updatedMonthYear","updatedYear","withRouter","display","flexDirection","paragraph","Loader","CircularProgress","buttonClose","right","top","buttonSend","left","Outlay","indicatorsList","id","date","costNovogor","indicatorMonth","TableContainer","handleSendDialogOpen","disableRipple","disableFocusRipple","handleDeleteDialogOpen","Table","TableHead","TableRow","TableCell","TableBody","index","scope","intake","outlay","boxShadow","fontSize","TabUI","React","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","aria-labelledby","aria-describedby","dialogTitle","DialogContentText","dialogContent","handleContinue","activeButtonName","OutlayDetails","prevIndicators","tariffs","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","sendDialogOpen","sendIndicatorId","getDataFromFirebase","url_1","url_2","url_3","promise1","get","promise2","promise3","Promise","all","values","getUserDetails","data","getListOfTariffs","getListOfIndicators","countOutlay","length","prevIndicatorsData","Object","keys","tariff","sort","a","b","getTime","indicator","getOneIndicator","enqueueSnackbar","preventDuplicate","find","deleteItemFromIndicators","delete","removeIndicatorFromState","removeId","newIndicatorsList","filter","handleDeleteDialogClose","handleDeleteDialogContinue","handleSendDialogClose","handleSendDialogContinue","newItem","countCostNovogor","indicatorsDate","getDate","disposalWater","waterTariff","dateStart","dateEnd","setDate","cost","disposalTariff","toFixed","withSnackbar","paddingBottom","paddingTop","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonIconSuccessDisabled","buttonSuccess","backgorundColor","TariffCard","tariffValid","disabled","setDisabled","updateItemInTariffs","insertItemToTariffs","updateTariffInState","touched","FormHelperText","maximumValue","utils","DateFnsUtils","DatePicker","clearable","format","textFieldMargin","checkFieldValidity","rules","validation","isValid","required","trim","isEmail","test","isDate","isNumber","isPassord","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newTariff","changeIndex","findIndex","formValid","checkFormValidity","tariffCards","marginBottom","alignContent","wrap","field","buttonPosition","UserCard","userEmail","prevIndicatorsDate","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","TextField","fullWidth","updateUserDataInState","isDisabled","updatePrevIndicatorsInState","_","updateUserDetails","UsersProfile","userDetailsValid","prevIndicatorsValid","dataFromDB","newUserDetails","userFormData","newPrevIndicators","authSuccess","dispatch","loadUserData","idToken","authSuccessDone","authFail","authLogout","removeItem","checkAuthTimeout","expirationTime","setTimeout","userIdDb","CSSAlert","withStyles","Alert","AuthAlert","CSSButton","textTransform","AuthButton","createStyles","input","WebkitBoxShadow","AuthInput","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","AuthForm","auth","email","password","authValid","inputHandler","newAuthState","stateData","formSenderHandler","onAuth","severity","Link","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","actions","Logout","onLogout","StepOne","autoComplete","StepTwo","stepLabel","wordBreak","backButton","marginRight","instructions","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","registration","RegistrationForm","onRegistration","formId","scrollTo","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","message","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"mnBAuBMA,EAAgB,CACpB,CAAEC,KAAM,yDAAaC,KAAM,mBAAoBC,KAAM,kBAAC,IAAD,OACrD,CAAEF,KAAM,6CAAWC,KAAM,UAAWC,KAAM,kBAAC,IAAD,OAC1C,CAAEF,KAAM,uCAAUC,KAAM,WAAYC,KAAM,kBAAC,IAAD,OAC1C,CAAEF,KAAM,6CAAWC,KAAM,WAAYC,KAAM,kBAAC,IAAD,QAGvCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,MAAO,QAETC,OAAQ,CACN,UAAW,CACTC,MAAO,UAGXC,KAAM,CACJJ,SAAU,GAEZK,KAAM,CACJJ,MAAO,SA0FIK,EAtFI,SAACC,GAClB,IAAMC,EAAUZ,IAEZa,EAAmB,yDACvB,OAAQC,OAAOC,SAASC,MACtB,IAAK,oBACHH,EAAmB,yDACnB,MACF,IAAK,WACHA,EAAmB,6CACnB,MACF,IAAK,YACHA,EAAmB,uCACnB,MACF,IAAK,YACHA,EAAmB,6CAfK,MAqBYI,mBAASJ,GArBrB,mBAqBrBK,EArBqB,KAqBPC,EArBO,OAsBQF,oBAAS,GAtBjB,mBAsBrBG,EAtBqB,KAsBTC,EAtBS,KAuBtBC,EAAYC,YAAc,qBAEhC,OACE,yBAAKC,UAAWZ,EAAQT,MACtB,kBAACsB,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWZ,EAAQkB,WACnBvB,MAAM,UACNwB,aAAW,OACXC,QAAS,kBAAMX,GAAc,KAE7B,kBAAC,IAAD,OAEF,kBAACY,EAAA,EAAD,CAAYC,QAAQ,MAAMhB,GAC1B,yBAAKM,UAAWZ,EAAQJ,OACvBG,EAAMwB,aAAeb,EACpB,kBAACW,EAAA,EAAD,CAAYC,QAAQ,MACjBvB,EAAMwB,YAAYC,UAAY,IAAMzB,EAAMwB,YAAYE,UAEvD,KAEJ,kBAACT,EAAA,EAAD,CACEG,aAAW,0BACXO,gBAAc,cACdC,gBAAc,OACdhC,MAAM,UACNiC,UAAWC,IACXC,GAAG,WAEH,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CACEnB,UAAWZ,EAAQgC,OACnBC,OAAO,OACPC,KAAM1B,EACN2B,QAAS,kBAAM1B,GAAc,KAE7B,kBAAC2B,EAAA,EAAD,CAAMxB,UAAWZ,EAAQH,MACtBb,EAAcqD,KAAI,SAACC,GAAD,OACjB,kBAACC,EAAA,EAAD,CACE7C,QAAM,EACN8C,IAAKF,EAAKrD,KACV2C,UAAWC,IACXC,GAAIQ,EAAKpD,KACTkC,QAAS,WACPX,GAAc,GACdF,EAAgB+B,EAAKrD,QAGvB,kBAACwD,EAAA,EAAD,KAAeH,EAAKnD,MACpB,kBAACuD,EAAA,EAAD,CAAcC,QAASL,EAAKrD,gBCnHtC2D,E,uKAEF,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UAEVC,KAAKnD,MAAMoD,QACV,kBAACN,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAIC,MAAO,CAAE5D,MAAO,SACjC,kBAAC,EAAD,CAAQ8B,YAAa2B,KAAKnD,MAAMwB,eAGpC,kBAACsB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAIC,MAAO,CAAE5D,MAAO,SACjC,kBAAC6D,EAAA,EAAD,CAAO1C,UAAU,SAASsC,KAAKnD,MAAMwD,gB,GAf1BC,aA4BNC,eANS,SAACC,GACvB,MAAO,CACLnC,YAAamC,EAAMnC,eAIRkC,CAAyBb,G,gBC/BzBe,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,mD,mCCHEC,EAAc,CACzB,CACEC,KAAM,uCACNC,MAAO,GAET,CACED,KAAM,6CACNC,MAAO,GAET,CACED,KAAM,2BACNC,MAAO,GAET,CACED,KAAM,uCACNC,MAAO,GAET,CACED,KAAM,qBACNC,MAAO,GAET,CACED,KAAM,2BACNC,MAAO,GAET,CACED,KAAM,2BACNC,MAAO,GAET,CACED,KAAM,uCACNC,MAAO,GAET,CACED,KAAM,mDACNC,MAAO,GAET,CACED,KAAM,6CACNC,MAAO,GAET,CACED,KAAM,uCACNC,MAAO,IAET,CACED,KAAM,6CACNC,MAAO,K,4BC1CI,SAASC,GAAanE,GACnC,OACE,kBAACoE,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAASzE,EAAMyE,QACfC,SAAU1E,EAAM2E,aAChBzF,KAAMc,EAAM4E,MACZhF,MAAM,YAGVgF,MAAO5E,EAAM4E,S,sDC6GNC,GAhHK,SAAC7E,GACnB,OACE,kBAAC8E,GAAA,EAAD,CACE3C,KAAMnC,EAAM+E,UACZ3C,QAASpC,EAAMgF,kBACfC,SAAS,MAET,kBAACC,GAAA,EAAD,CAAaC,MAAM,UAAnB,oIAC2BnB,EAAYhE,EAAMoF,UAAUC,OAAOpB,KAAM,IACjEjE,EAAMoF,UAAUE,KAFnB,YAIA,kBAACC,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAAC1C,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,yFAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,8BAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWC,eAAezB,QAGrC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,8BAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWE,iBAAiB1B,QAIvC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,mCAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,+EAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWG,iBAAiB3B,QAGvC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,yEAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWI,gBAAgB5B,QAItC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,yCAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,+EAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWK,kBAAkB7B,QAGxC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAAlC,yEAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,QAAQ4D,MAAM,UAC/BnF,EAAM0F,WAAWM,iBAAiB9B,QAIvC,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC,GAAD,CACEuB,MAAM,mIACNH,QAASzE,EAAMiG,qBACftB,aAAc3E,EAAM2E,kBAK5B,kBAACuB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQ9E,QAASrB,EAAMgF,kBAAmBpF,MAAM,aAAhD,wCAGA,kBAACuG,GAAA,EAAD,CAAQ9E,QAASrB,EAAMoG,eAAgBxG,MAAM,UAAUyG,WAAS,GAAhE,6D,oBC/GFhH,GAAYC,YAAW,CAC3BE,KAAM,CACJ8G,OAAQ,UAEVC,YAAa,CACXC,QAAS,qBAgBEC,GAZE,SAACzG,GAChB,IAAMC,EAAUZ,KAEhB,OACE,kBAACqH,GAAA,EAAD,CAAM7F,UAAWZ,EAAQT,MACvB,kBAACmH,GAAA,EAAD,CAAa9F,UAAWZ,EAAQsG,aAC7BvG,EAAMwD,Y,4DCsKAoD,GA9KI,SAAC5G,GAClB,IAAM6G,EAAe,8KACrB,OACE,kBAAC/D,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,6DAIF,kBAACiC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACyD,GAAA,EAAD,CAAaxD,MAAO,CAAE5D,MAAO,SAC3B,kBAACqH,GAAA,EAAD,uCACA,kBAACC,GAAA,EAAD,CACE9C,MAAOlE,EAAMoF,UAAUC,OAAS,EAChCX,SAAU,SAACuC,GAAD,OAAWjH,EAAMkH,cAAcD,EAAOA,EAAME,OAAOjD,SAE5DF,EAAY1B,KAAI,SAACC,GAAD,OACf,kBAAC6E,GAAA,EAAD,CAAU3E,IAAKF,EAAK2B,MAAOA,MAAO3B,EAAK2B,OACpC3B,EAAK0B,YAMhB,kBAACnB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACyD,GAAA,EAAD,CAAaxD,MAAO,CAAE5D,MAAO,SAC3B,kBAACqH,GAAA,EAAD,2BACA,kBAACC,GAAA,EAAD,CACE9C,MAAOlE,EAAMoF,UAAUE,MAAQ,KAC/BZ,SAAU,SAACuC,GAAD,OAAWjH,EAAMqH,aAAaJ,EAAOA,EAAME,OAAOjD,SAE3DlE,EAAMsH,iBAAiBhF,KAAI,SAACC,GAAD,OAC1B,kBAAC6E,GAAA,EAAD,CAAU3E,IAAKF,EAAK2B,MAAOA,MAAO3B,EAAK2B,OACpC3B,EAAK0B,YAOhB,kBAACnB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,yFAIF,kBAACiC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,2BACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWC,eAAezB,MACvCsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,iBAAkBvD,IAE9CwD,OAAQ1H,EAAM0F,WAAWC,eAAegC,MACxCC,WACG5H,EAAM0F,WAAWC,eAAegC,MAAuB,KAAfd,KAI/C,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,2BACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWE,iBAAiB1B,MACzCsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,mBAAoBvD,IAEhDwD,OAAQ1H,EAAM0F,WAAWE,iBAAiB+B,MAC1CC,WACG5H,EAAM0F,WAAWE,iBAAiB+B,MAAuB,KAAfd,KAKjD,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,mCAIF,kBAACiC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,4EACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWG,iBAAiB3B,MACzCsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,mBAAoBvD,IAEhDwD,OAAQ1H,EAAM0F,WAAWG,iBAAiB8B,MAC1CC,WACG5H,EAAM0F,WAAWG,iBAAiB8B,MAAuB,KAAfd,KAIjD,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,sEACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWI,gBAAgB5B,MACxCsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,kBAAmBvD,IAE/CwD,OAAQ1H,EAAM0F,WAAWI,gBAAgB6B,MACzCC,WACG5H,EAAM0F,WAAWI,gBAAgB6B,MAAuB,KAAfd,KAKhD,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAU,gBAAnC,yCAIF,kBAACiC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,4EACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWK,kBAAkB7B,MAC1CsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,oBAAqBvD,IAEjDwD,OAAQ1H,EAAM0F,WAAWK,kBAAkB4B,MAC3CC,WACG5H,EAAM0F,WAAWK,kBAAkB4B,MAAuB,KAAfd,KAIlD,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACEC,MAAO,CAAE5D,MAAO,QAChB6B,QAAQ,WACRqD,MAAM,sEACN2C,eAAe,GACfrD,MAAOlE,EAAM0F,WAAWM,iBAAiB9B,MACzCsD,aAAa,IACb9C,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMyH,oBAAoB,mBAAoBvD,IAEhDwD,OAAQ1H,EAAM0F,WAAWM,iBAAiB2B,MAC1CC,WACG5H,EAAM0F,WAAWM,iBAAiB2B,MAAuB,KAAfd,KAKjD,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GAAIC,MAAO,CAAEuE,UAAW,SAAUC,UAAW,SAC1D,kBAAC3B,GAAA,EAAD,CACE5E,QAAQ,YACR3B,MAAM,UACNmI,kBAAgB,EAChB1G,QAASrB,EAAMgI,kBAJjB,6DC/JFC,G,4MACJtE,MAAQ,CACN+B,WAAY,CACVC,eAAgB,CAAEzB,MAAO,GAAIyD,OAAO,GACpC/B,iBAAkB,CAAE1B,MAAO,GAAIyD,OAAO,GACtC9B,iBAAkB,CAAE3B,MAAO,GAAIyD,OAAO,GACtC5B,kBAAmB,CAAE7B,MAAO,GAAIyD,OAAO,GACvC7B,gBAAiB,CAAE5B,MAAO,GAAIyD,OAAO,GACrC3B,iBAAkB,CAAE9B,MAAO,GAAIyD,OAAO,IAExCvC,UAAW,CACTC,OAAO,IAAI6C,MAAOC,WAClB7C,MAAM,IAAI4C,MAAOE,eAEnBnC,sBAAsB,EACtBlB,WAAW,G,EAGb0C,oBAAsB,SAACY,EAAMnE,GAC3B,IAAMoE,EAAepE,EACfqE,EAAiB,eAAQ,EAAK5E,MAAM+B,YAC1C6C,EAAkBF,GAAMnE,MAAQoE,EAChCC,EAAkBF,GAAMV,OAAQ,EAEhC,EAAKa,SAAS,CAAE9C,WAAY6C,K,EAG9BvD,kBAAoB,WAClB,EAAKwD,SAAS,CAAEzD,WAAW,K,EAG7BiD,iBAAmB,SAACf,GAGlB,IAAK,IAAIwB,KAFTxB,EAAMyB,iBAEU,EAAK/E,MAAM+B,WAAY,CACrC,IAAMA,EAAU,eAAQ,EAAK/B,MAAM+B,YAEnC,GAA8B,KAA1BA,EAAW+C,GAAKvE,OAA0C,IAA1BwB,EAAW+C,GAAKvE,MAAa,CAC/D,IAAMqE,EAAiB,eAAQ,EAAK5E,MAAM+B,YAC1C6C,EAAkBE,GAAKd,OAAQ,EAC/B,EAAKa,SAAS,CAAE9C,WAAY6C,IAC5B,EAAKC,SAAS,CAAEG,iBAAiB,KAKnC,EAAKhF,MAAM+B,WAAWC,eAAegC,OACrC,EAAKhE,MAAM+B,WAAWE,iBAAiB+B,OACvC,EAAKhE,MAAM+B,WAAWG,iBAAiB8B,OACvC,EAAKhE,MAAM+B,WAAWK,kBAAkB4B,OACxC,EAAKhE,MAAM+B,WAAWI,gBAAgB6B,OACtC,EAAKhE,MAAM+B,WAAWM,iBAAiB2B,OAEvC,EAAKa,SAAS,CAAEzD,WAAW,K,EAG/B6D,iBAAmB,WACjB,IAAIC,EAAiB,CACnBC,UAAW,EAAK9I,MAAMwB,YAAYuH,gBAClCC,QAAS,EAAKhJ,MAAMwB,YAAYwH,QAChC3D,MAAOrB,EAAY,EAAKL,MAAMyB,UAAUC,OAAOpB,KAC/CqB,KAAM,EAAK3B,MAAMyB,UAAUE,KAC3BK,eAAgB,EAAKhC,MAAM+B,WAAWC,eAAezB,MACrD0B,iBAAkB,EAAKjC,MAAM+B,WAAWE,iBAAiB1B,MACzD2B,iBAAkB,EAAKlC,MAAM+B,WAAWG,iBAAiB3B,MACzD6B,kBAAmB,EAAKpC,MAAM+B,WAAWK,kBAAkB7B,MAC3D4B,gBAAiB,EAAKnC,MAAM+B,WAAWI,gBAAgB5B,MACvD8B,iBAAkB,EAAKrC,MAAM+B,WAAWM,iBAAiB9B,OAG3D+E,QAAQC,IAAIL,GAEZM,IACGC,KACCC,aACAA,cACAR,EACAQ,WAEDC,MACC,SAACC,GACCN,QAAQC,IAAI,WAAYK,EAASC,OAAQD,EAAStF,SAEpD,SAACyD,GACCuB,QAAQC,IAAI,YAAaxB,O,EAKjCtB,eAAiB,WACf,IAAIqD,EAAmB,IAAIvB,KACzBA,KAAKwB,IAAI,EAAK/F,MAAMyB,UAAUE,KAAM,EAAK3B,MAAMyB,UAAUC,MAAO,EAAG,IACnEsE,YAAY,EAAG,EAAG,EAAG,GAEjBjE,EAAa,CACjBkE,YAAa,CACXC,IAAK,EAAKlG,MAAM+B,WAAWC,eAAezB,MAC1C4F,MAAO,EAAKnG,MAAM+B,WAAWE,iBAAiB1B,OAEhD6F,UAAW,CACTC,QAAS,EAAKrG,MAAM+B,WAAWG,iBAAiB3B,MAChD+F,SAAU,EAAKtG,MAAM+B,WAAWK,kBAAkB7B,OAEpDgG,SAAU,CACRF,QAAS,EAAKrG,MAAM+B,WAAWI,gBAAgB5B,MAC/C+F,SAAU,EAAKtG,MAAM+B,WAAWM,iBAAiB9B,OAEnDiG,YAAa,CACXC,MAAO,IAAIlC,KAAKuB,GAAkBY,cAClC/E,KAAM,EAAK3B,MAAMyB,UAAUE,MAE7BgF,OAAQC,aAAaC,QAAQ,WAEzBC,EAAQF,aAAaC,QAAQ,SAEnC3G,EACG6G,KADH,gCACiCD,GAAS/E,GACvC4D,MAAK,SAACC,GACLN,QAAQC,IAAIK,GACZ,EAAKf,SAAS,CAAEzD,WAAW,IACvB,EAAKpB,MAAMsC,sBAAsB,EAAK2C,mBAC1C,EAAK5I,MAAM2K,QAAQC,KAAK,cAEzBC,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,O,EAIlBoD,gBAAkB,WAEhB,OADqB,IAAI5C,MAAOC,Y,EAIlCb,eAAiB,WAGf,IAFA,IAAMyD,GAAc,IAAI7C,MAAOE,cAC3B4C,EAAkB,GACbC,EAAI,EAAGA,GAAK,EAAGA,IACtBD,EAAgBJ,KAAK,CACnB3G,KAAM8G,EAAcE,EACpB/G,MAAO6G,EAAcE,IAGzB,OAAOD,G,EAGT9D,cAAgB,SAACgE,EAAGhH,GAClB,IAAMiH,EAAejH,EACfkH,EAAgB,eAAQ,EAAKzH,MAAMyB,WACzCgG,EAAiB/F,MAAQ8F,EACzB,EAAK3C,SAAS,CAAEpD,UAAWgG,K,EAG7B/D,aAAe,SAAC6D,EAAGhH,GACjB,IAAMmH,EAAcnH,EACdkH,EAAgB,eAAQ,EAAKzH,MAAMyB,WACzCgG,EAAiB9F,KAAO+F,EACxB,EAAK7C,SAAS,CAAEpD,UAAWgG,K,EAG7BzG,aAAe,WACb,EAAK6D,SAAS,CAAEvC,sBAAuB,EAAKtC,MAAMsC,wB,uDAIlD,OACE,6BACE,kBAAC,GAAD,CACEP,WAAYvC,KAAKQ,MAAM+B,WACvBN,UAAWjC,KAAKQ,MAAMyB,UACtBL,UAAW5B,KAAKQ,MAAMoB,UACtBkB,qBAAsB9C,KAAKQ,MAAMsC,qBACjCtB,aAAcxB,KAAKwB,aACnBK,kBAAmB7B,KAAK6B,kBACxBoB,eAAgBjD,KAAKiD,iBAGvB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,+FAIA,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEO,WAAYvC,KAAKQ,MAAM+B,WACvBN,UAAWjC,KAAKQ,MAAMyB,UACtB8B,cAAe/D,KAAK+D,cACpBG,aAAclE,KAAKkE,aACnBC,eAAgBnE,KAAKmE,eACrBG,oBAAqBtE,KAAKsE,oBAC1BO,iBAAkB7E,KAAK6E,yB,GA5LJvE,aA0MhB6H,eAAW5H,aANF,SAACC,GACvB,MAAO,CACLnC,YAAamC,EAAMnC,eAIGkC,CAAyBuE,K,4BCrN7C5I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+L,QAAS,OACTC,cAAe,SACftI,WAAY,SACZ4E,UAAW,QAEb2D,UAAW,CACT3D,UAAW,WAcA4D,GAVA,WACb,IAAMzL,EAAUZ,KAChB,OACE,yBAAKwB,UAAWZ,EAAQT,MACtB,kBAACmM,GAAA,EAAD,MACA,kBAACrK,EAAA,EAAD,CAAYT,UAAWZ,EAAQwL,WAA/B,sD,sGCRApM,GAAYC,YAAW,CAC3BE,KAAM,CACJuB,SAAU,WACV+G,UAAW,QAEb8D,YAAa,CACX7K,SAAU,WACV8K,MAAO,MACPC,IAAK,MACLtF,QAAS,GAEXuF,WAAY,CACVhL,SAAU,WACViL,KAAM,MACNF,IAAK,MACLtF,QAAS,KAgHEyF,GA5GA,SAACjM,GACd,IAAMC,EAAUZ,KADQ,EAESW,EAAMkM,eAA/BC,EAFgB,EAEhBA,GAAIC,EAFY,EAEZA,KAAM1G,EAFM,EAENA,WACV2G,EAAgBrM,EAAhBqM,YAEJC,EAAiB,GACrB,OAAQF,EAAKjE,YACX,KAAK,EACHmE,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,6CACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,qBACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,2BACjB,MACF,KAAK,EACHA,EAAiB,uCACjB,MACF,KAAK,EACHA,EAAiB,mDACjB,MACF,KAAK,EACHA,EAAiB,6CACjB,MACF,KAAK,GACHA,EAAiB,uCACjB,MACF,KAAK,GACHA,EAAiB,6CACjB,MACF,QACEA,EAAiB,sEAGrB,OACE,kBAACC,GAAA,EAAD,CAAgB1K,UAAW0B,IAAO1C,UAAWZ,EAAQT,MACnD,kBAACyB,EAAA,EAAD,CACEJ,UAAWZ,EAAQ8L,WACnB3K,aAAW,yDACXS,UAAU,OACVjC,MAAM,UACNyB,QAAS,WACPrB,EAAMwM,qBAAqBL,IAE7BM,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAEF,kBAACzL,EAAA,EAAD,CACEJ,UAAWZ,EAAQ2L,YACnBxK,aAAW,6CACXS,UAAU,OACVjC,MAAM,YACNyB,QAAS,WACPrB,EAAM2M,uBAAuBR,IAE/BM,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAEF,kBAACpL,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAC5BmH,EADH,IACoBF,EAAKhE,eAEzB,kBAACwE,GAAA,EAAD,CAAOxL,aAAW,gBAChB,kBAACyL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qEACA,kBAACA,GAAA,EAAD,CAAW5H,MAAM,UAAjB,wCACA,kBAAC4H,GAAA,EAAD,CAAW5H,MAAM,UAAjB,wEAGJ,kBAAC6H,GAAA,EAAD,KACGtH,EAAWpD,KAAI,SAAC+B,EAAK4I,GAAN,OACd,kBAACH,GAAA,EAAD,CAAUrK,IAAKwK,GACb,kBAACF,GAAA,EAAD,CAAWlL,UAAU,KAAKqL,MAAM,OAC7B7I,EAAInF,MAEP,kBAAC6N,GAAA,EAAD,CAAW5H,MAAM,UAAUd,EAAI8I,QAC/B,kBAACJ,GAAA,EAAD,CAAW5H,MAAM,UAAUd,EAAI+I,YAGnC,kBAACN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlL,UAAU,KAAKqL,MAAM,OAAhC,8CAGA,kBAACH,GAAA,EAAD,CAAW5H,MAAM,UAAUkH,Q,oBC/HjChN,GAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,EACVqI,UAAW,OACXuF,UAAW,QAEbzI,MAAO,CACL0I,SAAU,UA4BCC,GAxBD,SAACvN,GACb,IAAMC,EAAUZ,KADO,EAEGmO,IAAMlN,SAAS,GAFlB,mBAEhB4D,EAFgB,KAETuJ,EAFS,KASvB,OACE,kBAAClK,EAAA,EAAD,CAAO1C,UAAWZ,EAAQT,MACxB,kBAACkO,GAAA,EAAD,CACExJ,MAAOA,EACPQ,SATe,SAACuC,EAAO0G,GAC3BF,EAASE,GACT3N,EAAM4N,kBAAkB5N,EAAM6N,SAASF,KAQnCG,eAAe,UACfC,UAAU,UACVC,UAAQ,GAEPhO,EAAM6N,SAASvL,KAAI,SAAAC,GAAI,OAAI,kBAAC0L,GAAA,EAAD,CAAKxL,IAAKF,EAAMqC,MAAOrC,EAAM1B,UAAWZ,EAAQ2E,c,UC3BrE,SAASsJ,GAAalO,GACnC,OACE,kBAAC8E,GAAA,EAAD,CACE3C,KAAMnC,EAAMmC,KACZC,QAASpC,EAAMmO,YACfC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACnJ,GAAA,EAAD,CAAaiH,GAAG,sBACbnM,EAAMsO,aAET,kBAAC/I,GAAA,EAAD,KACE,kBAACgJ,GAAA,EAAD,CAAmBpC,GAAG,4BACrBnM,EAAMwO,gBAGT,kBAACtI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQ9E,QAASrB,EAAMmO,YAAavO,MAAM,WAA1C,wCAGA,kBAACuG,GAAA,EAAD,CAAQ9E,QAASrB,EAAMyO,eAAgB7O,MAAM,YAAYyG,WAAS,GAC/DrG,EAAM0O,oB,aCdXC,G,4MACJhL,MAAQ,CACNuI,eAAgB,KAChB0C,eAAgB,KAChBC,QAAS,KACT9D,aAAa,IAAI7C,MAAO4G,iBACxBpH,MAAO,KACPqH,kBAAkB,EAClBC,kBAAmB,KACnBC,gBAAgB,EAChBC,gBAAiB,M,EAOnBC,oBAAsB,WACpB,IAAM1E,EAAQF,aAAaC,QAAQ,SAC7BF,EAASC,aAAaC,QAAQ,UAE9B4E,EAAK,2BAAuB3E,EAAvB,sCAA0DH,EAA1D,KACL+E,EAAK,6BAAyB5E,EAAzB,sCAA4DH,EAA5D,KACLgF,EAAK,gCAA4B7E,EAA5B,sCAA+DH,EAA/D,KAELiF,EAAW1L,EAAM2L,IAAIJ,GACrBK,EAAW5L,EAAM2L,IAAIH,GACrBK,EAAW7L,EAAM2L,IAAIF,GAE3BK,QAAQC,IAAI,CAACL,EAAUE,EAAUC,IAC9BpG,MAAK,SAACuG,GACL5G,QAAQC,IAAI,sKAAqC2G,GAEjD,IAAMjB,EAAiB,EAAKkB,eAAeD,EAAO,GAAGE,MAC/ClB,EAAU,EAAKmB,iBAAiBH,EAAO,GAAGE,MAC5C7D,EAAiB,EAAK+D,oBAAoBJ,EAAO,GAAGE,MAI1B,KAF9B7D,EAAiB,EAAKgE,YAAYhE,EAAgB0C,IAE/BuB,OACjB,EAAK3H,SAAS,CACZoG,eAAgBA,EAChBC,QAASA,EACT3C,eAAgBA,IAGlB,EAAK1D,SAAS,CACZoG,eAAgBA,EAChBC,QAASA,EACTnH,MAAO,qHAIZmD,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,GACZ,EAAKc,SAAS,CACZd,MAAO,qQ,EAKfoI,eAAiB,SAACC,GAChB,IAAMK,EAAqBL,EAAKM,OAAOC,KAAKP,IAAOnB,eAqCnD,MApCqB,CACnB,CACEzC,GAAI,kBACJjN,KAAM,gDACNiO,OAAQiD,EAAmBxG,YAAYC,KAEzC,CACEsC,GAAI,oBACJjN,KAAM,gDACNiO,OAAQiD,EAAmBxG,YAAYE,OAEzC,CACEqC,GAAI,aACJjN,KAAM,6EACNiO,OACEiD,EAAmBnG,SAASF,UAC5BqG,EAAmBpG,QAAQD,WAE/B,CACEoC,GAAI,YACJjN,KAAM,uEACNiO,OACEiD,EAAmBnG,SAASC,SAC5BkG,EAAmBpG,QAAQE,UAE/B,CACEiC,GAAI,iBACJjN,KAAM,kFACNiO,OACEiD,EAAmBnG,SAASF,UAC5BqG,EAAmBpG,QAAQD,UAC3BqG,EAAmBnG,SAASC,SAC5BkG,EAAmBpG,QAAQE,Y,EAOnC8F,iBAAmB,SAACD,GAMlB,OALcM,OAAOC,KAAKP,GAAMzN,KAAI,SAACC,GACnC,IAAIgO,EAASR,EAAKxN,GAElB,OADAgO,EAAOpE,GAAK5J,EACLgO,M,EAKXN,oBAAsB,SAACF,GACrB,IAAI7D,EAAiBmE,OAAOC,KAAKP,GAAMzN,KAAI,SAACG,GAC1C,MAAO,CACL0J,GAAI1J,EACJ2J,KAAM,IAAIlE,KAAK6H,EAAKtN,GAAK0H,YAAYC,OACrC9E,KAAMyK,EAAKtN,GAAK0H,YAAY7E,KAC5BI,WAAY,CACV,CACEyG,GAAI,kBACJjN,KAAM,gDACNiO,OAAQ4C,EAAKtN,GAAKmH,YAAYC,KAEhC,CACEsC,GAAI,oBACJjN,KAAM,gDACNiO,OAAQ4C,EAAKtN,GAAKmH,YAAYE,OAEhC,CACEqC,GAAI,aACJjN,KAAM,6EACNiO,OAAQ4C,EAAKtN,GAAKsH,UAAUE,SAAW8F,EAAKtN,GAAKsH,UAAUC,QAC3DC,SAAU8F,EAAKtN,GAAKsH,UAAUE,SAC9BD,QAAS+F,EAAKtN,GAAKsH,UAAUC,SAE/B,CACEmC,GAAI,YACJjN,KAAM,uEACNiO,OAAQ4C,EAAKtN,GAAKyH,SAASD,SAAW8F,EAAKtN,GAAKyH,SAASF,QACzDC,SAAU8F,EAAKtN,GAAKyH,SAASD,SAC7BD,QAAS+F,EAAKtN,GAAKyH,SAASF,SAE9B,CACEmC,GAAI,iBACJjN,KAAM,kFACNiO,OACE4C,EAAKtN,GAAKsH,UAAUE,SACpB8F,EAAKtN,GAAKsH,UAAUC,QACpB+F,EAAKtN,GAAKyH,SAASD,SACnB8F,EAAKtN,GAAKyH,SAASF,cAM7B,OADAkC,EAAesE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErE,KAAKuE,UAAYD,EAAEtE,KAAKuE,aACjDzE,G,EAGTtD,iBAAmB,WACjB,IAAMgI,EAAY,EAAKC,kBAEnBhI,EAAiB,CACnBC,UAAW,EAAK9I,MAAMwB,YAAYuH,gBAClCC,QAAS,EAAKhJ,MAAMwB,YAAYwH,QAChC3D,MAAOrB,EAAY,IAAIkE,KAAK0I,EAAUxE,MAAMjE,YAAYlE,KACxDqB,KAAMsL,EAAUtL,KAChBK,eAAgBiL,EAAUlL,WAAW,GAAGyH,OACxCvH,iBAAkBgL,EAAUlL,WAAW,GAAGyH,OAC1CtH,iBAAkB+K,EAAUlL,WAAW,GAAGsE,QAC1CjE,kBAAmB6K,EAAUlL,WAAW,GAAGuE,SAC3CnE,gBAAiB8K,EAAUlL,WAAW,GAAGsE,QACzChE,iBAAkB4K,EAAUlL,WAAW,GAAGuE,UAG5Cd,IACGC,KACCC,aACAA,cACAR,EACAQ,WAEDC,MACC,SAACC,GACCN,QAAQC,IAAI,WAAYK,EAASC,OAAQD,EAAStF,MAClD,EAAKjE,MAAM8Q,gBAAgB,gLAAqC,CAC9DvP,QAAS,UACTwP,kBAAkB,OAGtB,SAACrJ,GACCuB,QAAQC,IAAI,YAAaxB,O,EAKjCmJ,gBAAkB,WAIhB,OAHmB,EAAKlN,MAAMuI,eAAe8E,MAC3C,qBAAG7E,KAAgB,EAAKxI,MAAMuL,oB,EAKlC+B,yBAA2B,WACzB,IAAMxG,EAAQF,aAAaC,QAAQ,SACnC3G,EACGqN,OADH,sBACyB,EAAKvN,MAAMqL,kBADpC,sBACmEvE,IAChEnB,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,EAAKvH,SAAS,CAAEwG,kBAAmB,OACnC,EAAKhP,MAAM8Q,gBAAgB,wHAA0B,CACnDvP,QAAS,OACTwP,kBAAkB,OAGrBlG,OAAM,SAACnD,GACNuB,QAAQC,IAAI,yCAAYxB,O,EAI9ByJ,yBAA2B,SAACC,GAC1B,IAAIC,EAAiB,aAAO,EAAK1N,MAAMuI,gBACvCmF,EAAoBA,EAAkBC,QAAO,SAAC/O,GAC5C,OAAOA,EAAK4J,KAAOiF,KAErB,EAAK5I,SAAS,CAAE0D,eAAgBmF,K,EAGlC1E,uBAAyB,SAACR,GACxB,EAAK3D,SAAS,CAAEuG,kBAAkB,EAAMC,kBAAmB7C,K,EAG7DoF,wBAA0B,WACxB,EAAK/I,SAAS,CAAEuG,kBAAkB,K,EAGpCyC,2BAA6B,WAC3B,EAAKL,yBAAyB,EAAKxN,MAAMqL,mBACzC,EAAKiC,2BACL,EAAKM,2B,EAGP/E,qBAAuB,SAACL,GACtB,EAAK3D,SAAS,CAAEyG,gBAAgB,EAAMC,gBAAiB/C,K,EAGzDsF,sBAAwB,WACtB,EAAKjJ,SAAS,CAAEyG,gBAAgB,K,EAGlCyC,yBAA2B,WACzB,EAAK9I,mBACL,EAAK6I,yB,EAGPvB,YAAc,SAAChE,EAAgB0C,GAG7B,IAFA,IAAIyC,EAAiB,aAAOnF,GADoB,WAGvCjB,GACHoG,EAAkBpG,KAAOoG,EAAkB,GAC7CA,EAAkBpG,GAAGvF,WAAa2L,EAAkBpG,GAAGvF,WAAWpD,KAChE,SAACC,EAAM0K,GACL,IAAI0E,EAAO,eAAQpP,GAEnB,OADAoP,EAAO,OAAaA,EAAQxE,OAASyB,EAAe3B,GAAOE,OACpDwE,KAIXN,EAAkBpG,GAAGvF,WAAa2L,EAAkBpG,GAAGvF,WAAWpD,KAChE,SAACC,EAAM0K,GACL,IAAI0E,EAAO,eAAQpP,GAInB,OAHAoP,EAAO,OACLA,EAAQxE,OACRkE,EAAkBpG,EAAI,GAAGvF,WAAWuH,GAAOE,OACtCwE,MAhBN1G,EAAI,EAAGA,EAAIoG,EAAkBlB,OAAQlF,IAAM,EAA3CA,GAsBT,OAAOoG,G,EAGTO,iBAAmB,SAAClM,EAAY0G,GAC9B,IAAIyF,EAAiB,IAAI3J,KACvBkE,EAAKhE,cACLgE,EAAKjE,WACLiE,EAAK0F,WAGH/H,EAAY,KAChB,IACEA,EAAYrE,EAAWsL,MAAK,kBAAmB,eAAnB,EAAG7E,MAA8BiB,OAC7D,MAAOlC,GACPjC,QAAQC,IAAI,4EAAiBgC,GAG/B,IAAIhB,EAAW,KACf,IACEA,EAAWxE,EAAWsL,MAAK,kBAAmB,cAAnB,EAAG7E,MAA6BiB,OAC3D,MAAOlC,GACPjC,QAAQC,IAAI,sEAAgBgC,GAG9B,IAAI6G,EAAgB,KACpB,IACEA,EAAgBrM,EAAWsL,MAAK,kBAAmB,mBAAnB,EAAG7E,MAChCiB,OACH,MAAOlC,GACPjC,QAAQC,IAAI,iFAAiBgC,GAG/B,IAAI8G,EAAc,KAClB,IACEA,EAAc,EAAKrO,MAAMkL,QAAQmC,MAAK,YAAmC,IAAhC9R,EAA+B,EAA/BA,KAAM+S,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACxD,MACW,UAAThT,GACA2S,EAAeM,QAAQN,EAAeC,UAAY,IAChD,IAAI5J,KAAK+J,IACXJ,EAAeM,QAAQN,EAAeC,UAAY,IAChD,IAAI5J,KAAKgK,MAIZE,KACH,MAAOlH,GACPjC,QAAQC,IAAI,8IAGd,IAAImJ,EAAiB,KACrB,IACEA,EAAiB,EAAK1O,MAAMkL,QAAQmC,MAClC,YAAmC,IAAhC9R,EAA+B,EAA/BA,KAAM+S,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAClB,MACW,mBAAThT,GACA2S,EAAeM,QAAQN,EAAeC,UAAY,IAChD,IAAI5J,KAAK+J,IACXJ,EAAeM,QAAQN,EAAeC,UAAY,IAChD,IAAI5J,KAAKgK,MAKfE,KACF,MAAOlH,GACPjC,QAAQC,IAAI,oMAOd,QAHGa,EAAYG,GAAY8H,EACzBD,EAAgBM,GAChBC,QAAQ,I,EAIZ1E,kBAAoB,SAACtI,GACnB,EAAKkD,SAAS,CAAEuC,YAAazF,K,kEArV7BnC,KAAKgM,wB,+BAwVG,IAAD,OACHjD,EAAiB,KAEnBA,EADgC,OAA9B/I,KAAKQ,MAAMuI,gBAAgD,OAArB/I,KAAKQ,MAAM+D,MAClC,kBAAC,GAAD,MACsB,OAA9BvE,KAAKQ,MAAMuI,gBACpBA,EAAiB/I,KAAKQ,MAAMuI,eAAeoF,QAAO,SAAC/O,GACjD,OAAOA,EAAK6J,KAAK0C,mBAAqB,EAAKnL,MAAMoH,gBAGhCoF,OAAS,EACTjE,EAAe5J,KAAI,SAACC,EAAM0K,GACzC,OACE,kBAAC,GAAD,CACExK,IAAKwK,EACLf,eAAgB3J,EAChB8J,YAAa,EAAKuF,iBAAiBrP,EAAKmD,WAAYnD,EAAK6J,MACzDO,uBAAwB,EAAKA,uBAC7BH,qBAAsB,EAAKA,0BAM/B,uBACElJ,MAAO,CAAEuE,UAAW,WADtB,+EAEmB1E,KAAKQ,MAAMoH,YAF9B,wBAMF,uBAAGzH,MAAO,CAAEuE,UAAW,WAAa1E,KAAKQ,MAAM+D,OAKnD,IADA,IAAMmG,EAAW,GAEX5C,GAAI,IAAI/C,MAAO4G,iBACnB7D,IAAK,IAAI/C,MAAO4G,iBAAmB,EACnC7D,IAEA4C,EAASjD,KAAKK,GAGhB,OACE,6BACE,kBAACiD,GAAD,CACE/L,KAAMgB,KAAKQ,MAAMsL,eACjBd,YAAahL,KAAKsO,sBAClBhD,eAAgBtL,KAAKuO,yBACrBpD,YAAY,sHACZE,cAAc,ybACdE,iBAAiB,2DAEnB,kBAACR,GAAD,CACE/L,KAAMgB,KAAKQ,MAAMoL,iBACjBZ,YAAahL,KAAKoO,wBAClB9C,eAAgBtL,KAAKqO,2BACrBlD,YAAY,2DACZE,cAAc,maACdE,iBAAiB,+CAEnB,kBAACpN,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,yFAGA,kBAAC,GAAD,CAAM0I,SAAUA,EAAUD,kBAAmBzK,KAAKyK,oBAClD,yBAAK/M,UAAU,kBAAkBqL,Q,GAtabzI,aAkbb8O,gBAAa7O,aANJ,SAACC,GACvB,MAAO,CACLnC,YAAamC,EAAMnC,eAIKkC,CAAyBiL,K,0FC3a/CtP,GAAYC,YAAW,CAC3BE,KAAM,CACJ8G,OAAQ,SACRvF,SAAU,YAEZwF,YAAa,CACXiM,cAAe,kBACfC,WAAY,mBAEdpO,IAAK,CACHkH,QAAS,QAEXmH,UAAW,CACThT,MAAO,QAETiT,cAAe,CACbpH,QAAS,OACTqH,UAAW,SAEbhH,YAAa,CACX7K,SAAU,WACVyF,QAAS,MACTsF,IAAK,MACLD,MAAO,OAETgH,WAAY,CACV9R,SAAU,WACVyF,QAAS,MACTsF,IAAK,MACLD,MAAO,QAETiH,kBAAmB,CACjBlT,MAAO,WAETmT,0BAA2B,CACzBnT,MAAO,WAEToT,cAAe,CACb,UAAW,CACTC,gBAAiB,2CAqJRC,GAhJI,SAAClT,GAClB,IAAMC,EAAUZ,KADY,EAEgCW,EAAMuQ,OAA1DpE,EAFoB,EAEpBA,GAAIjN,EAFgB,EAEhBA,KAAMkT,EAFU,EAEVA,KAAMF,EAFI,EAEJA,QAASD,EAFL,EAEKA,UAAWkB,EAFhB,EAEgBA,YAFhB,EAGI7S,mBAASN,EAAMoT,UAHnB,mBAGrBA,EAHqB,KAGXC,EAHW,KAK5B,OACE,kBAAC3M,GAAA,EAAD,CAAM7F,UAAWZ,EAAQT,MACtB4T,EACC,kBAACnS,EAAA,EAAD,CACEJ,UAAWZ,EAAQ4S,WACnBzR,aAAW,mDACXS,UAAU,OACVjC,MAAM,UACNyB,QAAS,kBAAMgS,GAAY,IAC3B5G,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAGF,kBAACzL,EAAA,EAAD,CACEJ,UAAWZ,EAAQ4S,WAAa,IAAM5S,EAAQ+S,cAC9C5R,aAAW,yDACXS,UAAU,OACVjC,MAAM,YACNwT,UAAWD,EACX9R,QAAS,WACPgS,GAAY,GACRlH,EACFnM,EAAMsT,oBAAoBnH,GAE1BnM,EAAMuT,uBAGV9G,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,CAAU7L,UAAYsS,EAAkDlT,EAAQ6S,kBAA5C7S,EAAQ8S,6BAIhD,kBAAC9R,EAAA,EAAD,CACEJ,UAAWZ,EAAQ2L,YACnBxK,aAAW,6CACXS,UAAU,OACVjC,MAAM,YACNyB,QAAS,WACPrB,EAAM2M,uBAAuBR,IAE/BM,eAAa,EACbC,oBAAkB,GAElB,kBAAC,KAAD,OAEF,kBAAC/F,GAAA,EAAD,CAAa9F,UAAWZ,EAAQsG,aAC9B,kBAACzD,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,EAAGxC,UAAWZ,EAAQoE,KACnC,kBAACyC,GAAA,EAAD,CAAajG,UAAWZ,EAAQyS,WAC9B,kBAAC3L,GAAA,EAAD,iFACA,kBAACC,GAAA,EAAD,CACE9C,MAAOhF,EAAKgF,MACZQ,SAAU,SAACuC,GAAD,OACRjH,EAAMwT,oBAAoBrH,EAAI,OAAQlF,EAAME,OAAOjD,QAErDkP,SAAUA,EACV1L,OAAQxI,EAAKyI,OAASzI,EAAKuU,SAE3B,kBAACrM,GAAA,EAAD,CAAUlD,MAAO,SAAjB,iEACA,kBAACkD,GAAA,EAAD,CAAUlD,MAAO,aAAjB,6EACA,kBAACkD,GAAA,EAAD,CAAUlD,MAAO,kBAAjB,kFACA,kBAACkD,GAAA,EAAD,CAAUlD,MAAO,mBAAjB,qFACA,kBAACkD,GAAA,EAAD,CAAUlD,MAAO,qBAAjB,uFAIAhF,EAAKyI,OAASzI,EAAKuU,QACnB,kBAACC,GAAA,EAAD,KAAiBxU,EAAK2H,cACpB,OAGR,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,EAAGxC,UAAWZ,EAAQoE,KACnC,kBAAC,KAAD,CACExD,UAAWZ,EAAQyS,UACnB9N,MAAM,iCACN2C,eAAe,SACfrD,MAAOkO,EAAKlO,MACZsD,aAAa,IACbmM,aAAa,OACbP,SAAUA,EACV1O,SAAU,SAACuC,EAAO/C,GAAR,OACRlE,EAAMwT,oBAAoBrH,EAAI,OAAQjI,IAExCwD,OAAQ0K,EAAKzK,OAASyK,EAAKqB,QAC3B7L,YACGwK,EAAKzK,OAASyK,EAAKqB,QAAUrB,EAAKvL,aAAe,QAIxD,kBAAC,KAAD,CAAyB+M,MAAOC,MAC9B,kBAAC/Q,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,EAAGxC,UAAWZ,EAAQoE,KACnC,kBAACyP,GAAA,EAAD,CACEC,WAAS,EACTnP,MAAM,6EACNoP,OAAO,aACP9P,MAAO+N,EAAU/N,MACjBrD,UAAWZ,EAAQgU,gBAAkB,IAAMhU,EAAQyS,UACnDU,SAAUA,EACV1O,SAAU,SAAC0H,GAAD,OACRpM,EAAMwT,oBAAoBrH,EAAI,YAAaC,IAE7C1E,OAAQuK,EAAUtK,OAASsK,EAAUwB,QACrC7L,YACGqK,EAAUtK,OAASsK,EAAUwB,QAC1BxB,EAAUpL,aACV,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,EAAGxC,UAAWZ,EAAQoE,KACnC,kBAACyP,GAAA,EAAD,CACEC,WAAS,EACTnP,MAAM,wFACNoP,OAAO,aACP9P,MAAOgO,EAAQhO,MACfrD,UAAWZ,EAAQyS,UACnBU,SAAUA,EACV1O,SAAU,SAAC0H,GAAD,OACRpM,EAAMwT,oBAAoBrH,EAAI,UAAWC,IAE3C1E,OAAQwK,EAAQvK,OAASuK,EAAQuB,QACjC7L,YACGsK,EAAQvK,OAASuK,EAAQuB,QACtBvB,EAAQrL,aACR,aCvMTqN,GAAqB,SAAChQ,EAAOiQ,GACxC,IAAIC,EAAa,CACfC,SAAS,EACTxN,aAAc,MAGhB,IAAKsN,EACH,OAAO,EAUT,GAPIA,EAAMG,WACRF,EAAWC,QAA2B,KAAjBnQ,EAAMqQ,QAAiBH,EAAWC,QACvDD,EAAWvN,aAAgBuN,EAAWC,QAElC,GADA,+KAIFF,EAAMK,QAAS,CAEjBJ,EAAWC,QADK,wIACaI,KAAKvQ,IAAUkQ,EAAWC,QACvDD,EAAWvN,aACC,KAAV3C,EACI,8KACA,8KA2BR,OAxBIiQ,EAAMO,SACRN,EAAWC,QAAoB,OAAVnQ,GAAkBkQ,EAAWC,QAClDD,EAAWvN,aAAgBuN,EAAWC,QAElC,GADA,+KAIFF,EAAMQ,WACRP,EAAWC,QAAoB,IAAVnQ,GAAekQ,EAAWC,QAC/CD,EAAWvN,aAAgBuN,EAAWC,QAElC,GADA,+KAIFF,EAAMS,YACRR,EAAWC,QAAUnQ,EAAMiM,QAAU,GAAKiE,EAAWC,QACjDnQ,EAAMiM,OAAS,GAAKjM,EAAMiM,OAAS,EACrCiE,EAAWvN,aACT,+OACsB,IAAjB3C,EAAMiM,OACbiE,EAAWvN,aAAe,8KACvBuN,EAAWvN,aAAe,IAG1BuN,GCnCHS,G,4MACJlR,MAAQ,CACNkL,QAAS,GACTE,kBAAkB,EAClB+F,eAAgB,KAChBC,mBAAmB,G,EAOrB/E,iBAAmB,WACjB,IAAMvF,EAAQF,aAAaC,QAAQ,SAC7BF,EAASC,aAAaC,QAAQ,UAEpC3G,EACG2L,IADH,6BAC6B/E,EAD7B,sCACgEH,EADhE,MAEGhB,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAE1C,IAAIlB,EAAUwB,OAAOC,KAAK/G,EAASwG,MAAMzN,KAAI,SAACC,GAC5C,IAAIgO,EAAS,GAwCb,OAvCAA,EAAOrR,KAAO,CACZgF,MAAOqF,EAASwG,KAAKxN,GAAMrD,KAC3BkV,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXlD,EAAO6B,KAAO,CACZlO,MAAOqF,EAASwG,KAAKxN,GAAM6P,KAC3BgC,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXlD,EAAO0B,UAAY,CACjB/N,MAAOqF,EAASwG,KAAKxN,GAAM0P,UAC3BmC,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXlD,EAAO2B,QAAU,CACfhO,MAAOqF,EAASwG,KAAKxN,GAAM2P,QAC3BkC,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXlD,EAAOpE,GAAK5J,EACZgO,EAAO4C,aAAc,EACrB5C,EAAOjG,OAASf,EAASwG,KAAKxN,GAAM+H,OAC7BiG,KAET,EAAK/H,SAAS,CAAEqG,QAASA,OAE1BhE,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,GACZ,EAAKc,SAAS,CACZd,MAAO,4T,EAKfsN,sBAAwB,WACtB,IAAMvK,EAAQF,aAAaC,QAAQ,SACnC3G,EACGqN,OADH,mBACsB,EAAKvN,MAAMmR,eADjC,sBAC6DrK,IAC1DnB,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,EAAKvH,SAAS,CAAEsM,eAAgB,OAChC,EAAK9U,MAAM8Q,gBAAgB,wHAA0B,CACnDvP,QAAS,OACTwP,kBAAkB,OAGrBlG,OAAM,SAACnD,GACNuB,QAAQC,IAAI,yCAAYxB,O,EAI9B4L,oBAAsB,SAACnH,GACrBlD,QAAQC,IAAI,oGAAqBiD,GACjC,IAAM1B,EAAQF,aAAaC,QAAQ,SAC7ByK,EAAU,EAAKtR,MAAMkL,QAAQmC,MAAK,SAACzO,GAAD,OAAUA,EAAK4J,KAAOA,KACxD+I,EAAU,CACd9C,KAAM6C,EAAQ7C,KAAKlO,MACnBgO,QAAS+C,EAAQ/C,QAAQhO,MACzB+N,UAAWgD,EAAQhD,UAAU/N,MAC7BhF,KAAM+V,EAAQ/V,KAAKgF,MACnBoG,OAAQ2K,EAAQ3K,QAElBrB,QAAQC,IAAI,4HAAyBgM,GACrCrR,EACGsR,MADH,mBACqBhJ,EADrB,sBACqC1B,GAASyK,GAC3C5L,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,EAAK/P,MAAM8Q,gBAAgB,0IAA6B,CACtDvP,QAAS,UACTwP,kBAAkB,OAGrBlG,OAAM,SAACnD,GACNuB,QAAQC,IAAI,yCAAYxB,O,EAI9B6L,oBAAsB,WACpBtK,QAAQC,IAAI,2GACZ,IAAMuB,EAAQF,aAAaC,QAAQ,SAC7BF,EAASC,aAAaC,QAAQ,UAC9ByK,EAAU,EAAKtR,MAAMkL,QAAQ,GAC7BqG,EAAU,CACd9C,KAAM6C,EAAQ7C,KAAKlO,MACnBgO,QAAS+C,EAAQ/C,QAAQhO,MACzB+N,UAAWgD,EAAQhD,UAAU/N,MAC7BhF,KAAM+V,EAAQ/V,KAAKgF,MACnBoG,OAAQA,GAEVrB,QAAQC,IAAI,4HAAyBgM,GACrCrR,EACG6G,KADH,6BAC8BD,GAASyK,GACpC5L,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,EAAKvH,SAAS,CAAEuM,mBAAmB,IACnC,EAAK/U,MAAM8Q,gBAAgB,0IAA6B,CACtDvP,QAAS,UACTwP,kBAAkB,OAGrBlG,OAAM,SAACnD,GACNuB,QAAQC,IAAI,yCAAYxB,O,EAI9BiF,uBAAyB,SAACR,GACN,qBAAPA,EACT,EAAK3D,SAAS,CAAEuG,kBAAkB,EAAM+F,eAAgB3I,IAExD,EAAKiJ,sBAAsBjJ,I,EAI/BoF,wBAA0B,WACxB,EAAK/I,SAAS,CAAEuG,kBAAkB,K,EAGpCyC,2BAA6B,WAC3B,EAAK4D,sBAAsB,EAAKzR,MAAMmR,gBACtC,EAAKE,wBACL,EAAKzD,2B,EAGP8D,iBAAmB,WACjB,IAAIC,EAAc,aAAO,EAAK3R,MAAMkL,SAEpCyG,EAAeC,QAAQ,CACrBrW,KAAM,CACJgF,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXrB,KAAM,CACJlO,MAAO,EACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXxB,UAAW,CACT/N,MAAO,KACPkQ,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXvB,QAAS,CACPhO,MAAO,KACPkQ,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,KAIb,EAAKjL,SAAS,CAAEqG,QAASyG,EAAgBP,mBAAmB,K,EAG9DK,sBAAwB,SAAChE,GACvB,IAAIkE,EAAc,aAAO,EAAK3R,MAAMkL,SAEpCyG,EAAiBA,EAAehE,QAAO,SAAC/O,GACtC,OAAOA,EAAK4J,KAAOiF,KAGjB,EAAKzN,MAAMoR,kBACb,EAAKvM,SAAS,CAAEqG,QAASyG,EAAgBP,mBAAmB,IACvD,EAAKvM,SAAS,CAAEqG,QAASyG,K,EAGlC9B,oBAAsB,SAACrH,EAAI1J,EAAKyB,GAC9B,IAAIsR,EAAS,aAAO,EAAK7R,MAAMkL,SAC3B4G,EAAcD,EAAUE,WAAU,SAACnT,GAAD,OAAUA,EAAK4J,KAAOA,KAExDiI,EAAaF,GACfhQ,EACAsR,EAAUC,GAAahT,GAAK2R,YAG9BoB,EAAUC,GAAV,2BACK,EAAK9R,MAAMkL,QAAQ4G,IADxB,mBAEGhT,EAFH,2BAGO,EAAKkB,MAAMkL,QAAQ4G,GAAahT,IAHvC,IAIIyB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAIb,IAAIkC,EAAY,EAAKC,kBAAkBJ,EAAUC,IAEjDD,EAAUC,GAAatC,YAAcwC,EAErC,EAAKnN,SAAS,CAAEqG,QAAS2G,K,EAG3BI,kBAAoB,SAACrF,GAAY,IACvBrR,EAAmCqR,EAAnCrR,KAAMkT,EAA6B7B,EAA7B6B,KAAMH,EAAuB1B,EAAvB0B,UAAWC,EAAY3B,EAAZ2B,QAE/B,SACEhT,EAAKyI,OACLyK,EAAKzK,OACLsK,EAAUtK,OACVuK,EAAQvK,Q,kEArPVxE,KAAK6M,qB,+BA6PG,IAAD,OACH6F,EAAc,KAelB,OAdqCA,EAAH,IAA9B1S,KAAKQ,MAAMkL,QAAQsB,OAA4B,kBAAC,GAAD,MAEnChN,KAAKQ,MAAMkL,QAAQvM,KAAI,SAACC,EAAM0K,GAAP,OACnC,kBAAC,GAAD,CACExK,IAAwB,qBAAZF,EAAK4J,GAAqB5J,EAAK4J,GAAKc,EAChDsD,OAAQhO,EACR6Q,SAA6B,qBAAZ7Q,EAAK4J,GACtBQ,uBAAwB,EAAKA,uBAC7B6E,2BAA4B,EAAKA,2BACjC8B,oBAAqB,EAAKA,oBAC1BE,oBAAqB,EAAKA,oBAC1BD,oBAAqB,EAAKA,yBAI9B,6BACE,kBAACrF,GAAD,CACE/L,KAAMgB,KAAKQ,MAAMoL,iBACjBZ,YAAahL,KAAKoO,wBAClB9C,eAAgBtL,KAAKqO,2BACrBlD,YAAY,2DACZE,cAAc,maACdE,iBAAiB,+CAEnB,kBAACpN,EAAA,EAAD,CACEC,QAAQ,KACR4D,MAAM,SACN7B,MAAO,CAAEwS,aAAc,SAHzB,wCAOA,kBAAChT,EAAA,EAAD,CACEC,WAAS,EACT0C,QAAS,EACTzC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACX6S,aAAa,SACbC,KAAK,UAEL,kBAAC7P,GAAA,EAAD,CACE9E,QAAS,kBAAM,EAAKgU,iBAAiBQ,IACrCjW,MAAM,UACNwT,SAAUjQ,KAAKQ,MAAMoR,mBAHvB,oFAQDc,O,GAxTapS,aA8TP8O,gBAAasC,I,UC/TtBxV,GAAYC,YAAW,CAC3B2W,MAAO,CACLvW,MAAO,QAETwW,eAAgB,CACdrO,UAAW,YAkQAsO,GA9PE,SAACnW,GAChB,IAAMC,EAAUZ,KADU,EAQtBW,EAAMwB,YALRC,EAHwB,EAGxBA,UACAC,EAJwB,EAIxBA,SACA0U,EALwB,EAKxBA,UACArN,EANwB,EAMxBA,gBACAC,EAPwB,EAOxBA,QAPwB,EAkBtBhJ,EAAM4O,eAPRyH,EAXwB,EAWxBA,mBACA1Q,EAZwB,EAYxBA,eACAC,EAbwB,EAaxBA,iBACA0Q,EAdwB,EAcxBA,iBACAC,EAfwB,EAexBA,gBACAC,EAhBwB,EAgBxBA,kBACAC,EAjBwB,EAiBxBA,iBAGF,OACE,kBAAC3T,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,qDAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,qBACNV,MAAOzC,EAAUyC,MACjByS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,YAAa3P,EAAME,OAAOjD,QAExDwD,OAAQjG,EAAUkG,OAASlG,EAAUgS,QACrC7L,YACGnG,EAAUkG,OAASlG,EAAUgS,QAC1BhS,EAAUoF,aACV,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,6CACNV,MAAOxC,EAASwC,MAChByS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,WAAY3P,EAAME,OAAOjD,QAEvDwD,OAAQhG,EAASiG,OAASjG,EAAS+R,QACnC7L,YACGlG,EAASiG,OAASjG,EAAS+R,QAAU/R,EAASmF,aAAe,QAIpE,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,iCACNV,MAAO8E,EAAQ9E,MACfyS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,UAAW3P,EAAME,OAAOjD,QAEtDwD,OAAQsB,EAAQrB,OAASqB,EAAQyK,QACjC7L,YACGoB,EAAQrB,OAASqB,EAAQyK,QAAUzK,EAAQnC,aAAe,QAIjE,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,0DACNV,MAAOkS,EAAUlS,MACjBkP,UAAQ,EACRuD,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,YAAa3P,EAAME,OAAOjD,WAI5D,kBAACpB,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,oGACNV,MAAO6E,EAAgB7E,MACvByS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,kBAAmB3P,EAAME,OAAOjD,QAE9DwD,OAAQqB,EAAgBpB,OAASoB,EAAgB0K,QACjD7L,YACGmB,EAAgBpB,OAASoB,EAAgB0K,QACtC1K,EAAgBlC,aAChB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,MAAM,UAA/B,wHAIF,kBAACrC,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC,KAAD,CAAyBuQ,MAAOC,MAC9B,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTlT,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,qJACNoP,OAAO,aACP9P,MAAOmS,EAAmBnS,MAC1BQ,SAAU,SAAC0H,GAAD,OACRpM,EAAM8W,4BAA4B,qBAAsB1K,IAE1D1E,OAAQ2O,EAAmB1O,OAAS0O,EAAmB5C,QACvD7L,YACGyO,EAAmB1O,OAAS0O,EAAmB5C,QAC5C4C,EAAmBxP,aACnB,SAKZ,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,iHACN2C,eAAe,GACfrD,MAAOyB,EAAezB,MACtBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,iBAAkB5S,IAEtDwD,OAAQ/B,EAAegC,OAAShC,EAAe8N,QAC/C7L,YACGjC,EAAegC,OAAShC,EAAe8N,QACpC9N,EAAekB,aACf,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,iHACN2C,eAAe,GACfrD,MAAO0B,EAAiB1B,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ9B,EAAiB+B,OAAS/B,EAAiB6N,QACnD7L,YACGhC,EAAiB+B,OAAS/B,EAAiB6N,QACxC7N,EAAiBiB,aACjB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,4GACN2C,eAAe,GACfrD,MAAOoS,EAAiBpS,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ4O,EAAiB3O,OAAS2O,EAAiB7C,QACnD7L,YACG0O,EAAiB3O,OAAS2O,EAAiB7C,QACxC6C,EAAiBzP,aACjB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,sGACN2C,eAAe,GACfrD,MAAOqS,EAAgBrS,MACvBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,kBAAmB5S,IAEvDwD,OAAQ6O,EAAgB5O,OAAS4O,EAAgB9C,QACjD7L,YACG2O,EAAgB5O,OAAS4O,EAAgB9C,QACtC8C,EAAgB1P,aAChB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,kHACN2C,eAAe,GACfrD,MAAOsS,EAAkBtS,MACzBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,oBAAqB5S,IAEzDwD,OAAQ8O,EAAkB7O,OAAS6O,EAAkB/C,QACrD7L,YACG4O,EAAkB7O,OAAS6O,EAAkB/C,QAC1C+C,EAAkB3P,aAClB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,4GACN2C,eAAe,GACfrD,MAAOuS,EAAiBvS,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ+O,EAAiB9O,OAAS8O,EAAiBhD,QACnD7L,YACG6O,EAAiB9O,OAAS8O,EAAiBhD,QACxCgD,EAAiB5P,aACjB,QAIV,kBAAC/D,EAAA,EAAD,CAAMjC,UAAWZ,EAAQiW,eAAgB3T,MAAI,EAACc,GAAI,IAChD,kBAAC8C,GAAA,EAAD,CACE5E,QAAQ,YACR3B,MAAM,UACNmI,kBAAgB,EAChB1G,QAAS,WACHrB,EAAM4V,qBAAqB5V,EAAMgX,sBALzC,6DC3PFC,G,4MACJtT,MAAQ,CACNnC,YAAa,CACXC,UAAW,CACTyC,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX/R,SAAU,CACRwC,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX2C,UAAW,CACTlS,MAAO,IAET6E,gBAAiB,CACf7E,MAAO,GACPkQ,WAAY,CACVI,SAAS,GAEX7M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXzK,QAAS,CACP9E,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,IAGbyD,kBAAkB,EAClBtI,eAAgB,CACdyH,mBAAoB,CAClBnS,MAAO,KACPkQ,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX9N,eAAgB,CACdzB,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX7N,iBAAkB,CAChB1B,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX6C,iBAAkB,CAChBpS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX8C,gBAAiB,CACfrS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX+C,kBAAmB,CACjBtS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXgD,iBAAkB,CAChBvS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,IAGb0D,qBAAqB,EACrB7M,OAAQ,M,EAOVwF,eAAiB,SAACxF,GAChBrB,QAAQC,IAAI,oHAAgCoB,GAC5C,IAAMG,EAAQF,aAAaC,QAAQ,SACnC3G,EACG2L,IADH,2BAC2B/E,EAD3B,sCAC8DH,EAD9D,MAEGhB,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,IAAIqH,EAAa7N,EAASwG,KAAKM,OAAOC,KAAK/G,EAASwG,OAChDsH,EAAc,2BACb,EAAK1T,MAAMnC,aADE,IAEhBC,UAAU,2BACL,EAAKkC,MAAMnC,YAAYC,WADnB,IAEPyC,MAAOkT,EAAW5V,YAAYC,YAEhCC,SAAS,2BACJ,EAAKiC,MAAMnC,YAAYE,UADpB,IAENwC,MAAOkT,EAAW5V,YAAYE,WAEhC0U,UAAU,2BACL,EAAKzS,MAAMnC,YAAY4U,WADnB,IAEPlS,MAAOkT,EAAW5V,YAAY4U,YAEhCrN,gBAAgB,2BACX,EAAKpF,MAAMnC,YAAYuH,iBADb,IAEb7E,MAAOkT,EAAW5V,YAAYuH,kBAEhCC,QAAQ,2BACH,EAAKrF,MAAMnC,YAAYwH,SADrB,IAEL9E,MAAOkT,EAAW5V,YAAYwH,YAG9B4F,EAAc,2BACb,EAAKjL,MAAMiL,gBADE,IAEhByH,mBAAmB,2BACd,EAAK1S,MAAMiL,eAAeyH,oBADb,IAEhBnS,MAAOkT,EAAWxI,eAAeyH,qBAEnC1Q,eAAe,2BACV,EAAKhC,MAAMiL,eAAejJ,gBADjB,IAEZzB,MAAOkT,EAAWxI,eAAehF,YAAYC,MAE/CjE,iBAAiB,2BACZ,EAAKjC,MAAMiL,eAAehJ,kBADf,IAEd1B,MAAOkT,EAAWxI,eAAehF,YAAYE,QAE/CwM,iBAAiB,2BACZ,EAAK3S,MAAMiL,eAAe0H,kBADf,IAEdpS,MAAOkT,EAAWxI,eAAe5E,QAAQD,YAE3CwM,gBAAgB,2BACX,EAAK5S,MAAMiL,eAAe2H,iBADhB,IAEbrS,MAAOkT,EAAWxI,eAAe5E,QAAQE,WAE3CsM,kBAAkB,2BACb,EAAK7S,MAAMiL,eAAe4H,mBADd,IAEftS,MAAOkT,EAAWxI,eAAe3E,SAASF,YAE5C0M,iBAAiB,2BACZ,EAAK9S,MAAMiL,eAAe6H,kBADf,IAEdvS,MAAOkT,EAAWxI,eAAe3E,SAASC,aAI9C,EAAK1B,SAAS,CACZhH,YAAa6V,EACbzI,eAAgBA,EAChBzC,GAAIkE,OAAOC,KAAK/G,EAASwG,MAAM,GAC/BzF,OAAQ8M,EAAW9M,YAGtBO,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,GACZ,EAAKc,SAAS,CACZd,MAAO,4T,EAKfsP,kBAAoB,WAClB/N,QAAQC,IAAI,sHAA6B,EAAKvF,MAAMwI,IACpD,IAAM1B,EAAQF,aAAaC,QAAQ,SAC7B8M,EAAe,CACnB9V,YAAa,CACXC,UAAW,EAAKkC,MAAMnC,YAAYC,UAAUyC,MAC5CxC,SAAU,EAAKiC,MAAMnC,YAAYE,SAASwC,MAC1CkS,UAAW,EAAKzS,MAAMnC,YAAY4U,UAAUlS,MAC5C6E,gBAAiB,EAAKpF,MAAMnC,YAAYuH,gBAAgB7E,MACxD8E,QAAS,EAAKrF,MAAMnC,YAAYwH,QAAQ9E,OAE1C0K,eAAgB,CACdyH,mBAAoB,EAAK1S,MAAMiL,eAAeyH,mBAAmBnS,MACjE0F,YAAa,CACXC,IAAK,EAAKlG,MAAMiL,eAAejJ,eAAezB,MAC9C4F,MAAO,EAAKnG,MAAMiL,eAAehJ,iBAAiB1B,OAEpD8F,QAAS,CACPD,UAAW,EAAKpG,MAAMiL,eAAe0H,iBAAiBpS,MACtDgG,SAAU,EAAKvG,MAAMiL,eAAe2H,gBAAgBrS,OAEtD+F,SAAU,CACRF,UAAW,EAAKpG,MAAMiL,eAAe4H,kBAAkBtS,MACvDgG,SAAU,EAAKvG,MAAMiL,eAAe6H,iBAAiBvS,QAGzDoG,OAAQC,aAAaC,QAAQ,WAG/B3G,EACGsR,MADH,iBACmB,EAAKxR,MAAMwI,GAD9B,sBAC8C1B,GAAS6M,GACpDhO,MAAK,SAACC,GACLN,QAAQC,IAAI,qFAAqBK,EAASwG,MAC1C,EAAK/P,MAAM8Q,gBAAgB,0IAA6B,CACtDvP,QAAS,UACTwP,kBAAkB,OAGrBlG,OAAM,SAACnD,GACNuB,QAAQC,IAAI,yCAAYxB,O,EAI9BkP,sBAAwB,SAACnU,EAAKyB,GAC5B,IAAIkQ,EAAaF,GACfhQ,EACA,EAAKP,MAAMnC,YAAYiB,GAAK2R,YAE1BiD,EAAc,2BACb,EAAK1T,MAAMnC,aADE,mBAEfiB,EAFe,2BAGX,EAAKkB,MAAMnC,YAAYiB,IAHZ,IAIdyB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAITkC,EAAY,EAAKC,oBAErB,EAAKpN,SAAS,CAAEhH,YAAa6V,EAAgBH,iBAAkBvB,K,EAGjEmB,4BAA8B,SAACrU,EAAKyB,GAClC,IAAIkQ,EAAaF,GACfhQ,EACA,EAAKP,MAAMiL,eAAenM,GAAK2R,YAE7BmD,EAAiB,2BAChB,EAAK5T,MAAMiL,gBADK,mBAElBnM,EAFkB,2BAGd,EAAKkB,MAAMiL,eAAenM,IAHZ,IAIjByB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAITkC,EAAY,EAAKC,oBAErB,EAAKpN,SAAS,CACZoG,eAAgB2I,EAChBJ,oBAAqBxB,K,EAIzBC,kBAAoB,WAAO,IAAD,EAMpB,EAAKjS,MAAMnC,YAJbC,EAFsB,EAEtBA,UACAC,EAHsB,EAGtBA,SACAqH,EAJsB,EAItBA,gBACAC,EALsB,EAKtBA,QALsB,EAgBpB,EAAKrF,MAAMiL,eAPbyH,EATsB,EAStBA,mBACA1Q,EAVsB,EAUtBA,eACAC,EAXsB,EAWtBA,iBACA0Q,EAZsB,EAYtBA,iBACAC,EAbsB,EAatBA,gBACAC,EAdsB,EActBA,kBACAC,EAfsB,EAetBA,iBAGF,SACEhV,EAAUkG,OACVjG,EAASiG,OACToB,EAAgBpB,OAChBqB,EAAQrB,OACR0O,EAAmB1O,OACnBhC,EAAegC,OACf/B,EAAiB+B,OACjB2O,EAAiB3O,OACjB4O,EAAgB5O,OAChB6O,EAAkB7O,OAClB8O,EAAiB9O,Q,kEAtMnBxE,KAAK2M,eAAevF,aAAaC,QAAQ,a,+BA+MzC,OACE,6BACE,kBAAClJ,EAAA,EAAD,CACEC,QAAQ,KACR4D,MAAM,SACN7B,MAAO,CAAEwS,aAAc,SAHzB,uHAOuB,OAAtB3S,KAAKQ,MAAM2G,OACV,kBAAC,GAAD,MAEA,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE9I,YAAa2B,KAAKQ,MAAMnC,YACxBoN,eAAgBzL,KAAKQ,MAAMiL,eAC3BgI,sBAAuBzT,KAAKyT,sBAC5BE,4BAA6B3T,KAAK2T,4BAClClB,kBAAmBzS,KAAKyS,kBACxBoB,kBAAmB7T,KAAK6T,0B,GApVXvT,aA6VZ8O,gBAAa0E,IC1VfO,GAAc,SAAC/M,EAAOH,GACjC,OAAO,SAACmN,GACNA,EAASC,MACTD,EAP2B,SAAChN,EAAOH,GACrC,MAAO,CAAEjC,KCViB,eDUesP,QAASlN,EAAOH,OAAQA,GAMtDsN,CAAgBnN,EAAOH,MAIvBuN,GAAW,SAACnQ,GACvB,MAAO,CACLW,KCrBqB,YDsBrBX,MAAOA,IAkFEoQ,GAAa,WAIxB,OAHAvN,aAAawN,WAAW,SACxBxN,aAAawN,WAAW,kBACxBxN,aAAawN,WAAW,UACjB,CACL1P,KC5GuB,gBDgHd2P,GAAmB,SAACC,GAC/B,OAAO,SAACR,GACNS,YAAW,WACTT,EAASK,QACS,IAAjBG,KAoCMP,GAAe,WAC1B,OAAO,SAACD,GACN,IAAMhN,EAAQF,aAAaC,QAAQ,SAC7BF,EAASC,aAAaC,QAAQ,UACpC3G,EACG2L,IADH,2BAC2B/E,EAD3B,sCAC8DH,EAD9D,MAEGhB,MAAK,SAACC,GACLN,QAAQC,IAAIK,GACZ,IAjB4B/H,EAAaoN,EAAgBuJ,EAiBrDf,EAAa7N,EAASwG,KAAKM,OAAOC,KAAK/G,EAASwG,OAEpD0H,GAnB4BjW,EAqBxB4V,EAAW5V,YArB0BoN,EAsBrCwI,EAAWxI,eAtB0CuJ,EAuBrD9H,OAAOC,KAAK/G,EAASwG,MAAM,GAtB9B,CACL1H,KC/IiC,wBDgJjC7G,YAAaA,EACboN,eAAgBA,EAChBuJ,SAAUA,QAsBPtN,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,Q,2BE1Kd0Q,GAAWC,aAAW,CAC1B7Y,KAAM,CACJsW,aAAc,SAFDuC,CAIdC,MAEUC,GAAY,SAACvY,GACxB,OAAO,kBAACoY,GAAapY,EAAQA,EAAMwD,WCP/BgV,GAAYH,aAAW,CAC3B7Y,KAAM,CACJE,MAAO,OACP+Y,cAAe,OACfnS,OAAQ,kBAJM+R,CAMflS,MAEUuS,GAAa,SAAC1Y,GACzB,OAAO,kBAACwY,GAAD,eAAWjX,QAAQ,YAAY3B,MAAM,WAAcI,GAAQA,EAAMwD,W,UCTpEnE,GAAYC,aAAW,SAACC,GAAD,OAC3BoZ,aAAa,CACXnZ,KAAM,CACJ8G,OAAQ,SACR5G,MAAO,QAETkZ,MAAO,CACL,qBAAsB,CACpBC,gBAAiB,2CAMZC,GAAY,SAAC9Y,GACxB,IAAMC,EAAUZ,KAChB,OAAO,kBAACqX,GAAA,EAAD,eAAW7V,UAAWZ,EAAQT,KAAM+B,QAAQ,WAAWwX,WAAY,CAAClY,UAAWZ,EAAQ2Y,QAAY5Y,K,oDCdtGX,GAAYC,aAAW,SAACC,GAAD,OAC3BoZ,aAAa,CACXnZ,KAAM,CACJ8G,OAAQ,SACR5G,MAAO,QAETkZ,MAAO,CACL,qBAAsB,CACpBC,gBAAiB,2CAMZG,GAAoB,SAAChZ,GAChC,IAAMC,EAAUZ,KAD0B,EAEhBmO,IAAMlN,SAAS,CACvC2Y,cAAc,IAH0B,mBAEnCtV,EAFmC,KAE5B6E,EAF4B,KAU1C,OACE,kBAACkO,GAAA,EAAD,eACE7V,UAAWZ,EAAQT,KACnB+B,QAAQ,WACR8G,KAAM1E,EAAMsV,aAAe,OAAS,WACpCF,WAAY,CAAElY,UAAWZ,EAAQ2Y,OACjCM,WAAY,CACVC,aACE,kBAACC,GAAA,EAAD,CAAgBrY,SAAS,OACvB,kBAACE,EAAA,EAAD,CACEG,aAAW,6BACXC,QAfoB,WAC9BmH,EAAS,2BAAK7E,GAAN,IAAasV,cAAetV,EAAMsV,iBAehC/X,KAAK,OAEJyC,EAAMsV,aAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,UAK3CjZ,K,+BChCJqZ,G,4MACJ1V,MAAQ,CACN2V,KAAM,CACJC,MAAO,CACLrV,MAAO,GACPkQ,WAAY,CACVI,SAAS,GAEX7M,OAAO,EACP8L,SAAS,GAEX+F,SAAU,CACRtV,MAAO,GACPkQ,WAAY,CACVQ,WAAW,GAEbjN,OAAO,EACP8L,SAAS,IAGbgG,WAAW,G,EAIbC,aAAe,SAACjX,EAAKyB,GACnB,IAAIkQ,EAAaF,GAAmBhQ,EAAO,EAAKP,MAAM2V,KAAK7W,GAAK2R,YAC5DuF,EAAY,2BACX,EAAKhW,MAAM2V,MADA,mBAEb7W,EAFa,2BAGT,EAAKkB,MAAM2V,KAAK7W,IAHP,IAIZyB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAITkC,EAAY,EAAKC,kBAAkB+D,GAEvC,EAAKnR,SAAS,CAAE8Q,KAAMK,EAAcF,UAAW9D,K,EAGjDC,kBAAoB,SAACgE,GACnB,GAAyB,qBAAdA,EAA2B,CAAC,IAC7BL,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SACf,GAAID,EAAM5R,OAAS6R,EAAS7R,MAC1B,OAAO,EAIX,GAAyB,qBAAdiS,EAA2B,CACpC,IAAID,EAAY,2BACX,EAAKhW,MAAM2V,MADA,IAEdC,MAAM,2BACD,EAAK5V,MAAM2V,KAAKC,OADhB,IAEH9F,SAAS,EACT5M,aAAc,gLAEhB2S,SAAS,2BACJ,EAAK7V,MAAM2V,KAAKE,UADb,IAEN/F,SAAS,EACT5M,aAAc,kLAGlB,EAAK2B,SAAS,CAAE8Q,KAAMK,IAGxB,OAAO,G,EAITE,kBAAoB,WAClB,EAAK7Z,MAAM8Z,OAAO,EAAKnW,MAAM2V,KAAKC,MAAMrV,MAAO,EAAKP,MAAM2V,KAAKE,SAAStV,Q,uDAGhE,IAAD,SACqBf,KAAKQ,MAAM2V,KAA/BC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,yBAAK3Y,UAAU,kBACb,8BACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,kBAAC,KAAD,QAGJ,kBAACS,EAAA,EAAD,CAAYT,UAAU,aAAaU,QAAQ,KAAK4D,MAAM,UAAtD,0LAGChC,KAAKnD,MAAM6G,aACV,kBAAC,GAAD,CAAWkT,SAAS,SAAS5W,KAAKnD,MAAM6G,cACtC,KACJ,kBAAC,GAAD,CACEpE,IAAI,QACJ0J,GAAG,QACHvH,MAAM,iCACN1F,KAAK,QACLwI,OAAQ6R,EAAM5R,OAAS4R,EAAM9F,QAC7B7L,YACG2R,EAAM5R,OAAS4R,EAAM9F,QAAU8F,EAAM1S,aAAe,KAEvDnC,SAAU,SAACuC,GAAD,OAAW,EAAKyS,aAAa,QAASzS,EAAME,OAAOjD,QAC7DA,MAAOqV,EAAMrV,QAEf,kBAAC,GAAD,CACEzB,IAAI,WACJ0J,GAAG,WACHvH,MAAM,uCACN1F,KAAK,WACLwI,OAAQ8R,EAAS7R,OAAS6R,EAAS/F,QACnC7L,YACG4R,EAAS7R,OAAS6R,EAAS/F,QAAU+F,EAAS3S,aAAe,KAEhEnC,SAAU,SAACuC,GAAD,OACR,EAAKyS,aAAa,WAAYzS,EAAME,OAAOjD,QAE7CA,MAAOsV,EAAStV,QAElB,kBAAC,GAAD,CACE7C,QACE8B,KAAKQ,MAAM8V,UACP,kBAAM,EAAKI,qBACX,kBAAM,EAAKjE,sBAJnB,oFASA,kBAACtU,EAAA,EAAD,KACE,kBAAC0Y,GAAA,EAAD,CAAMnY,UAAWC,IAASC,GAAG,gBAAgBR,QAAQ,SAArD,qK,GAhIWkC,aAyJRC,gBAdS,SAACC,GACvB,MAAO,CACLP,OAAwB,OAAhBO,EAAM8G,MACdwP,QAAStW,EAAMsW,QACfpT,aAAclD,EAAM+D,UAIG,SAAC+P,GAC1B,MAAO,CACLqC,OAAQ,SAACP,EAAOC,GAAR,OAAqB/B,EN1Ib,SAAC8B,EAAOC,GAC1B,OAAO,SAAC/B,GACNA,EAzBK,CACLpP,KCNsB,eDgCtB,IAAM6R,EAAW,CACfX,MAAOA,EACPC,SAAUA,EACVW,mBAAmB,GAGjBC,EAAG,oFAAgF/Q,EAAOgR,cAE9FxW,EACG6G,KAAK0P,EAAKF,GACV5Q,MAAK,SAACC,GACLN,QAAQC,IAAIK,GACZ,IAAM+Q,EAAiB,IAAIpS,MACzB,IAAIA,MAAOyI,UAAsC,IAA1BpH,EAASwG,KAAKwK,WAGvChQ,aAAaiQ,QAAQ,QAASjR,EAASwG,KAAK4H,SAC5CpN,aAAaiQ,QAAQ,iBAAkBF,GACvC/P,aAAaiQ,QAAQ,SAAUjR,EAASwG,KAAK0K,SAE7ChD,EAASD,GAAYjO,EAASwG,KAAK4H,QAASpO,EAASwG,KAAK0K,UAC1DhD,EAASO,GAAiBzO,EAASwG,KAAKwK,eAEzC1P,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,GACZ+P,EAASI,GAASnQ,EAAM6B,SAASwG,KAAKrI,YM6GJgT,CAAanB,EAAOC,QAI/C9V,CAA6C2V,ICpKtDsB,G,kLAEFxX,KAAKnD,MAAM4a,SAASzX,KAAKnD,MAAM2K,W,+BAI/B,OAAO,kBAAC,IAAD,CAAU5I,GAAG,U,GANH0B,aAgBNC,eAAQ,MANI,SAAA+T,GACzB,MAAO,CACLmD,SAAU,kBAAMnD,EAASiD,UAIdhX,CAAkCiX,I,8BCoGlCE,GArHC,SAAC7a,GAAW,IAAD,EAQrBA,EAAMwB,YANRC,EAFuB,EAEvBA,UACAC,EAHuB,EAGvBA,SACA0U,EAJuB,EAIvBA,UACAoD,EALuB,EAKvBA,SACAzQ,EANuB,EAMvBA,gBACAC,EAPuB,EAOvBA,QAGF,OACE,kBAAClG,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,QACNwO,SAAUpT,EAAM6W,WAChB3S,MAAOkS,EAAUlS,MACjBmE,KAAK,QACLyS,aAAa,MACbnE,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,YAAa3P,EAAME,OAAOjD,QAExDwD,OAAQ0O,EAAUzO,OAASyO,EAAU3C,QACrC7L,YACGwO,EAAUzO,OAASyO,EAAU3C,QAC1B2C,EAAUvP,aACV,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,uCACNwO,SAAUpT,EAAM6W,WAChB3S,MAAOsV,EAAStV,MAChBmE,KAAK,WACLyS,aAAa,eACbnE,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,WAAY3P,EAAME,OAAOjD,QAEvDwD,OAAQ8R,EAAS7R,OAAS6R,EAAS/F,QACnC7L,YACG4R,EAAS7R,OAAS6R,EAAS/F,QAAU+F,EAAS3S,aAAe,QAIpE,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACqT,GAAA,EAAD,CACEC,WAAS,EACT/R,MAAM,qBACNV,MAAOzC,EAAUyC,MACjBQ,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,YAAa3P,EAAME,OAAOjD,QAExDkP,SAAUpT,EAAM6W,WAChBnP,OAAQjG,EAAUkG,OAASlG,EAAUgS,QACrC7L,YACGnG,EAAUkG,OAASlG,EAAUgS,QAC1BhS,EAAUoF,aACV,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,6CACNwO,SAAUpT,EAAM6W,WAChB3S,MAAOxC,EAASwC,MAChByS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,WAAY3P,EAAME,OAAOjD,QAEvDwD,OAAQhG,EAASiG,OAASjG,EAAS+R,QACnC7L,YACGlG,EAASiG,OAASjG,EAAS+R,QAAU/R,EAASmF,aAAe,QAIpE,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,iCACNwO,SAAUpT,EAAM6W,WAChB3S,MAAO8E,EAAQ9E,MACfyS,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,UAAW3P,EAAME,OAAOjD,QAEtDwD,OAAQsB,EAAQrB,OAASqB,EAAQyK,QACjC7L,YACGoB,EAAQrB,OAASqB,EAAQyK,QAAUzK,EAAQnC,aAAe,QAIjE,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAACqT,GAAA,EAAD,CACE9R,MAAM,oGACNwO,SAAUpT,EAAM6W,WAChB3S,MAAO6E,EAAgB7E,MACvBmE,KAAK,QACLsO,WAAS,EACTjS,SAAU,SAACuC,GAAD,OACRjH,EAAM4W,sBAAsB,kBAAmB3P,EAAME,OAAOjD,QAE9DwD,OAAQqB,EAAgBpB,OAASoB,EAAgB0K,QACjD7L,YACGmB,EAAgBpB,OAASoB,EAAgB0K,QACtC1K,EAAgBlC,aAChB,UCvGVxH,GAAYC,YAAW,CAC3B2W,MAAO,CACLvW,MAAO,UA6JIqb,GAzJC,SAAC/a,GACf,IAAMC,EAAUZ,KADS,EAUrBW,EAAM4O,eAPRyH,EAHuB,EAGvBA,mBACA1Q,EAJuB,EAIvBA,eACAC,EALuB,EAKvBA,iBACA0Q,EANuB,EAMvBA,iBACAC,EAPuB,EAOvBA,gBACAC,EARuB,EAQvBA,kBACAC,EATuB,EASvBA,iBAGF,OACE,kBAAC3T,EAAA,EAAD,CAAMC,WAAS,EAAC0C,QAAS,GACvB,kBAAC3C,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,IACb,kBAAC,KAAD,CAAyBuQ,MAAOC,MAC9B,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTlT,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,qJACNoP,OAAO,aACP9P,MAAOmS,EAAmBnS,MAC1BQ,SAAU,SAAC0H,GAAD,OACRpM,EAAM8W,4BAA4B,qBAAsB1K,IAE1D1E,OAAQ2O,EAAmB1O,OAAS0O,EAAmB5C,QACvD7L,YACGyO,EAAmB1O,OAAS0O,EAAmB5C,QAC5C4C,EAAmBxP,aACnB,SAKZ,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,iHACN2C,eAAe,GACfrD,MAAOyB,EAAezB,MACtBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,iBAAkB5S,IAEtDwD,OAAQ/B,EAAegC,OAAShC,EAAe8N,QAC/C7L,YACGjC,EAAegC,OAAShC,EAAe8N,QACpC9N,EAAekB,aACf,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,iHACN2C,eAAe,GACfrD,MAAO0B,EAAiB1B,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ9B,EAAiB+B,OAAS/B,EAAiB6N,QACnD7L,YACGhC,EAAiB+B,OAAS/B,EAAiB6N,QACxC7N,EAAiBiB,aACjB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,4GACN2C,eAAe,GACfrD,MAAOoS,EAAiBpS,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ4O,EAAiB3O,OAAS2O,EAAiB7C,QACnD7L,YACG0O,EAAiB3O,OAAS2O,EAAiB7C,QACxC6C,EAAiBzP,aACjB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,sGACN2C,eAAe,GACfrD,MAAOqS,EAAgBrS,MACvBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,kBAAmB5S,IAEvDwD,OAAQ6O,EAAgB5O,OAAS4O,EAAgB9C,QACjD7L,YACG2O,EAAgB5O,OAAS4O,EAAgB9C,QACtC8C,EAAgB1P,aAChB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,kHACN2C,eAAe,GACfrD,MAAOsS,EAAkBtS,MACzBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,oBAAqB5S,IAEzDwD,OAAQ8O,EAAkB7O,OAAS6O,EAAkB/C,QACrD7L,YACG4O,EAAkB7O,OAAS6O,EAAkB/C,QAC1C+C,EAAkB3P,aAClB,QAIV,kBAAC/D,EAAA,EAAD,CAAMP,MAAI,EAACc,GAAI,GACb,kBAAC,KAAD,CACExC,UAAWZ,EAAQgW,MACnB7C,SAAUpT,EAAM6W,WAChBjS,MAAM,4GACN2C,eAAe,GACfrD,MAAOuS,EAAiBvS,MACxBsD,aAAa,IACb9C,SAAU,SAACqS,EAAG7S,GAAJ,OACRlE,EAAM8W,4BAA4B,mBAAoB5S,IAExDwD,OAAQ+O,EAAiB9O,OAAS8O,EAAiBhD,QACnD7L,YACG6O,EAAiB9O,OAAS8O,EAAiBhD,QACxCgD,EAAiB5P,aACjB,UCpJVxH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJE,MAAO,OACP,qBAAsB,CACpB8G,QAAS,eAGbwU,UAAW,CACTC,UAAW,cAEbC,WAAY,CACVC,YAAa5b,EAAMkG,QAAQ,IAE7B2V,aAAc,CACZtT,UAAWvI,EAAMkG,QAAQ,GACzBqQ,aAAcvW,EAAMkG,QAAQ,QAYhC,IAmIe4V,GAnIa,SAACrb,GAC3B,IAAMC,EAAUZ,KADqB,EAEDmO,IAAMlN,SAAS,GAFd,mBAE9Bgb,EAF8B,KAElBC,EAFkB,KAG/BC,EAVC,CACL,2JACA,iKACA,+FAiFF,OACE,yBAAK3a,UAAWZ,EAAQT,MACtB,kBAACic,GAAA,EAAD,CAASH,WAAYA,EAAYI,kBAAgB,GAC9CF,EAAMlZ,KAAI,SAACsC,GAAD,OACT,kBAAC+W,GAAA,EAAD,CAAMlZ,IAAKmC,GACT,kBAACgX,GAAA,EAAD,CAAW3b,QAAS,CAAET,KAAMS,EAAQ+a,YAAcpW,QAIxD,6BACG0W,IAAeE,EAAMrL,OACpB,6BACE,kBAAC7O,EAAA,EAAD,CAAYT,UAAWZ,EAAQmb,cAA/B,wKAGA,kBAACjV,GAAA,EAAD,CACE5E,QAAQ,YACR3B,MAAM,UACNiC,UAAWC,IACXC,GAAG,SAJL,qFAUF,6BACE,kBAAC,GAAD,KA9Ea,SAAC8Z,GACtB,OAAQA,GACN,KAAK,EACH,OACE,kBAAC,GAAD,CACEra,YAAaxB,EAAMwB,YACnBoV,sBAAuB5W,EAAM4W,sBAC7BC,YAAY,IAGlB,KAAK,EACH,OACE,kBAAC,GAAD,CACEjI,eAAgB5O,EAAM4O,eACtBkI,4BAA6B9W,EAAM8W,4BACnCD,YAAY,IAGlB,KAAK,EACH,OACE,6BACE,kBAACvV,EAAA,EAAD,CACEC,QAAQ,KACR4D,MAAM,SACN7B,MAAO,CAAEkD,QAAS,eAHpB,iHAOA,kBAAC,GAAD,CACEhF,YAAaxB,EAAMwB,YACnBoV,sBAAuB5W,EAAM4W,sBAC7BC,YAAY,IAEd,kBAACvV,EAAA,EAAD,CACEC,QAAQ,KACR4D,MAAM,SACN7B,MAAO,CAAEkD,QAAS,WAHpB,uHAOA,kBAAC,GAAD,CACEoI,eAAgB5O,EAAM4O,eACtBkI,4BAA6B9W,EAAM8W,4BACnCD,YAAY,KAIpB,QACE,MAAO,qBA+BAiF,CACCR,EACAtb,EAAM4W,sBACN5W,EAAM8W,4BACN9W,EAAMwB,YACNxB,EAAM4O,iBAGV,yBAAKtL,MAAO,CAAEwS,aAAc,SAC1B,kBAAC3P,GAAA,EAAD,CACEiN,SAAyB,IAAfkI,EACVja,QA9FK,WACjBka,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,MA8FvClb,UAAWZ,EAAQib,YAHrB,kCAOA,kBAAC/U,GAAA,EAAD,CAAQ5E,QAAQ,YAAY3B,MAAM,UAAUyB,QAnHrC,WACE,IAAfia,IACEtb,EAAMkX,iBACRqE,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,KAC9C/b,EAAM4V,kBAAkB,gBAEd,IAAf0F,IACEtb,EAAMmX,oBACRoE,GAAc,SAACQ,GAAD,OAAoBA,EAAiB,KAC9C/b,EAAM4V,kBAAkB,mBAEd,IAAf0F,GACFtb,EAAMgc,iBAwGKV,IAAeE,EAAMrL,OAAS,EAAI,uCAAW,uCCvJxD8L,G,4MACJtY,MAAQ,CACNnC,YAAa,CACXC,UAAW,CACTyC,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX/R,SAAU,CACRwC,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACP8L,SAAS,GAEX2C,UAAW,CACTlS,MAAO,GACPkQ,WAAY,CACVI,SAAS,GAEX7M,OAAO,EACP8L,SAAS,GAEX+F,SAAU,CACRtV,MAAO,GACPkQ,WAAY,CACVQ,WAAW,GAEbjN,OAAO,EACP8L,SAAS,GAEX1K,gBAAiB,CACf7E,MAAO,GACPkQ,WAAY,CACVI,SAAS,GAEX7M,OAAO,EACP8L,SAAS,GAEXzK,QAAS,CACP9E,MAAO,GACPkQ,WAAY,CACVE,UAAU,GAEZ3M,OAAO,EACP8L,SAAS,IAGbyD,kBAAkB,EAClBtI,eAAgB,CACdyH,mBAAoB,CAClBnS,MAAO,KACPkQ,WAAY,CACVM,QAAQ,GAEV/M,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX9N,eAAgB,CACdzB,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX7N,iBAAkB,CAChB1B,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX6C,iBAAkB,CAChBpS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX8C,gBAAiB,CACfrS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEX+C,kBAAmB,CACjBtS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,GAEXgD,iBAAkB,CAChBvS,MAAO,GACPkQ,WAAY,CACVO,UAAU,GAEZhN,OAAO,EACPd,aAAc,GACd4M,SAAS,IAGb0D,qBAAqB,G,EAGvB6E,aAAe,WACb,IAAM1E,EAAe,CACnB9V,YAAa,CACXC,UAAW,EAAKkC,MAAMnC,YAAYC,UAAUyC,MAC5CxC,SAAU,EAAKiC,MAAMnC,YAAYE,SAASwC,MAC1CkS,UAAW,EAAKzS,MAAMnC,YAAY4U,UAAUlS,MAC5C6E,gBAAiB,EAAKpF,MAAMnC,YAAYuH,gBAAgB7E,MACxD8E,QAAS,EAAKrF,MAAMnC,YAAYwH,QAAQ9E,OAE1C0K,eAAgB,CACdyH,mBAAoB,EAAK1S,MAAMiL,eAAeyH,mBAAmBnS,MACjE0F,YAAa,CACXC,IAAK,EAAKlG,MAAMiL,eAAejJ,eAAezB,MAC9C4F,MAAO,EAAKnG,MAAMiL,eAAehJ,iBAAiB1B,OAEpD8F,QAAS,CACPD,UAAW,EAAKpG,MAAMiL,eAAe0H,iBAAiBpS,MACtDgG,SAAU,EAAKvG,MAAMiL,eAAe2H,gBAAgBrS,OAEtD+F,SAAU,CACRF,UAAW,EAAKpG,MAAMiL,eAAe4H,kBAAkBtS,MACvDgG,SAAU,EAAKvG,MAAMiL,eAAe6H,iBAAiBvS,SAK3D,EAAKlE,MAAMkc,eACT,EAAKvY,MAAMnC,YAAY4U,UAAUlS,MACjC,EAAKP,MAAMnC,YAAYgY,SAAStV,MAChCoT,I,EAIJV,sBAAwB,SAACnU,EAAKyB,GAC5B,IAAIkQ,EAAaF,GACfhQ,EACA,EAAKP,MAAMnC,YAAYiB,GAAK2R,YAE1BiD,EAAc,2BACb,EAAK1T,MAAMnC,aADE,mBAEfiB,EAFe,2BAGX,EAAKkB,MAAMnC,YAAYiB,IAHZ,IAIdyB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAITkC,EAAY,EAAKC,kBAAkB,cAAeyB,GAEtD,EAAK7O,SAAS,CAAEhH,YAAa6V,EAAgBH,iBAAkBvB,K,EAGjEmB,4BAA8B,SAACrU,EAAKyB,GAClC,IAAIkQ,EAAaF,GACfhQ,EACA,EAAKP,MAAMiL,eAAenM,GAAK2R,YAE7BmD,EAAiB,2BAChB,EAAK5T,MAAMiL,gBADK,mBAElBnM,EAFkB,2BAGd,EAAKkB,MAAMiL,eAAenM,IAHZ,IAIjByB,MAAOA,EACPyD,MAAOyM,EAAWC,QAClBxN,aAAcuN,EAAWvN,aACzB4M,SAAS,MAITkC,EAAY,EAAKC,kBAAkB,iBAAkB2B,GAEzD,EAAK/O,SAAS,CACZoG,eAAgB2I,EAChBJ,oBAAqBxB,K,EAIzBC,kBAAoB,SAACuG,EAAQvC,GAC3B,GAAe,gBAAXuC,GAAiD,qBAAdvC,EAA2B,CAAC,IAE/DnY,EAMEmY,EANFnY,UACAC,EAKEkY,EALFlY,SACA0U,EAIEwD,EAJFxD,UACAoD,EAGEI,EAHFJ,SACAzQ,EAEE6Q,EAFF7Q,gBACAC,EACE4Q,EADF5Q,QAEF,GACEvH,EAAUkG,OACVjG,EAASiG,OACTyO,EAAUzO,OACV6R,EAAS7R,OACToB,EAAgBpB,OAChBqB,EAAQrB,MAER,OAAO,EAIX,GAAe,gBAAXwU,GAAiD,qBAAdvC,EAA2B,CAChE,IAAIvC,EAAc,2BACb,EAAK1T,MAAMnC,aADE,IAEhBC,UAAU,2BACL,EAAKkC,MAAMnC,YAAYC,WADnB,IAEPgS,SAAS,EACT5M,aAAc,gLAEhBnF,SAAS,2BACJ,EAAKiC,MAAMnC,YAAYE,UADpB,IAEN+R,SAAS,EACT5M,aAAc,gLAEhBuP,UAAU,2BACL,EAAKzS,MAAMnC,YAAY4U,WADnB,IAEP3C,SAAS,EACT5M,aAAc,gLAEhB2S,SAAS,2BACJ,EAAK7V,MAAMnC,YAAYgY,UADpB,IAEN/F,SAAS,EACT5M,aAAc,gLAEhBkC,gBAAgB,2BACX,EAAKpF,MAAMnC,YAAYuH,iBADb,IAEb0K,SAAS,EACT5M,aAAc,gLAEhBmC,QAAQ,2BACH,EAAKrF,MAAMnC,YAAYwH,SADrB,IAELyK,SAAS,EACT5M,aAAc,kLAGlB,EAAK2B,SAAS,CAAEhH,YAAa6V,IAG/B,GAAe,mBAAX8E,GAAoD,qBAAdvC,EAA2B,CAAC,IAElEvD,EAOEuD,EAPFvD,mBACA1Q,EAMEiU,EANFjU,eACAC,EAKEgU,EALFhU,iBACA0Q,EAIEsD,EAJFtD,iBACAC,EAGEqD,EAHFrD,gBACAC,EAEEoD,EAFFpD,kBACAC,EACEmD,EADFnD,iBAEF,GACEJ,EAAmB1O,OACnBhC,EAAegC,OACf/B,EAAiB+B,OACjB2O,EAAiB3O,OACjB4O,EAAgB5O,OAChB6O,EAAkB7O,OAClB8O,EAAiB9O,MAEjB,OAAO,EAIX,GAAe,mBAAXwU,GAAoD,qBAAdvC,EAA2B,CACnE,IAAIrC,EAAiB,2BAChB,EAAK5T,MAAMiL,gBADK,IAEnByH,mBAAmB,2BACd,EAAK1S,MAAMiL,eAAeyH,oBADb,IAEhB5C,SAAS,EACT5M,aAAc,gLAEhBlB,eAAe,2BACV,EAAKhC,MAAMiL,eAAejJ,gBADjB,IAEZ8N,SAAS,EACT5M,aAAc,gLAEhBjB,iBAAiB,2BACZ,EAAKjC,MAAMiL,eAAehJ,kBADf,IAEd6N,SAAS,EACT5M,aAAc,gLAEhByP,iBAAiB,2BACZ,EAAK3S,MAAMiL,eAAe0H,kBADf,IAEd7C,SAAS,EACT5M,aAAc,gLAEhB0P,gBAAgB,2BACX,EAAK5S,MAAMiL,eAAe2H,iBADhB,IAEb9C,SAAS,EACT5M,aAAc,gLAEhB2P,kBAAkB,2BACb,EAAK7S,MAAMiL,eAAe4H,mBADd,IAEf/C,SAAS,EACT5M,aAAc,gLAEhB4P,iBAAiB,2BACZ,EAAK9S,MAAMiL,eAAe6H,kBADf,IAEdhD,SAAS,EACT5M,aAAc,kLAGlB,EAAK2B,SAAS,CAAEoG,eAAgB2I,IAGlC,OAAO,G,uDAMP,OAFIpU,KAAKnD,MAAM6G,cAAc1G,OAAOic,SAAS,EAAG,GAG9C,6BACE,kBAAC9a,EAAA,EAAD,CACEgC,MAAO,CAAEvC,SAAU,WAAY+K,IAAK,OAAQD,MAAO,SAEnD,kBAACmO,GAAA,EAAD,CAAMnY,UAAWC,IAASC,GAAG,QAAQR,QAAQ,SAA7C,mCAIF,kBAACD,EAAA,EAAD,CACEC,QAAQ,KACR4D,MAAM,SACN7B,MAAO,CAAEwS,aAAc,SAHzB,sEAOC3S,KAAKnD,MAAM6G,aACV,kBAACyR,GAAA,EAAD,CAAOyB,SAAS,SAAS5W,KAAKnD,MAAM6G,cAClC,KACJ,kBAAC,GAAD,CACErF,YAAa2B,KAAKQ,MAAMnC,YACxB0V,iBAAkB/T,KAAKQ,MAAMuT,iBAC7BtI,eAAgBzL,KAAKQ,MAAMiL,eAC3BuI,oBAAqBhU,KAAKQ,MAAMwT,oBAChCP,sBAAuBzT,KAAKyT,sBAC5BE,4BAA6B3T,KAAK2T,4BAClClB,kBAAmBzS,KAAKyS,kBACxBoG,aAAc7Y,KAAK6Y,oB,GArWEvY,aAyXhBC,gBAbS,SAACC,GACvB,MAAO,CACLkD,aAAclD,EAAM+D,UAIG,SAAC+P,GAC1B,MAAO,CACLyE,eAAgB,SAAC3C,EAAOC,EAAUhY,GAAlB,OACdiW,EXlUsB,SAAC8B,EAAOC,EAAUlC,GAC5C,OAAO,SAACG,GACNA,EA3DK,CACLpP,KCNsB,eDkEtB,IAAM6R,EAAW,CACfX,MAAOA,EACPC,SAAUA,EACVW,mBAAmB,GAGjBC,EAAG,wEAAoE/Q,EAAOgR,cAElFxW,EACG6G,KAAK0P,EAAKF,GACV5Q,MAAK,SAACC,GACLN,QAAQC,IAAIK,GACZ,IAAM+Q,EAAiB,IAAIpS,MACzB,IAAIA,MAAOyI,UAAsC,IAA1BpH,EAASwG,KAAKwK,WAGvChQ,aAAaiQ,QAAQ,QAASjR,EAASwG,KAAK4H,SAC5CpN,aAAaiQ,QAAQ,iBAAkBF,GACvC/P,aAAaiQ,QAAQ,SAAUjR,EAASwG,KAAK0K,SAE7ChD,EAASD,GAAYjO,EAASwG,KAAK4H,QAASpO,EAASwG,KAAK0K,UAC1DhD,EAASO,GAAiBzO,EAASwG,KAAKwK,YAExCjD,EAAY,OAAa/N,EAASwG,KAAK0K,QACvC5W,EACG6G,KADH,2BAC4BnB,EAASwG,KAAK4H,SAAWL,GAClDhO,MAAK,SAACC,GACLN,QAAQC,IAAIK,MAEbsB,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,SAGjBmD,OAAM,SAACnD,GACNuB,QAAQC,IAAIxB,GACZ+P,EAASI,GAASnQ,EAAM6B,SAASwG,KAAKrI,YW2R/BgT,CAAqBnB,EAAOC,EAAUhY,QAItCkC,CAA6CuY,ICtXtDI,G,kLAEFlZ,KAAKnD,MAAMsc,oB,+BAIX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpd,KAAK,QAAQ0C,UAAWwX,KAC/B,kBAAC,IAAD,CAAOla,KAAK,gBAAgB0C,UAAWoa,KACvC,kBAAC,IAAD,CAAUla,GAAG,WAgBjB,OAZIwI,aAAaC,QAAQ,YACvB+R,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpd,KAAK,UAAU0C,UAAW8M,KACjC,kBAAC,IAAD,CAAOxP,KAAK,mBAAmB0C,UAAWoG,KAC1C,kBAAC,IAAD,CAAO9I,KAAK,WAAW0C,UAAWgT,KAClC,kBAAC,IAAD,CAAO1V,KAAK,WAAW0C,UAAWoV,KAClC,kBAAC,IAAD,CAAO9X,KAAK,UAAU0C,UAAW8Y,KACjC,kBAAC,IAAD,CAAU5Y,GAAG,uBAIZ,kBAAC,EAAD,CAAQqB,OAAQD,KAAKnD,MAAMoD,QAASmZ,O,GA1B7B9Y,aA0CHC,gBAZS,SAACC,GACvB,MAAO,CACLP,OAAwB,OAAhBO,EAAM8G,UAIS,SAACgN,GAC1B,MAAO,CACL6E,gBAAiB,kBAAM7E,GZwElB,SAACA,GACN,IAAMhN,EAAQF,aAAaC,QAAQ,SACnC,GAAKC,EAEE,CACL,IAAM6P,EAAiB,IAAIpS,KAAKqC,aAAaC,QAAQ,mBACrD,GAAI8P,GAAkB,IAAIpS,KACxBuP,EAASK,UACJ,CACL,IAAMxN,EAASC,aAAaC,QAAQ,UACpCiN,EAASD,GAAY/M,EAAOH,IAC5BmN,EACEO,IACGsC,EAAe3J,WAAY,IAAIzI,MAAOyI,WAAa,MAGxD8G,EAASC,YAbXD,EAASK,aYvEApU,CAA6C2Y,IC5CxCG,QACW,cAA7Brc,OAAOC,SAASqc,UAEe,UAA7Btc,OAAOC,SAASqc,UAEhBtc,OAAOC,SAASqc,SAASC,MACvB,2D,wBClBOC,GAAe,SAACC,EAAWC,GACtC,OAAO,2BACFD,GACAC,ICADC,GAAe,CACnBrS,MAAO,KACPH,OAAQ,KACR5C,MAAO,KACPuS,SAAS,EACTzY,YAAa,KACboN,eAAgB,KAChBuJ,SAAU,MAGN4E,GAAY,SAACpZ,GACjB,OAAOgZ,GAAahZ,EAAO,CAAE+D,MAAO,KAAMuS,SAAS,KAG/CzC,GAAc,SAAC7T,EAAOqZ,GAC1B,OAAOL,GAAahZ,EAAO,CACzB8G,MAAOuS,EAAOrF,QACdrN,OAAQ0S,EAAO1S,OACf5C,MAAO,KACPuS,SAAS,KAIPpC,GAAW,SAAClU,EAAOqZ,GACvB,IAAInW,EAkBJ,OAjBAoC,QAAQC,IAAI8T,EAAOtV,OAGjBb,EADwB,MAAtBmW,EAAOtV,MAAMuV,KACA,gTAEO,MAAtBD,EAAOtV,MAAMuV,MACY,iBAAzBD,EAAOtV,MAAMwV,QAEE,uMAEO,MAAtBF,EAAOtV,MAAMuV,MACY,oBAAzBD,EAAOtV,MAAMwV,QAEE,kPAEA,ySAEVP,GAAahZ,EAAO,CACzB+D,MAAOb,EACPoT,SAAS,KAIPnC,GAAa,SAACnU,GAClB,OAAOgZ,GAAahZ,EAAO,CAAE8G,MAAO,KAAMH,OAAQ,QAG9CoN,GAAe,SAAC/T,EAAOqZ,GAC3B,OAAOL,GAAahZ,EAAO,CACzBnC,YAAawb,EAAOxb,YACpBoN,eAAgBoO,EAAOpO,eACvBuJ,SAAU6E,EAAO7E,YAqBNgF,GAjBC,WAAmC,IAAlCxZ,EAAiC,uDAAzBmZ,GAAcE,EAAW,uCAChD,OAAQA,EAAO3U,MACb,IdjEsB,ackEpB,OAAO0U,GAAUpZ,GACnB,IdlEwB,ecmEtB,OAAO6T,GAAY7T,EAAOqZ,GAC5B,IdnEqB,YcoEnB,OAAOnF,GAASlU,EAAOqZ,GACzB,IdpEuB,ccqErB,OAAOlF,GAAWnU,GACpB,IdpEiC,wBcqE/B,OAAO+T,GAAa/T,EAAOqZ,GAC7B,QACE,OAAOrZ,IC5DPyZ,GAAmBjd,OAAOkd,sCAAwCC,KAElEC,GAAQC,aAAYC,GAASL,GAAiBM,aAAgBC,QAE9DC,GACJ,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,CAAYM,SAAU,KACpB,kBAAC,KAAD,CACEC,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,UAGd,kBAAC,GAAD,SAMRC,IAASC,OAAOP,GAAKQ,SAASC,eAAe,SH+FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlV,MAAK,SAAA0S,GACjCA,EAAayC,iB","file":"static/js/main.9ed27ee3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon /> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon /> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon /> },\r\n  { name: \"Профиль\", path: \"/profile\", icon: <AccountCircleIcon /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"Показания\";  \r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"Показания\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"Расходы\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"Тарифы\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"Профиль\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(sectionTitleName);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:425px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\" \r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\nrender() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <AppBar userDetails={this.props.userDetails}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} style={{ width: \"100%\" }}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchLabels(props) {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            name={props.label}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst DialogCheck = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.modalOpen}\r\n      onClose={props.modalHandlerClose}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle align=\"center\">\r\n        Проверьте показатели за {MONTHS_LIST[props.monthYear.month].text}{\" \"}\r\n        {props.monthYear.year} г.\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Электроэнергия\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              День:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityDay.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Ночь:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityNight.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Кухня\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Ванная\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Switch\r\n              label=\"Отправить в бухгалтерию\"\r\n              checked={props.sendDataToAccountant}\r\n              switchChange={props.switchChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.modalHandlerClose} color=\"secondary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.sendIndicators} color=\"primary\" autoFocus>\r\n          Отправить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogCheck;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nconst Indicators = (props) => {\r\n  const errorMessage = \"Поле обязательно для заполнения\";\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Месяц и год\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Месяц</InputLabel>\r\n          <Select\r\n            value={props.monthYear.month || 0}\r\n            onChange={(event) => props.setStateMonth(event, event.target.value)}\r\n          >\r\n            {MONTHS_LIST.map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Год</InputLabel>\r\n          <Select\r\n            value={props.monthYear.year || 2020}\r\n            onChange={(event) => props.setStateYear(event, event.target.value)}\r\n          >\r\n            {props.getCurrentYear().map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Электроэнергия\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"День\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"electricityDay\", value)\r\n          }\r\n          error={!props.indicators.electricityDay.valid}\r\n          helperText={\r\n            !props.indicators.electricityDay.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Ночь\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"electricityNight\", value)\r\n          }\r\n          error={!props.indicators.electricityNight.valid}\r\n          helperText={\r\n            !props.indicators.electricityNight.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Кухня\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.coldWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"coldWaterKitchen\", value)\r\n          }\r\n          error={!props.indicators.coldWaterKitchen.valid}\r\n          helperText={\r\n            !props.indicators.coldWaterKitchen.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.hotWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"hotWaterKitchen\", value)\r\n          }\r\n          error={!props.indicators.hotWaterKitchen.valid}\r\n          helperText={\r\n            !props.indicators.hotWaterKitchen.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Ванная\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.coldWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"coldWaterBathroom\", value)\r\n          }\r\n          error={!props.indicators.coldWaterBathroom.valid}\r\n          helperText={\r\n            !props.indicators.coldWaterBathroom.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={props.indicators.hotWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.addIndicatorHandler(\"hotWaterBathroom\", value)\r\n          }\r\n          error={!props.indicators.hotWaterBathroom.valid}\r\n          helperText={\r\n            !props.indicators.hotWaterBathroom.valid ? errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={props.modalHandlerOpen}\r\n        >\r\n          Отправить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport \"./IndicatorsInsert.css\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport DialogCheck from \"../../components/IndicatorsInsertForm/DialogCheck\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Indicators from \"../../components/IndicatorsInsertForm/Indicators\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: { value: \"\", valid: true },\r\n      electricityNight: { value: \"\", valid: true },\r\n      coldWaterKitchen: { value: \"\", valid: true },\r\n      coldWaterBathroom: { value: \"\", valid: true },\r\n      hotWaterKitchen: { value: \"\", valid: true },\r\n      hotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, value) => {\r\n    const updatedCount = value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, value) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, value) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DialogCheck\r\n          indicators={this.state.indicators}\r\n          monthYear={this.state.monthYear}\r\n          modalOpen={this.state.modalOpen}\r\n          sendDataToAccountant={this.state.sendDataToAccountant}\r\n          switchChange={this.switchChange}\r\n          modalHandlerClose={this.modalHandlerClose}\r\n          sendIndicators={this.sendIndicators}\r\n        />\r\n\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Подать показания\r\n        </Typography>\r\n\r\n        <CardBody>\r\n          <Indicators\r\n            indicators={this.state.indicators}\r\n            monthYear={this.state.monthYear}\r\n            setStateMonth={this.setStateMonth}\r\n            setStateYear={this.setStateYear}\r\n            getCurrentYear={this.getCurrentYear}\r\n            addIndicatorHandler={this.addIndicatorHandler}\r\n            modalHandlerOpen={this.modalHandlerOpen}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n  buttonSend: {\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root} >\r\n      <IconButton\r\n        className={classes.buttonSend}\r\n        aria-label=\"Отправить\"\r\n        component=\"span\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.handleSendDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <EmailIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          {props.activeButtonName}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport emailjs from \"emailjs-com\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n    sendDialogOpen: false,\r\n    sendIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"Передайте показания\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, попробуйте обновить страницу.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"Эл-я день:\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"Эл-я ночь:\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"Холодная вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"Горячая вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"Водоотведение:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        year: data[key].currentDate.year,\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"Эл-я день:\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"Эл-я ночь:\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"Холодная вода:\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n            bathroom: data[key].coldWater.bathroom,\r\n            kitchen: data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"Горячая вода:\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n            bathroom: data[key].hotWater.bathroom,\r\n            kitchen: data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"Водоотведение:\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    const indicator = this.getOneIndicator();\r\n\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[new Date(indicator.date).getMonth()].text,\r\n      year: indicator.year,\r\n      electricityDay: indicator.indicators[0].intake,\r\n      electricityNight: indicator.indicators[1].intake,\r\n      coldWaterKitchen: indicator.indicators[2].kitchen,\r\n      coldWaterBathroom: indicator.indicators[2].bathroom,\r\n      hotWaterKitchen: indicator.indicators[3].kitchen,\r\n      hotWaterBathroom: indicator.indicators[3].bathroom,\r\n    };\r\n    \r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          this.props.enqueueSnackbar(\"Данные успешно переданы на почту!\", {\r\n            variant: \"success\",\r\n            preventDuplicate: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getOneIndicator = () => {\r\n    let oneIndicator = this.state.indicatorsList.find(\r\n      ({ id }) => id === this.state.sendIndicatorId\r\n    );\r\n    return oneIndicator;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  handleSendDialogOpen = (id) => {\r\n    this.setState({ sendDialogOpen: true, sendIndicatorId: id });\r\n  };\r\n\r\n  handleSendDialogClose = () => {\r\n    this.setState({ sendDialogOpen: false });\r\n  };\r\n\r\n  handleSendDialogContinue = () => {\r\n    this.sendEmailHandler();\r\n    this.handleSendDialogClose();\r\n  };\r\n\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n            new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n            new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n              handleSendDialogOpen={this.handleSendDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.sendDialogOpen}\r\n          handleClose={this.handleSendDialogClose}\r\n          handleContinue={this.handleSendDialogContinue}\r\n          dialogTitle=\"Отправка показателей\"\r\n          dialogContent=\"Вы уверены, что хотите отправить показатели на адрес электронной почты бухгалтерии?\"\r\n          activeButtonName=\"Отправить\"\r\n        />\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withSnackbar(connect(mapStateToProps)(OutlayDetails));\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"35px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonIconSuccessDisabled: {\r\n    color: \"#9E9E9E\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart, tariffValid } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          disabled={!tariffValid}\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={!tariffValid ? classes.buttonIconSuccessDisabled : classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name.value}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n                error={!name.valid && name.touched}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n              {!name.valid && name.touched ? (\r\n                <FormHelperText>{name.errorMessage}</FormHelperText>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost.value}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n              error={!cost.valid && cost.touched}\r\n              helperText={\r\n                !cost.valid && cost.touched ? cost.errorMessage : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart.value}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n                error={!dateStart.valid && dateStart.touched}\r\n                helperText={\r\n                  !dateStart.valid && dateStart.touched\r\n                    ? dateStart.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd.value}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n                error={!dateEnd.valid && dateEnd.touched}\r\n                helperText={\r\n                  !dateEnd.valid && dateEnd.touched\r\n                    ? dateEnd.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"Поле обязательно для заполнения\"\r\n        : \"Пожалуйста, введите корректный email\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"Пароль должен состоять из более чем 6 символов\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"Поле обязательно для заполнения\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    axios\r\n      .get(`/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = {};\r\n          tariff.name = {\r\n            value: response.data[item].name,\r\n            validation: {\r\n              required: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.cost = {\r\n            value: response.data[item].cost,\r\n            validation: {\r\n              isNumber: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateStart = {\r\n            value: response.data[item].dateStart,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateEnd = {\r\n            value: response.data[item].dateEnd,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.id = item;\r\n          tariff.tariffValid = true;\r\n          tariff.userId = response.data[item].userId;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: oldData.userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      name: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      cost: {\r\n        value: 0,\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateStart: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateEnd: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newTariff = [...this.state.tariffs];\r\n    let changeIndex = newTariff.findIndex((item) => item.id === id);\r\n\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      newTariff[changeIndex][key].validation\r\n    );\r\n    \r\n    newTariff[changeIndex] = {\r\n      ...this.state.tariffs[changeIndex],\r\n      [key]: {\r\n        ...this.state.tariffs[changeIndex][key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newTariff[changeIndex]);\r\n\r\n    newTariff[changeIndex].tariffValid = formValid;\r\n\r\n    this.setState({ tariffs: newTariff });\r\n  };\r\n\r\n  checkFormValidity = (tariff) => {\r\n    const { name, cost, dateStart, dateEnd } = tariff;\r\n\r\n    if (\r\n      name.valid &&\r\n      cost.valid &&\r\n      dateStart.valid &&\r\n      dateEnd.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            Добавить тариф\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Контакты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Ваша почта\"\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Первичные показатели\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0],\r\n          userId: dataFromDB.userId,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Профиль пользователя\r\n        </Typography>\r\n        {this.state.userId === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccessDone = (token, userId) => {\r\n  return { type: actionTypes.AUTH_SUCCESS, idToken: token, userId: userId };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(loadUserData());\r\n    dispatch(authSuccessDone(token, userId));\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n          .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n        dispatch(loadUserData());\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nexport const AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nexport const AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthButton,\r\n  AuthInput,\r\n  AuthInputPassword,\r\n  AuthAlert,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    auth: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    authValid: false,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state.auth[key].validation);\r\n    let newAuthState = {\r\n      ...this.state.auth,\r\n      [key]: {\r\n        ...this.state.auth[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newAuthState);\r\n\r\n    this.setState({ auth: newAuthState, authValid: formValid });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const { email, password } = stateData;\r\n      if (email.valid && password.valid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newAuthState = {\r\n        ...this.state.auth,\r\n        email: {\r\n          ...this.state.auth.email,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.auth.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ auth: newAuthState });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {  \r\n    this.props.onAuth(this.state.auth.email.value, this.state.auth.password.value);\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.auth;\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n            Система коммунальных показателей\r\n          </Typography>\r\n          {this.props.errorMessage ? (\r\n            <AuthAlert severity=\"error\">{this.props.errorMessage}</AuthAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={!email.valid && email.touched}\r\n            helperText={\r\n              !email.valid && email.touched ? email.errorMessage : null\r\n            }\r\n            onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n            value={email.value}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={!password.valid && password.touched}\r\n            helperText={\r\n              !password.valid && password.touched ? password.errorMessage : null\r\n            }\r\n            onChange={(event) =>\r\n              this.inputHandler(\"password\", event.target.value)\r\n            }\r\n            value={password.value}\r\n          />\r\n          <AuthButton\r\n            onClick={\r\n              this.state.authValid\r\n                ? () => this.formSenderHandler()\r\n                : () => this.checkFormValidity()\r\n            }\r\n          >\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n          <Typography>\r\n            <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n              Еще нет аккаунта? Регистрация\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched\r\n              ? userEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Пароль\"\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete='new-password'\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? password.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Введите персональные данные\",\r\n    \"Введите первичные показатели\",\r\n    \"Проверьте данные\",\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              Персональные данные\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              Первичные показатели\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Регистрация успешно завершена\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              Войти в систему\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Назад\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Готово\" : \"Далее\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from '../../components/Helpers/FormHelper'\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.errorMessage) window.scrollTo(0, 0);\r\n\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ position: \"absolute\", top: \"10px\", right: \"15px\" }}\r\n        >\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Регистрация\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">{this.props.errorMessage}</Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n  \r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email уже существует\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email еще не зарегистрирован\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}