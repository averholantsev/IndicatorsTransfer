{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/IndicatorsInsertForm/Constants.js","components/UI/Switch/Switch.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","components/UI/CardBody/CardBody.js","components/Helpers/FormHelper.js","containers/UsersProfile/UsersProfile.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthAlert.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","width","button","color","grow","list","MenuAppBar","props","classes","sectionTitleName","window","location","hash","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","userDetails","firstName","lastName","aria-controls","aria-haspopup","component","NavLink","to","Drawer","drawer","anchor","open","onClose","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","children","Component","connect","state","instance","axios","create","baseURL","MONTHS_LIST","text","value","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","switchChange","label","IndicatorsInsert","indicators","electricityDay","valid","electricityNight","coldWaterKitchen","coldWaterBathroom","hotWaterKitchen","hotWaterBathroom","monthYear","month","Date","getMonth","year","getFullYear","sendDataToAccountant","modalOpen","addIndicatorHandler","type","updatedCount","updatedIndicators","setState","modalHandlerClose","modalHandlerOpen","event","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","recipient","accountantEmail","address","console","log","emailjs","send","CONFIG","then","response","status","error","sendIndicators","dateOfIndicators","UTC","setUTCHours","toUTCString","electricity","day","night","coldWater","kitchen","bathroom","hotWater","currentDate","today","userId","localStorage","getItem","token","post","history","push","catch","getCurrentMonth","getCurrentYear","currentYear","currentYearList","i","setStateMonth","e","updatedMonth","updatedMonthYear","setStateYear","updatedYear","errorMessage","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","id","align","DialogContent","dividers","spacing","DialogActions","Button","autoFocus","marginBottom","Card","CardContent","FormControl","InputLabel","Select","target","MenuItem","currencySymbol","minimumValue","helperText","textAlign","marginTop","disableElevation","withRouter","display","flexDirection","paragraph","Loader","CircularProgress","buttonClose","right","top","padding","Outlay","indicatorsList","date","costNovogor","indicatorMonth","TableContainer","handleDeleteDialogOpen","disableRipple","disableFocusRipple","Table","TableHead","TableRow","TableCell","TableBody","index","scope","intake","outlay","boxShadow","fontSize","TabUI","React","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","dialogTitle","DialogContentText","dialogContent","handleContinue","OutlayDetails","prevIndicators","tariffs","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","getDataFromFirebase","url_1","url_3","promise1","get","promise2","promise3","Promise","all","values","getUserDetails","data","getListOfTariffs","getListOfIndicators","countOutlay","length","prevIndicatorsData","Object","keys","tariff","sort","a","b","getTime","deleteItemFromIndicators","delete","enqueueSnackbar","preventDuplicate","handleDeleteDialogClose","handleDeleteDialogContinue","removeIndicatorFromState","removeId","newIndicatorsList","filter","newItem","countCostNovogor","indicatorsDate","getDate","find","disposalWater","waterTariff","dateStart","dateEnd","setDate","cost","disposalTariff","toFixed","ё","withSnackbar","margin","cardPadding","paddingBottom","paddingTop","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonSuccess","backgorundColor","TariffCard","disabled","setDisabled","updateItemInTariffs","insertItemToTariffs","updateTariffInState","maximumValue","utils","DateFnsUtils","DatePicker","clearable","format","textFieldMargin","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newState","changeIndex","findIndex","tariffCards","alignContent","wrap","field","buttonPosition","UserCard","userEmail","prevIndicatorsDate","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","TextField","fullWidth","updateUserDataInState","touched","isDisabled","updatePrevIndicatorsInState","_","checkFormValidity","updateUserDetails","CardBody","checkFieldValidity","rules","validation","isValid","required","trim","isEmail","test","isDate","isNumber","isPassord","UsersProfile","userDetailsValid","prevIndicatorsValid","dataFromDB","newUserDetails","userFormData","formValid","newPrevIndicators","authSuccess","idToken","authFail","authLogout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","loadUserData","userIdDb","createStyles","input","WebkitBoxShadow","AuthInput","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","Alert","AuthAlert","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validateFieldsUpdate","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","Link","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","actions","Logout","onLogout","StepOne","autoComplete","StepTwo","stepLabel","wordBreak","backButton","marginRight","instructions","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","registration","RegistrationForm","onRegistration","formId","stateData","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","message","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.2904d1d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon /> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon /> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon /> },\r\n  { name: \"Профиль\", path: \"/profile\", icon: <AccountCircleIcon /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"\";\r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"Показания\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"Расходы\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"Тарифы\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"Профиль\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(sectionTitleName);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:425px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\nrender() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <AppBar userDetails={this.props.userDetails}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} style={{ width: \"100%\" }}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchLabels(props) {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            name={props.label}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport emailjs from \"emailjs-com\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"../../components/UI/Switch/Switch\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: { value: \"\", valid: true },\r\n      electricityNight: { value: \"\", valid: true },\r\n      coldWaterKitchen: { value: \"\", valid: true },\r\n      coldWaterBathroom: { value: \"\", valid: true },\r\n      hotWaterKitchen: { value: \"\", valid: true },\r\n      hotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, value) => {\r\n    //Обновляем показатель\r\n    const updatedCount = value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    console.log(new Date(dateOfIndicators).toUTCString());\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, value) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, value) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  }\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" align=\"center\">\r\n            Проверьте показатели за{\" \"}\r\n            {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n            {this.state.monthYear.year} г.\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                  Электроэнергия\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  День:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.electricityDay.value}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  Ночь:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.electricityNight.value}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                  Кухня\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  Холодная вода:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.coldWaterKitchen.value}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  Горячая вода:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.hotWaterKitchen.value}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                  Ванная\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  Холодная вода:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.coldWaterBathroom.value}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  Горячая вода:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {this.state.indicators.hotWaterBathroom.value}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Switch label=\"Отправить в бухгалтерию\" checked={this.state.sendDataToAccountant} switchChange={this.switchChange}/>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </Button>\r\n            <Button onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Подать показания\r\n        </Typography>\r\n\r\n        <Card className=\"card\">\r\n          <CardContent className=\"cardPadding\">\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Месяц и год\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl style={{ width: \"100%\" }}>\r\n                  <InputLabel>Месяц</InputLabel>\r\n                  <Select\r\n                    value={this.state.monthYear.month || 0}\r\n                    onChange={(event) =>\r\n                      this.setStateMonth(event, event.target.value)\r\n                    }\r\n                  >\r\n                    {MONTHS_LIST.map((item) => (\r\n                      <MenuItem key={item.key} value={item.value}>\r\n                        {item.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl style={{ width: \"100%\" }}>\r\n                  <InputLabel>Год</InputLabel>\r\n                  <Select\r\n                    value={this.state.monthYear.year || 2020}\r\n                    onChange={(event) =>\r\n                      this.setStateYear(event, event.target.value)\r\n                    }\r\n                  >\r\n                    {this.getCurrentYear().map((item) => (\r\n                      <MenuItem key={item.key} value={item.value}>\r\n                        {item.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Электроэнергия\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"День\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.electricityDay.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"electricityDay\", value)\r\n                  }\r\n                  error={!this.state.indicators.electricityDay.valid}\r\n                  helperText={\r\n                    !this.state.indicators.electricityDay.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Ночь\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.electricityNight.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"electricityNight\", value)\r\n                  }\r\n                  error={!this.state.indicators.electricityNight.valid}\r\n                  helperText={\r\n                    !this.state.indicators.electricityNight.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Кухня\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Холодная вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.coldWaterKitchen.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"coldWaterKitchen\", value)\r\n                  }\r\n                  error={!this.state.indicators.coldWaterKitchen.valid}\r\n                  helperText={\r\n                    !this.state.indicators.coldWaterKitchen.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Горячая вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.hotWaterKitchen.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"hotWaterKitchen\", value)\r\n                  }\r\n                  error={!this.state.indicators.hotWaterKitchen.valid}\r\n                  helperText={\r\n                    !this.state.indicators.hotWaterKitchen.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" className=\"headerMargin\">\r\n                  Ванная\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Холодная вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.coldWaterBathroom.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"coldWaterBathroom\", value)\r\n                  }\r\n                  error={!this.state.indicators.coldWaterBathroom.valid}\r\n                  helperText={\r\n                    !this.state.indicators.coldWaterBathroom.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CurrencyTextField\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  label=\"Горячая вода\"\r\n                  currencySymbol=\"\"\r\n                  value={this.state.indicators.hotWaterBathroom.value}\r\n                  minimumValue=\"0\"\r\n                  onChange={(event, value) =>\r\n                    this.addIndicatorHandler(\"hotWaterBathroom\", value)\r\n                  }\r\n                  error={!this.state.indicators.hotWaterBathroom.valid}\r\n                  helperText={\r\n                    !this.state.indicators.hotWaterBathroom.valid\r\n                      ? errorMessage\r\n                      : null\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ textAlign: \"center\", marginTop: \"15px\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={this.modalHandlerOpen}\r\n                >\r\n                  Отправить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root} >\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          Удалить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"Передайте показания\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, попробуйте обновить страницу.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"Эл-я день:\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"Эл-я ночь:\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"Холодная вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"Горячая вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"Водоотведение:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"Эл-я день:\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"Эл-я ночь:\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"Холодная вода:\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"Горячая вода:\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"Водоотведение:\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  // TODO Починить!\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {        \r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >= new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <= new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {          \r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >= new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <= new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    console.log(\r\n      \"Холодная вода: \",\r\n      coldWater,\r\n      \"Горячая вода: \",\r\n      hotWater,\r\n      \"Тариф на воду: \",\r\n      waterTariff,\r\n      \"Водоотведение: \",\r\n      disposalWater,\r\n      \"Тариф на водоотведение: \",\r\n      disposalTariff\r\n    );\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(OutlayDetails);\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    right: \"30px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    axios\r\n      .get(`/tariffs.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = response.data[item];\r\n          tariff.id = item;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost,\r\n      dateEnd: oldData.dateEnd,\r\n      dateStart: oldData.dateStart,\r\n      name: oldData.name,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      cost: 0,\r\n      dateEnd: null,\r\n      dateStart: null,\r\n      name: \"\",\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newState = [...this.state.tariffs];\r\n    let changeIndex = newState.findIndex((item) => item.id === id);\r\n    newState[changeIndex][key] = value;\r\n\r\n    this.setState({ tariffs: newState });\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          ё\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            Добавить тариф\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Контакты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Ваша почта\"\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Первичные показатели\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"Поле обязательно для заполнения\"\r\n        : \"Пожалуйста, введите корректный email\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"Пароль должен состоять из более чем 6 символов\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"Поле обязательно для заполнения\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0]\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Профиль пользователя\r\n        </Typography>\r\n        {this.state.userDetails === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n          .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n        dispatch(loadUserData());\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/UI/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/UI/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/UI/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/UI/AuthComponents/AuthAlert\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false,\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\",\r\n    },\r\n    willSend: true,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors,\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n            Система коммунальных показателей\r\n          </Typography>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n          <Typography>\r\n            <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n              Еще нет аккаунта? Регистрация\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched\r\n              ? userEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Пароль\"\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete='new-password'\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? password.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Введите персональные данные\",\r\n    \"Введите первичные показатели\",\r\n    \"Проверьте данные\",\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              Персональные данные\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              Первичные показатели\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Регистрация успешно завершена\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              Войти в систему\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Назад\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Готово\" : \"Далее\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from '../../components/Helpers/FormHelper'\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ position: \"absolute\", top: \"10px\", right: \"15px\" }}\r\n        >\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Регистрация\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">{this.props.errorMessage}</Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n  \r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email уже существует\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email еще не зарегистрирован\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}