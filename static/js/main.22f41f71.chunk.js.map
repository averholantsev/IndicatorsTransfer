{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/IndicatorsInsertForm/Constants.js","components/Helpers/FormHelper.js","components/UI/Switch/Switch.js","components/IndicatorsInsertForm/DialogCheck.js","components/UI/CardBody/CardBody.js","components/IndicatorsInsertForm/Indicators.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","containers/UsersProfile/UsersProfile.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/AuthComponents/AuthAlert.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["APP_MENU_LIST","name","path","icon","useStyles","makeStyles","theme","root","flexGrow","width","button","color","grow","list","MenuAppBar","props","classes","sectionTitleName","window","location","hash","useState","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","className","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Typography","variant","userDetails","firstName","lastName","aria-controls","aria-haspopup","component","NavLink","to","Drawer","drawer","anchor","open","onClose","List","map","item","ListItem","key","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","children","Component","connect","state","instance","axios","create","baseURL","MONTHS_LIST","text","value","checkFieldValidity","rules","validation","isValid","errorMessage","required","trim","isEmail","test","isDate","isNumber","isPassord","length","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","switchChange","label","DialogCheck","Dialog","modalOpen","modalHandlerClose","maxWidth","DialogTitle","align","monthYear","month","year","DialogContent","dividers","spacing","indicators","electricityDay","electricityNight","coldWaterKitchen","hotWaterKitchen","coldWaterBathroom","hotWaterBathroom","sendDataToAccountant","DialogActions","Button","sendIndicators","autoFocus","margin","cardPadding","padding","CardBody","Card","CardContent","Indicators","FormControl","InputLabel","Select","event","setStateMonthYear","target","MenuItem","getCurrentYear","currencySymbol","minimumValue","updateIndicatorsInState","error","valid","touched","helperText","textAlign","marginTop","disableElevation","indicatorsValid","modalHandlerOpen","checkFormValidity","IndicatorsInsert","Date","getMonth","getFullYear","newIndicators","formValid","setState","stateData","console","log","ind","preventDefault","updatedIndicators","sendEmailHandler","templateParams","recipient","accountantEmail","address","emailjs","send","CONFIG","then","response","status","dateOfIndicators","UTC","setUTCHours","electricity","day","night","coldWater","kitchen","bathroom","hotWater","currentDate","today","toUTCString","userId","localStorage","getItem","token","post","history","push","catch","getCurrentMonth","currentYear","currentYearList","i","updatedMonthYear","withRouter","display","flexDirection","paragraph","Loader","CircularProgress","buttonClose","right","top","buttonSend","left","Outlay","indicatorsList","id","date","costNovogor","indicatorMonth","TableContainer","handleSendDialogOpen","disableRipple","disableFocusRipple","handleDeleteDialogOpen","Table","TableHead","TableRow","TableCell","TableBody","index","scope","intake","outlay","boxShadow","fontSize","TabUI","React","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","aria-labelledby","aria-describedby","dialogTitle","DialogContentText","dialogContent","handleContinue","activeButtonName","OutlayDetails","prevIndicators","tariffs","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","sendDialogOpen","sendIndicatorId","getDataFromFirebase","url_1","url_2","url_3","promise1","get","promise2","promise3","Promise","all","values","getUserDetails","data","getListOfTariffs","getListOfIndicators","countOutlay","prevIndicatorsData","Object","keys","tariff","sort","a","b","getTime","indicator","getOneIndicator","enqueueSnackbar","preventDuplicate","find","deleteItemFromIndicators","delete","removeIndicatorFromState","removeId","newIndicatorsList","filter","handleDeleteDialogClose","handleDeleteDialogContinue","handleSendDialogClose","handleSendDialogContinue","newItem","countCostNovogor","indicatorsDate","getDate","e","disposalWater","waterTariff","dateStart","dateEnd","setDate","cost","disposalTariff","toFixed","withSnackbar","paddingBottom","paddingTop","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonIconSuccessDisabled","buttonSuccess","backgorundColor","TariffCard","tariffValid","disabled","setDisabled","updateItemInTariffs","insertItemToTariffs","updateTariffInState","FormHelperText","maximumValue","utils","DateFnsUtils","DatePicker","clearable","format","textFieldMargin","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newTariff","changeIndex","findIndex","tariffCards","marginBottom","alignContent","wrap","field","buttonPosition","UserCard","userEmail","prevIndicatorsDate","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","TextField","fullWidth","updateUserDataInState","isDisabled","updatePrevIndicatorsInState","_","updateUserDetails","UsersProfile","userDetailsValid","prevIndicatorsValid","dataFromDB","newUserDetails","userFormData","newPrevIndicators","authSuccess","dispatch","loadUserData","type","idToken","authSuccessDone","authFail","authLogout","removeItem","checkAuthTimeout","expirationTime","setTimeout","userIdDb","CSSAlert","withStyles","Alert","AuthAlert","CSSButton","textTransform","AuthButton","createStyles","input","WebkitBoxShadow","AuthInput","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","AuthForm","auth","email","password","authValid","inputHandler","newAuthState","formSenderHandler","onAuth","severity","Link","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","actions","Logout","onLogout","StepOne","autoComplete","StepTwo","stepLabel","wordBreak","backButton","marginRight","instructions","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","registration","RegistrationForm","onRegistration","formId","scrollTo","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","message","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.22f41f71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"Показания\", path: \"/send-indicators\", icon: <ListAltIcon /> },\r\n  { name: \"Расходы\", path: \"/outlay\", icon: <EventNoteIcon /> },\r\n  { name: \"Тарифы\", path: \"/tariffs\", icon: <MonetizationOnIcon /> },\r\n  { name: \"Профиль\", path: \"/profile\", icon: <AccountCircleIcon /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"Показания\";  \r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"Показания\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"Расходы\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"Тарифы\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"Профиль\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(sectionTitleName);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:425px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\" \r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(item.name);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\nrender() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <AppBar userDetails={this.props.userDetails}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} style={{ width: \"100%\" }}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"Поле обязательно для заполнения\"\r\n        : \"Пожалуйста, введите корректный email\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"Поле обязательно для заполнения\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"Пароль должен состоять из более чем 6 символов\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"Поле обязательно для заполнения\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n}","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchLabels(props) {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            name={props.label}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst DialogCheck = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.modalOpen}\r\n      onClose={props.modalHandlerClose}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle align=\"center\">\r\n        Проверьте показатели за {MONTHS_LIST[props.monthYear.month].text}{\" \"}\r\n        {props.monthYear.year} г.\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Электроэнергия\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              День:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityDay.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Ночь:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityNight.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Кухня\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Ванная\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Холодная вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Горячая вода:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Switch\r\n              label=\"Отправить в бухгалтерию\"\r\n              checked={props.sendDataToAccountant}\r\n              switchChange={props.switchChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.modalHandlerClose} color=\"secondary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.sendIndicators} color=\"primary\" autoFocus>\r\n          Отправить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogCheck;\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\nconst Indicators = (props) => {\r\n  const {\r\n    electricityDay,\r\n    electricityNight,\r\n    coldWaterKitchen,\r\n    coldWaterBathroom,\r\n    hotWaterKitchen,\r\n    hotWaterBathroom,\r\n  } = props.indicators;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Месяц и год\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Месяц</InputLabel>\r\n          <Select\r\n            value={props.monthYear.month || 0}\r\n            onChange={(event) => props.setStateMonthYear(\"month\", event.target.value)}\r\n          >\r\n            {MONTHS_LIST.map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>Год</InputLabel>\r\n          <Select\r\n            value={props.monthYear.year || 2020}\r\n            onChange={(event) => props.setStateMonthYear(\"year\", event.target.value)}\r\n          >\r\n            {props.getCurrentYear().map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Электроэнергия\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? electricityDay.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? electricityNight.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Кухня\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={coldWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterKitchen\", value)\r\n          }\r\n          error={!coldWaterKitchen.valid && coldWaterKitchen.touched}\r\n          helperText={\r\n            !coldWaterKitchen.valid && coldWaterKitchen.touched ? coldWaterKitchen.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={hotWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterKitchen\", value)\r\n          }\r\n          error={!hotWaterKitchen.valid && hotWaterKitchen.touched}\r\n          helperText={\r\n            !hotWaterKitchen.valid && hotWaterKitchen.touched ? hotWaterKitchen.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          Ванная\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={coldWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterBathroom\", value)\r\n          }\r\n          error={!coldWaterBathroom.valid && coldWaterBathroom.touched}\r\n          helperText={\r\n            !coldWaterBathroom.valid && coldWaterBathroom.touched ? coldWaterBathroom.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label=\"Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={hotWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterBathroom\", value)\r\n          }\r\n          error={!hotWaterBathroom.valid && hotWaterBathroom.touched}\r\n          helperText={\r\n            !hotWaterBathroom.valid && hotWaterBathroom.touched ? hotWaterBathroom.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={props.indicatorsValid ? props.modalHandlerOpen : () => props.checkFormValidity()}\r\n        >\r\n          Отправить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport \"./IndicatorsInsert.css\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport DialogCheck from \"../../components/IndicatorsInsertForm/DialogCheck\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Indicators from \"../../components/IndicatorsInsertForm/Indicators\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    indicatorsValid: false,\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  updateIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.indicators[key].validation\r\n    );\r\n    let newIndicators = {\r\n      ...this.state.indicators,\r\n      [key]: {\r\n        ...this.state.indicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newIndicators);\r\n\r\n    this.setState({\r\n      indicators: newIndicators,\r\n      indicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    console.log(typeof stateData);\r\n\r\n    if (typeof stateData !== \"undefined\") {\r\n      const {\r\n        electricityDay,\r\n        electricityNight,\r\n        coldWaterKitchen,\r\n        coldWaterBathroom,\r\n        hotWaterKitchen,\r\n        hotWaterBathroom,\r\n      } = stateData;\r\n\r\n      if (\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        coldWaterKitchen.valid &&\r\n        coldWaterBathroom.valid &&\r\n        hotWaterKitchen.valid &&\r\n        hotWaterBathroom.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newIndicators = {\r\n        ...this.state.indicators,\r\n        electricityDay: {\r\n          ...this.state.indicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.indicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        coldWaterKitchen: {\r\n          ...this.state.indicators.coldWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        coldWaterBathroom: {\r\n          ...this.state.indicators.coldWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        hotWaterKitchen: {\r\n          ...this.state.indicators.hotWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        hotWaterBathroom: {\r\n          ...this.state.indicators.hotWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ indicators: newIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonthYear = (key, value) => {\r\n    const updatedMonthYear = { \r\n      ...this.state.monthYear,\r\n      [key]: value\r\n    };\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DialogCheck\r\n          indicators={this.state.indicators}\r\n          monthYear={this.state.monthYear}\r\n          modalOpen={this.state.modalOpen}\r\n          sendDataToAccountant={this.state.sendDataToAccountant}\r\n          switchChange={this.switchChange}\r\n          modalHandlerClose={this.modalHandlerClose}\r\n          sendIndicators={this.sendIndicators}\r\n        />\r\n\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Подать показания\r\n        </Typography>\r\n\r\n        <CardBody>\r\n          <Indicators\r\n            indicators={this.state.indicators}\r\n            monthYear={this.state.monthYear}\r\n            indicatorsValid={this.state.indicatorsValid}\r\n            setStateMonthYear={this.setStateMonthYear}\r\n            getCurrentYear={this.getCurrentYear}\r\n            updateIndicatorsInState={this.updateIndicatorsInState}\r\n            modalHandlerOpen={this.modalHandlerOpen}\r\n            checkFormValidity={this.checkFormValidity}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}>Загрузка</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n  buttonSend: {\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root} >\r\n      <IconButton\r\n        className={classes.buttonSend}\r\n        aria-label=\"Отправить\"\r\n        component=\"span\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.handleSendDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <EmailIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {props.dialogTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        {props.dialogContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          Отмена\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          {props.activeButtonName}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport emailjs from \"emailjs-com\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n    sendDialogOpen: false,\r\n    sendIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"Передайте показания\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, попробуйте обновить страницу.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"Эл-я день:\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"Эл-я ночь:\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"Холодная вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"Горячая вода:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"Водоотведение:\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        year: data[key].currentDate.year,\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"Эл-я день:\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"Эл-я ночь:\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"Холодная вода:\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n            bathroom: data[key].coldWater.bathroom,\r\n            kitchen: data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"Горячая вода:\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n            bathroom: data[key].hotWater.bathroom,\r\n            kitchen: data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"Водоотведение:\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    const indicator = this.getOneIndicator();\r\n\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[new Date(indicator.date).getMonth()].text,\r\n      year: indicator.year,\r\n      electricityDay: indicator.indicators[0].intake,\r\n      electricityNight: indicator.indicators[1].intake,\r\n      coldWaterKitchen: indicator.indicators[2].kitchen,\r\n      coldWaterBathroom: indicator.indicators[2].bathroom,\r\n      hotWaterKitchen: indicator.indicators[3].kitchen,\r\n      hotWaterBathroom: indicator.indicators[3].bathroom,\r\n    };\r\n    \r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          this.props.enqueueSnackbar(\"Данные успешно переданы на почту!\", {\r\n            variant: \"success\",\r\n            preventDuplicate: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getOneIndicator = () => {\r\n    let oneIndicator = this.state.indicatorsList.find(\r\n      ({ id }) => id === this.state.sendIndicatorId\r\n    );\r\n    return oneIndicator;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  handleSendDialogOpen = (id) => {\r\n    this.setState({ sendDialogOpen: true, sendIndicatorId: id });\r\n  };\r\n\r\n  handleSendDialogClose = () => {\r\n    this.setState({ sendDialogOpen: false });\r\n  };\r\n\r\n  handleSendDialogContinue = () => {\r\n    this.sendEmailHandler();\r\n    this.handleSendDialogClose();\r\n  };\r\n\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n            new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n            new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n              handleSendDialogOpen={this.handleSendDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p\r\n            style={{ textAlign: \"center\" }}\r\n          >{`Нет данных на ${this.state.currentYear} год`}</p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.sendDialogOpen}\r\n          handleClose={this.handleSendDialogClose}\r\n          handleContinue={this.handleSendDialogContinue}\r\n          dialogTitle=\"Отправка показателей\"\r\n          dialogContent=\"Вы уверены, что хотите отправить показатели на адрес электронной почты бухгалтерии?\"\r\n          activeButtonName=\"Отправить\"\r\n        />\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withSnackbar(connect(mapStateToProps)(OutlayDetails));\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"35px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonIconSuccessDisabled: {\r\n    color: \"#9E9E9E\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart, tariffValid } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          aria-label=\"Изменить\"\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          aria-label=\"Сохранить\"\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          disabled={!tariffValid}\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <SaveIcon className={!tariffValid ? classes.buttonIconSuccessDisabled : classes.buttonIconSuccess} />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label=\"Удалить\"\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>Наименование</InputLabel>\r\n              <Select\r\n                value={name.value}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n                error={!name.valid && name.touched}\r\n              >\r\n                <MenuItem value={\"water\"}>Подача воды</MenuItem>\r\n                <MenuItem value={\"hot_water\"}>Подогрев воды</MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>Водоотведение</MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>Электро-ия. день</MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  Электро-ия. ночь\r\n                </MenuItem>\r\n              </Select>\r\n              {!name.valid && name.touched ? (\r\n                <FormHelperText>{name.errorMessage}</FormHelperText>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label=\"Тариф\"\r\n              currencySymbol=\"₽\"\r\n              value={cost.value}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n              error={!cost.valid && cost.touched}\r\n              helperText={\r\n                !cost.valid && cost.touched ? cost.errorMessage : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен c\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart.value}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n                error={!dateStart.valid && dateStart.touched}\r\n                helperText={\r\n                  !dateStart.valid && dateStart.touched\r\n                    ? dateStart.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label=\"Действителен по\"\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd.value}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n                error={!dateEnd.valid && dateEnd.touched}\r\n                helperText={\r\n                  !dateEnd.valid && dateEnd.touched\r\n                    ? dateEnd.errorMessage\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    axios\r\n      .get(`/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let tariffs = Object.keys(response.data).map((item) => {\r\n          let tariff = {};\r\n          tariff.name = {\r\n            value: response.data[item].name,\r\n            validation: {\r\n              required: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.cost = {\r\n            value: response.data[item].cost,\r\n            validation: {\r\n              isNumber: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateStart = {\r\n            value: response.data[item].dateStart,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.dateEnd = {\r\n            value: response.data[item].dateEnd,\r\n            validation: {\r\n              isDate: true,\r\n            },\r\n            valid: true,\r\n            errorMessage: \"\",\r\n            touched: true,\r\n          };\r\n          tariff.id = item;\r\n          tariff.tariffValid = true;\r\n          tariff.userId = response.data[item].userId;\r\n          return tariff;\r\n        });\r\n        this.setState({ tariffs: tariffs });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(\"Объект успешно удален!\", {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: oldData.userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      name: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      cost: {\r\n        value: 0,\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateStart: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateEnd: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newTariff = [...this.state.tariffs];\r\n    let changeIndex = newTariff.findIndex((item) => item.id === id);\r\n\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      newTariff[changeIndex][key].validation\r\n    );\r\n    \r\n    newTariff[changeIndex] = {\r\n      ...this.state.tariffs[changeIndex],\r\n      [key]: {\r\n        ...this.state.tariffs[changeIndex][key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newTariff[changeIndex]);\r\n\r\n    newTariff[changeIndex].tariffValid = formValid;\r\n\r\n    this.setState({ tariffs: newTariff });\r\n  };\r\n\r\n  checkFormValidity = (tariff) => {\r\n    const { name, cost, dateStart, dateEnd } = tariff;\r\n\r\n    if (\r\n      name.valid &&\r\n      cost.valid &&\r\n      dateStart.valid &&\r\n      dateEnd.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0) tariffCards = <Loader />;\r\n    else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"Вы уверены?\"\r\n          dialogContent=\"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\"\r\n          activeButtonName=\"Удалить\"\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Тарифы\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            Добавить тариф\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Контакты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Ваша почта\"\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          Первичные показатели\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0],\r\n          userId: dataFromDB.userId,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(\"Данные успешно сохранены!\", {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Профиль пользователя\r\n        </Typography>\r\n        {this.state.userId === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccessDone = (token, userId) => {\r\n  return { type: actionTypes.AUTH_SUCCESS, idToken: token, userId: userId };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(loadUserData());\r\n    dispatch(authSuccessDone(token, userId));\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n          .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nexport const AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nexport const AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthButton,\r\n  AuthInput,\r\n  AuthInputPassword,\r\n  AuthAlert,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    auth: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    authValid: false,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state.auth[key].validation);\r\n    let newAuthState = {\r\n      ...this.state.auth,\r\n      [key]: {\r\n        ...this.state.auth[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newAuthState);\r\n\r\n    this.setState({ auth: newAuthState, authValid: formValid });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const { email, password } = stateData;\r\n      if (email.valid && password.valid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newAuthState = {\r\n        ...this.state.auth,\r\n        email: {\r\n          ...this.state.auth.email,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.auth.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ auth: newAuthState });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {  \r\n    this.props.onAuth(this.state.auth.email.value, this.state.auth.password.value);\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.auth;\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n            Система коммунальных показателей\r\n          </Typography>\r\n          {this.props.errorMessage ? (\r\n            <AuthAlert severity=\"error\">{this.props.errorMessage}</AuthAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={!email.valid && email.touched}\r\n            helperText={\r\n              !email.valid && email.touched ? email.errorMessage : null\r\n            }\r\n            onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n            value={email.value}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={!password.valid && password.touched}\r\n            helperText={\r\n              !password.valid && password.touched ? password.errorMessage : null\r\n            }\r\n            onChange={(event) =>\r\n              this.inputHandler(\"password\", event.target.value)\r\n            }\r\n            value={password.value}\r\n          />\r\n          <AuthButton\r\n            onClick={\r\n              this.state.authValid\r\n                ? () => this.formSenderHandler()\r\n                : () => this.checkFormValidity()\r\n            }\r\n          >\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n          <Typography>\r\n            <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n              Еще нет аккаунта? Регистрация\r\n            </Link>\r\n          </Typography>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched\r\n              ? userEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Пароль\"\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete='new-password'\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? password.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Имя\"\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched\r\n              ? firstName.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Фамилия\"\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? lastName.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Адрес\"\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? address.errorMessage : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Почта бухгалтерии\"\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? accountantEmail.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label=\"Дата первичных показателей\"\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched\r\n                ? prevIndicatorsDate.errorMessage\r\n                : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: День\"\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched\r\n              ? electricityDay.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Электроэнергия: Ночь\"\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched\r\n              ? electricityNight.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched\r\n              ? kitchenColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Кухня: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched\r\n              ? kitchenHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Холодная вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched\r\n              ? bathroomColdWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label=\"Ванная: Горячая вода\"\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched\r\n              ? bathroomHotWater.errorMessage\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Введите персональные данные\",\r\n    \"Введите первичные показатели\",\r\n    \"Проверьте данные\",\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              Персональные данные\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              Первичные показатели\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Регистрация успешно завершена\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              Войти в систему\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Назад\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Готово\" : \"Далее\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"Поле обязательно для заполнения\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    if (this.props.errorMessage) window.scrollTo(0, 0);\r\n\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{ position: \"absolute\", top: \"10px\", right: \"15px\" }}\r\n        >\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Регистрация\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">{this.props.errorMessage}</Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n  \r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email уже существует\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"Пользователь с таким Email еще не зарегистрирован\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}