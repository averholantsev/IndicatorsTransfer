{"version":3,"sources":["axios-main.js","store/actions/auth.js","store/actions/actionTypes.js","components/Languages/Dictionaries/index.js","components/Languages/Dictionaries/ru.js","components/Languages/Dictionaries/en.js","components/Languages/Language.js","components/Languages/LanguageSelector.js","components/UI/Text/Text.js","components/Navigation/AppBar.js","hoc/Layout/Layout.js","components/Helpers/FormHelper.js","components/UI/AuthComponents/AuthAlert.js","components/UI/AuthComponents/AuthButton.js","components/UI/AuthComponents/AuthInput.js","components/UI/AuthComponents/AuthInputPassword.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","components/UI/CardBody/CardBody.js","components/Registration/StepOne.js","components/Registration/StepTwo.js","components/Registration/RegistrationStepper.js","containers/RegistrationForm/RegistrationForm.js","containers/ForgotPassword/ForgotPassword.js","components/IndicatorsInsertForm/Constants.js","components/UI/Switch/Switch.js","components/IndicatorsInsertForm/DialogCheck.js","components/IndicatorsInsertForm/Indicators.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/UI/Loader/Loader.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","components/UI/DialogSimple/DialogSimple.js","containers/OutlayDetails/OutlayDetails.js","components/TariffCard/TariffCard.js","containers/Tariffs/Tariffs.js","components/UserCard/UserCard.js","containers/UsersProfile/UsersProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["instance","axios","create","baseURL","authSuccess","token","userId","dispatch","loadUserData","type","idToken","authSuccessDone","authFail","error","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","getItem","get","then","response","console","log","userDetails","prevIndicators","userIdDb","dataFromDB","data","Object","keys","catch","dictionaryList","ru","authEmail","authPassword","authSignIn","authSignUp","authForgotPassword","authPasswordRecovery","authEmailSent","authEmailSentText1","authEmailSentText2","authReturn","authSignInShort","emailNotReg","authError","authErrorEmailExist","authErrorEmailNotReg","authErrorInvalidPassword","authErrorOther","registration","regEnterUserDetails","regEnterPrevIndicators","regValidateData","regUserDetails","regPrevIndicators","regSuccess","indications","expenses","tariffs","profile","sendIndicators","sendIndicatorsMonthYear","sendIndicatorsMonth","sendIndicatorsYear","sendIndicatorsElectricity","sendIndicatorsDay","sendIndicatorsNight","sendIndicatorsKitchen","sendIndicatorsBathroom","sendIndicatorsColdWater","sendIndicatorsHotWater","dialogCheckTitle","switchMail","outlayCurrentExpenditure","outlayIndicator","outlayCharge","outlayConsumption","outlayCost","outlayElectricityDay","outlayElectricityNight","outlayColdWater","outlayHotWater","outlayDisposalWater","outlayWaterSupply","outlayElectricity","outlaySendDialogTitle","outlaySendDialogContent","outlayDeleteDialogTitle","outlayDeleteDialogContent","outlayNoData","outlayNoDataYear","outlayErrorNotYetSend","outlaySendSuccess","addTariff","tariffName","tariffCost","tariffDateStart","tariffDateEnd","tariffWater","tariffHotWater","tariffDisposalWater","tariffElectricityDay","tariffElectricityNight","tariffErrorNotYetSend","userProfile","contacts","firstName","lastName","address","userEmail","accountantEmail","primaryIndicators","prevIndicatorsDate","electricityDay","electricityNight","kitchenColdWater","kitchenHotWater","bathroomColdWater","bathroomHotWater","systemName","save","send","delete","cancel","recover","loading","saveData","objectDeleted","prev","next","finish","requiredField","unvalidEmail","unvalidPassword","responseError","january","february","march","april","may","june","july","august","september","october","november","december","year","notDefined","en","languageOptions","id","text","languageIndex","undefined","LanguageContext","createContext","language","dictionary","LanguageProvider","props","languageContext","useContext","useState","setLanguage","setDictionary","provider","selectedLanguage","Provider","value","children","useStyles","makeStyles","rootLight","paddingTop","marginRight","display","color","backgroundColor","selectLight","rootDark","selectDark","LanguageSelector","classes","FormControl","className","theme","Select","onChange","event","find","item","target","setItem","indexOf","map","MenuItem","key","Text","tid","APP_MENU_LIST","name","path","icon","ListAlt","EventNote","MonetizationOn","AccountCircle","root","flexGrow","width","button","grow","list","MenuAppBar","sectionTitleName","window","location","hash","sectionTitle","setSectionTitle","openDrawer","setOpenDrawer","titleShow","useMediaQuery","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","onClick","Menu","Typography","variant","aria-controls","aria-haspopup","component","NavLink","to","ExitToApp","Drawer","drawer","anchor","open","onClose","List","ListItem","ListItemIcon","ListItemText","primary","Layout","Grid","container","direction","justify","alignItems","this","isAuth","xs","style","Paper","Component","connect","state","checkFieldValidity","rules","validation","isValid","errorMessage","required","trim","isEmail","test","isDate","isNumber","isPassord","length","CSSAlert","withStyles","marginBottom","Alert","AuthAlert","CSSButton","textTransform","margin","Button","AuthButton","createStyles","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","React","showPassword","setState","InputProps","endAdornment","InputAdornment","AuthForm","auth","email","valid","touched","password","authValid","inputHandler","newAuthState","formValid","checkFormValidity","stateData","formSenderHandler","onAuth","top","right","align","severity","label","helperText","spacing","Link","authData","returnSecureToken","url","CONFIG","AUTH_API_KEY","post","expirationDate","Date","getTime","expiresIn","localId","actions","Logout","onLogout","history","cardPadding","padding","CardBody","Card","CardContent","StepOne","disabled","isDisabled","autoComplete","fullWidth","updateUserDataInState","field","StepTwo","utils","DateFnsUtils","DatePicker","clearable","format","date","updatePrevIndicatorsInState","currencySymbol","minimumValue","_","stepLabel","wordBreak","backButton","instructions","marginTop","RegistrationStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","prevActiveStep","userDetailsValid","prevIndicatorsValid","RegistrationForm","userFormData","electricity","day","night","kitchen","coldWater","hotWater","bathroom","onRegistration","newUserDetails","newPrevIndicators","formId","scrollTo","fontSize","ForgotPassword","emailSend","newItem","sendPasswordRecovery","body","requestType","message","enterEmail","information","MONTHS_LIST","SwitchLabels","FormGroup","row","FormControlLabel","control","Switch","checked","switchChange","DialogCheck","Dialog","modalOpen","modalHandlerClose","maxWidth","DialogTitle","monthYear","month","DialogContent","dividers","indicators","coldWaterKitchen","hotWaterKitchen","coldWaterBathroom","hotWaterBathroom","sendDataToAccountant","DialogActions","autoFocus","Indicators","InputLabel","setStateMonthYear","getCurrentYear","updateIndicatorsInState","textAlign","disableElevation","indicatorsValid","modalHandlerOpen","IndicatorsInsert","getMonth","getFullYear","newIndicators","ind","preventDefault","updatedIndicators","sendEmailHandler","templateParams","recipient","emailjs","status","dateOfIndicators","UTC","setUTCHours","currentDate","today","toUTCString","push","getCurrentMonth","currentYear","currentYearList","i","updatedMonthYear","withRouter","flexDirection","paragraph","Loader","CircularProgress","buttonClose","buttonSend","left","Outlay","indicatorsList","costWaterSupply","costElectricity","indicatorMonth","TableContainer","handleSendDialogOpen","disableRipple","disableFocusRipple","Email","handleDeleteDialogOpen","Close","Table","TableHead","TableRow","TableCell","TableBody","index","scope","intake","outlay","colSpan","boxShadow","TabUI","setValue","Tabs","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","DialogSimple","handleClose","aria-labelledby","aria-describedby","dialogTitle","DialogContentText","dialogContent","handleContinue","activeButtonName","OutlayDetails","getUTCFullYear","deleteDialogOpen","deleteIndicatorId","sendDialogOpen","sendIndicatorId","getDataFromFirebase","url_1","url_2","url_3","promise1","promise2","promise3","Promise","all","values","getUserDetails","getListOfTariffs","getListOfIndicators","countOutlay","prevIndicatorsData","tariff","sort","a","b","indicator","getOneIndicator","enqueueSnackbar","preventDuplicate","deleteItemFromIndicators","removeIndicatorFromState","removeId","newIndicatorsList","filter","handleDeleteDialogClose","handleDeleteDialogContinue","handleSendDialogClose","handleSendDialogContinue","countCostElectricity","indicatorsDate","getDate","e","electricityDayTariff","dateStart","dateEnd","setDate","cost","electricityNightTariff","toFixed","countCostWaterSupply","disposalWater","waterTariff","disposalTariff","withSnackbar","paddingBottom","textField","selectPadding","flexBasis","buttonEdit","buttonIconSuccess","buttonIconSuccessDisabled","buttonSuccess","backgorundColor","TariffCard","tariffValid","setDisabled","Edit","updateItemInTariffs","insertItemToTariffs","Save","updateTariffInState","FormHelperText","maximumValue","textFieldMargin","Tariffs","deleteTariffId","addButtonDisabled","deleteItemFromTariffs","oldData","newData","patch","removeTariffFromState","addTariffToState","newTariffsList","unshift","newTariff","changeIndex","findIndex","tariffCards","alignContent","wrap","buttonPosition","UserCard","updateUserDetails","UsersProfile","App","onTryAutoSignup","routes","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","code","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","maxSnack","anchorOrigin","vertical","horizontal","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.5bb07041.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccessDone = (token, userId) => {\r\n  return { type: actionTypes.AUTH_SUCCESS, idToken: token, userId: userId };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(loadUserData());\r\n    dispatch(authSuccessDone(token, userId));\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const registration = (email, password, userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        userFormData[\"userId\"] = response.data.localId;\r\n        axios\r\n          .post(`/users.json?auth=${response.data.idToken}`, userFormData)\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataSuccess = (userDetails, prevIndicators, userIdDb) => {\r\n  return {\r\n    type: actionTypes.LOAD_USERDATA_SUCCESS,\r\n    userDetails: userDetails,\r\n    prevIndicators: prevIndicators,\r\n    userIdDb: userIdDb,\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n\r\n        dispatch(\r\n          loadUserDataSuccess(\r\n            dataFromDB.userDetails,\r\n            dataFromDB.prevIndicators,\r\n            Object.keys(response.data)[0]\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const LOAD_USERDATA_SUCCESS = \"LOAD_USERDATA_SUCCESS\";\r\n","import ru from \"./ru\";\r\nimport en from \"./en\";\r\n\r\nexport const dictionaryList = {\r\n  ru,\r\n  en,\r\n};\r\n\r\nexport const languageOptions = [\r\n  { id: \"ru\", text: \"Русский\" },\r\n  { id: \"en\", text: \"English\" },\r\n];\r\n","const ru = {\r\n  // Форма входа\r\n  authEmail: \"Почта\",\r\n  authPassword: \"Пароль\",\r\n  authSignIn: \"Войти в аккаунт\",\r\n  authSignUp: \"Еще нет аккаунта? Регистрация\",\r\n  authForgotPassword: \"Забыли пароль?\",\r\n  authPasswordRecovery:\r\n    \"Для восстановления пароля введите ваш адрес электронной почты и вам будет отправлено письмо с дальнейшими инструкциями.\",\r\n  authEmailSent: \"Письмо отправлено!\",\r\n  authEmailSentText1: \"Вам было отправлено письмо на адрес электронной почты\",\r\n  authEmailSentText2:\r\n    \"с дальнейшими инструкциями. Пожалуйста проверьте ваш почтовый ящик.\",\r\n  authReturn: \"Вернутся на Форму входа\",\r\n  authSignInShort: \"Войти\",\r\n  emailNotReg: \"Данный email не зарегистрирован\",\r\n  authError: \"Ошибка авторизации, проверьте данные и повторите попытку\",\r\n  authErrorEmailExist: \"Пользователь с таким Email уже существует\",\r\n  authErrorEmailNotReg: \"Пользователь с таким Email еще не зарегистрирован\",\r\n  authErrorInvalidPassword: \"Не правильно указан пароль\",\r\n  authErrorOther: \"Произошла ошибка, попробуйте повторите попытку позднее\",\r\n\r\n  // Форма регистрации\r\n  registration: \"Регистрация\",\r\n  regEnterUserDetails: \"Введите персональные данные\",\r\n  regEnterPrevIndicators: \"Введите первичные показатели\",\r\n  regValidateData: \"Проверьте данные\",\r\n  regUserDetails: \"Персональные данные\",\r\n  regPrevIndicators: \"Первичные показатели\",\r\n  regSuccess: \"Регистрация успешно завершена\",\r\n\r\n  // Навигация\r\n  indications: \"Показания\",\r\n  expenses: \"Расходы\",\r\n  tariffs: \"Тарифы\",\r\n  profile: \"Профиль\",\r\n\r\n  // Форма подачи показаний\r\n  sendIndicators: \"Подать показания\",\r\n  sendIndicatorsMonthYear: \"Месяц и год\",\r\n  sendIndicatorsMonth: \"Месяц\",\r\n  sendIndicatorsYear: \"Год\",\r\n  sendIndicatorsElectricity: \"Электроэнергия\",\r\n  sendIndicatorsDay: \"День\",\r\n  sendIndicatorsNight: \"Ночь\",\r\n  sendIndicatorsKitchen: \"Кухня\",\r\n  sendIndicatorsBathroom: \"Ванная\",\r\n  sendIndicatorsColdWater: \"Холодная вода\",\r\n  sendIndicatorsHotWater: \"Холодная вода\",\r\n  dialogCheckTitle: \"Проверьте показатели за\",\r\n  switchMail: \"Отправить в бухгалтерию\",\r\n\r\n  // Форма показателей\r\n  outlayCurrentExpenditure: \"Текущие расходы\",\r\n  outlayIndicator: \"Показатель\",\r\n  outlayCharge: \"Расход\",\r\n  outlayConsumption: \"Потребление\",\r\n  outlayCost: \"Расчет стоимости\",\r\n  outlayElectricityDay: \"Эл-я день:\",\r\n  outlayElectricityNight: \"Эл-я ночь:\",\r\n  outlayColdWater: \"Холодная вода:\",\r\n  outlayHotWater: \"Горячая вода:\",\r\n  outlayDisposalWater: \"Водоотведение:\",\r\n  outlayWaterSupply: \"Водоснабжение\",\r\n  outlayElectricity: \"Электроэнергия\",\r\n  outlaySendDialogTitle: \"Отправка показателей\",\r\n  outlaySendDialogContent:\r\n    \"Вы уверены, что хотите отправить показатели на адрес электронной почты бухгалтерии?\",\r\n  outlayDeleteDialogTitle: \"Вы уверены?\",\r\n  outlayDeleteDialogContent:\r\n    \"Вы уверены, что хотите удалить данный объект? Этот процесс нельзя будет отменить.\",\r\n  outlayNoData: \"Нет данных на за\",\r\n  outlayNoDataYear: \"год\",\r\n  outlayErrorNotYetSend: \"Показания еще не переданы\",\r\n  outlaySendSuccess: \"Данные успешно переданы на почту бухгалтерии!\",\r\n\r\n  // Форма тарифов\r\n  addTariff: \"Добавить тариф\",\r\n  tariffName: \"Наименование\",\r\n  tariffCost: \"Стоимость\",\r\n  tariffDateStart: \"Действителен c\",\r\n  tariffDateEnd: \"Действителен по\",\r\n  tariffWater: \"Подача воды\",\r\n  tariffHotWater: \"Подогрев воды\",\r\n  tariffDisposalWater: \"Водоотведение\",\r\n  tariffElectricityDay: \"Электро-ия. день\",\r\n  tariffElectricityNight: \"Электро-ия. ночь\",\r\n  tariffErrorNotYetSend: \"Тарифы еще не созданы\",\r\n\r\n  // Форма профиля пользователя\r\n  userProfile: \"Профиль пользователя\",\r\n  contacts: \"Контакты\",\r\n  firstName: \"Имя\",\r\n  lastName: \"Фамилия\",\r\n  address: \"Адрес\",\r\n  userEmail: \"Ваша почта\",\r\n  accountantEmail: \"Почта бухгалтерии\",\r\n  primaryIndicators: \"Первичные показатели\",\r\n  prevIndicatorsDate: \"Дата первичных показателей\",\r\n  electricityDay: \"Электроэнергия: День\",\r\n  electricityNight: \"Электроэнергия: Ночь\",\r\n  kitchenColdWater: \"Кухня: Холодная вода\",\r\n  kitchenHotWater: \"Кухня: Горячая вода\",\r\n  bathroomColdWater: \"Ванная: Холодная вода\",\r\n  bathroomHotWater: \"Ванная: Горячая вода\",\r\n\r\n  // Общее\r\n  systemName: \"Система коммунальных показателей\",\r\n  save: \"Сохранить\",\r\n  send: \"Отправить\",\r\n  delete: \"Удалить\",\r\n  cancel: \"Отмена\",\r\n  recover: \"Восстановить\",\r\n  loading: \"Загрузка\",\r\n  saveData: \"Данные успешно сохранены!\",\r\n  objectDeleted: \"Объект успешно удален!\",\r\n  prev: \"Назад\",\r\n  next: \"Вперед\",\r\n  finish: \"Готово\",\r\n  requiredField: \"Поле обязательно для заполнения\",\r\n  unvalidEmail: \"Пожалуйста, введите корректный email\",\r\n  unvalidPassword: \"Пароль должен состоять из более чем 6 символов\",\r\n  responseError: \"Произошла ошибка, попробуйте обновить страницу\",\r\n\r\n  //Месяцы\r\n  january: \"Январь\",\r\n  february: \"Февраль\",\r\n  march: \"Март\",\r\n  april: \"Апрель\",\r\n  may: \"Май\",\r\n  june: \"Июнь\",\r\n  july: \"Июль\",\r\n  august: \"Август\",\r\n  september: \"Сентябрь\",\r\n  october: \"Октябрь\",\r\n  november: \"Ноябрь\",\r\n  december: \"Декабрь\",\r\n  year: \"год\",\r\n  notDefined: \"Не определен\",\r\n};\r\n\r\nexport default ru;\r\n","const en = {\r\n  // Auth form\r\n  authEmail: \"Email\",\r\n  authPassword: \"Password\",\r\n  authSignIn: \"Sign in\",\r\n  authSignUp: \"Don't have an account yet? Sign up\",\r\n  authForgotPassword: \"Forgot password?\",\r\n  authPasswordRecovery:\r\n    \"To restore your password, enter your email address and you will be sent an email with further instructions.\",\r\n  authEmailSent: \"Email sent!\",\r\n  authEmailSentText1: \"An email was sent to your email address\",\r\n  authEmailSentText2: \"with further instructions. Please check your email box.\",\r\n  authReturn: \"Return to the Login form\",\r\n  authSignInShort: \"Sign in\",\r\n  emailNotReg: \"This email isn't registered\",\r\n  authError: \"Authorization error, check the data and try again\",\r\n  authErrorEmailExist: \"The user with this Email already exists\",\r\n  authErrorEmailNotReg: \"The user with this Email isn't registered yet\",\r\n  authErrorInvalidPassword: \"Invalid password\",\r\n  authErrorOther: \"An error occurred, please try again later\",\r\n\r\n  // Registration form\r\n  registration: \"Registration\",\r\n  regEnterUserDetails: \"Enter your personal information\",\r\n  regEnterPrevIndicators: \"Enter the primary indicators\",\r\n  regValidateData: \"Validate data\",\r\n  regUserDetails: \"Personal information\",\r\n  regPrevIndicators: \"Primary indicators\",\r\n  regSuccess: \"Registration completed successfully\",\r\n\r\n  // Navigation\r\n  indications: \"Indications\",\r\n  expenses: \"Expenses\",\r\n  tariffs: \"Tariffs\",\r\n  profile: \"Profile\",\r\n\r\n  // Send indicators form\r\n  sendIndicators: \"Send indicators\",\r\n  sendIndicatorsMonthYear: \"Month and year\",\r\n  sendIndicatorsMonth: \"Month\",\r\n  sendIndicatorsYear: \"Year\",\r\n  sendIndicatorsElectricity: \"Electricity\",\r\n  sendIndicatorsDay: \"Day\",\r\n  sendIndicatorsNight: \"Night\",\r\n  sendIndicatorsKitchen: \"Kitchen:\",\r\n  sendIndicatorsBathroom: \"Bathroom\",\r\n  sendIndicatorsColdWater: \"Cold water\",\r\n  sendIndicatorsHotWater: \"Hot water\",\r\n  dialogCheckTitle: \"Check the indicators for\",\r\n  switchMail: \"Send to the accountant\",\r\n\r\n  // Outlay form\r\n  outlayCurrentExpenditure: \"Current expenditure\",\r\n  outlayIndicator: \"Indicator\",\r\n  outlayCharge: \"Charge\",\r\n  outlayConsumption: \"Consumption\",\r\n  outlayCost: \"Cost calculation\",\r\n  outlayElectricityDay: \"El. day:\",\r\n  outlayElectricityNight: \"El. night:\",\r\n  outlayColdWater: \"Cold water:\",\r\n  outlayHotWater: \"Hot water:\",\r\n  outlayDisposalWater: \"Water disposal:\",\r\n  outlayWaterSupply: \"Water supply\",\r\n  outlayElectricity: \"Electricity\",\r\n  outlaySendDialogTitle: \"Send indicators\",\r\n  outlaySendDialogContent:\r\n    \"Are you sure you want to send indicators to the accounting Department's email address?\",\r\n  outlayDeleteDialogTitle: \"Are you sure?\",\r\n  outlayDeleteDialogContent:\r\n    \"Are you sure you want to delete this item? This process cannot be canceled.\",\r\n  outlayNoData: \"No data for\",\r\n  outlayNoDataYear: \"year\",\r\n  outlayErrorNotYetSend: \"The indicators hasn't been sent yet\",\r\n  outlaySendSuccess: \"The data was successfully sent to the accountant's email!\",\r\n\r\n  // Tariffs form\r\n  addTariff: \"Add tariff\",\r\n  tariffName: \"Name\",\r\n  tariffCost: \"Cost\",\r\n  tariffDateStart: \"Date since\",\r\n  tariffDateEnd: \"Date till\",\r\n  tariffWater: \"Water supply\",\r\n  tariffHotWater: \"Water heating\",\r\n  tariffDisposalWater: \"Water disposal\",\r\n  tariffElectricityDay: \"Electricity day\",\r\n  tariffElectricityNight: \"Electricity night\",\r\n  tariffErrorNotYetSend: \"The tariffs hasn't been created yet\",\r\n\r\n  // User profile form\r\n  userProfile: \"User profile\",\r\n  contacts: \"Contacts\",\r\n  firstName: \"First name\",\r\n  lastName: \"Last name\",\r\n  address: \"Address\",\r\n  userEmail: \"User's Email\",\r\n  accountantEmail: \"Accountant's Email\",\r\n  primaryIndicators: \"Primary indicators\",\r\n  prevIndicatorsDate: \"Date of primary indicators\",\r\n  electricityDay: \"Electricity: Day\",\r\n  electricityNight: \"Electricity: Night\",\r\n  kitchenColdWater: \"Kitchen: Cold water\",\r\n  kitchenHotWater: \"Kitchen: Hot water\",\r\n  bathroomColdWater: \"Bathroom: Cold water\",\r\n  bathroomHotWater: \"Bathroom: Hot water\",\r\n\r\n  // General\r\n  systemName: \"The system of municipal indicators\",\r\n  save: \"Save\",\r\n  send: \"Send\",\r\n  delete: \"Delete\",\r\n  cancel: \"Cancel\",\r\n  recover: \"Recover\",\r\n  loading: \"Loading\",\r\n  saveData: \"Data saved successfully!\",\r\n  objectDeleted: \"The object was successfully deleted!\",\r\n  prev: \"Prev\",\r\n  next: \"Next\",\r\n  finish: \"Finish\",\r\n  requiredField: \"This field is required\",\r\n  unvalidEmail: \"Please enter a valid email address\",\r\n  unvalidPassword: \"The password must consist of more than 6 characters\",\r\n  responseError: \"An error occurred, try refreshing the page\",\r\n\r\n  //Months\r\n  january: \"January\",\r\n  february: \"February\",\r\n  march: \"March\",\r\n  april: \"April\",\r\n  may: \"May\",\r\n  june: \"June\",\r\n  july: \"July\",\r\n  august: \"August\",\r\n  september: \"September\",\r\n  october: \"October\",\r\n  november: \"November\",\r\n  december: \"December\",\r\n  year: \"year\",\r\n  notDefined: \"Not defined\",\r\n};\r\n\r\nexport default en;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport { languageOptions, dictionaryList } from \"./Dictionaries\";\r\n\r\n// create the language context with default selected language\r\nconst languageIndex =\r\n  localStorage.getItem(\"languageIndex\") === undefined\r\n    ? 0\r\n    : +localStorage.getItem(\"languageIndex\");\r\n\r\nexport const LanguageContext = createContext({\r\n  language: languageOptions[languageIndex],\r\n  dictionary: dictionaryList[languageOptions[languageIndex].id],\r\n});\r\n\r\n// it provides the language context to app\r\nexport function LanguageProvider(props) {\r\n  const languageContext = useContext(LanguageContext);\r\n  const [language, setLanguage] = useState(languageContext.language);\r\n  const [dictionary, setDictionary] = useState(languageContext.dictionary);\r\n\r\n  const provider = {\r\n    language,\r\n    dictionary,\r\n    setLanguage: (selectedLanguage) => {\r\n      setLanguage(selectedLanguage); // it will update the language in state\r\n      setDictionary(dictionaryList[selectedLanguage.id]);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={provider}>\r\n      {props.children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { languageOptions } from \"./Dictionaries\";\r\nimport { LanguageContext } from \"./Language\";\r\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  rootLight: {\r\n    paddingTop: \"1px\",\r\n    marginRight: \"15px\",\r\n    \"& .MuiInput-underline:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiSelect-select:focus\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  selectLight: {\r\n    color: \"white\",\r\n  },\r\n  rootDark: {\r\n    paddingTop: \"1px\",\r\n    marginRight: \"15px\",\r\n    \"& .MuiInput-underline:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"#757575\",\r\n    },\r\n    \"& .MuiSelect-select:focus\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  selectDark: {\r\n    color: \"#757575\",\r\n  },\r\n});\r\n\r\nexport default function LanguageSelector(props) {\r\n  const classes = useStyles();\r\n  const languageContext = useContext(LanguageContext);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const selectedLanguage = languageOptions.find(\r\n      (item) => item.id === event.target.value\r\n    );\r\n    // set selected language by calling context method\r\n    languageContext.setLanguage(selectedLanguage);  \r\n    localStorage.setItem(\"languageIndex\", languageOptions.indexOf(selectedLanguage));\r\n  };\r\n\r\n  return (\r\n    <FormControl className={props.theme === \"light\" ? classes.rootLight: classes.rootDark}>\r\n      <Select\r\n        value={languageContext.language.id}\r\n        onChange={handleLanguageChange}\r\n        className={props.theme === \"light\" ? classes.selectLight: classes.selectDark}\r\n      >\r\n        {languageOptions.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.text}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { LanguageContext } from \"../../Languages/Language\";\r\n\r\nconst Text = (props) => {\r\n  const languageContext = useContext(LanguageContext);\r\n\r\n  return languageContext.dictionary[props.tid];\r\n};\r\n\r\nexport default Text;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport LanguageSelector from \"../Languages/LanguageSelector\";\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExitToApp,\r\n  Menu,\r\n  ListAlt,\r\n  EventNote,\r\n  MonetizationOn,\r\n  AccountCircle,\r\n} from \"@material-ui/icons\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst APP_MENU_LIST = [\r\n  { name: \"indications\", path: \"/send-indicators\", icon: <ListAlt /> },\r\n  { name: \"expenses\", path: \"/outlay\", icon: <EventNote /> },\r\n  { name: \"tariffs\", path: \"/tariffs\", icon: <MonetizationOn /> },\r\n  { name: \"profile\", path: \"/profile\", icon: <AccountCircle /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let sectionTitleName = \"indications\";\r\n  switch (window.location.hash) {\r\n    case \"#/send-indicators\":\r\n      sectionTitleName = \"indications\";\r\n      break;\r\n    case \"#/outlay\":\r\n      sectionTitleName = \"expenses\";\r\n      break;\r\n    case \"#/tariffs\":\r\n      sectionTitleName = \"tariffs\";\r\n      break;\r\n    case \"#/profile\":\r\n      sectionTitleName = \"profile\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(\r\n    <Text tid={sectionTitleName} />\r\n  );\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const titleShow = useMediaQuery(\"(min-width:425px)\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{sectionTitle}</Typography>\r\n          <div className={classes.grow} />\r\n          <LanguageSelector theme=\"light\" />\r\n          {props.userDetails && titleShow ? (\r\n            <Typography variant=\"h6\">\r\n              {props.userDetails.firstName + \" \" + props.userDetails.lastName}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to=\"/logout\"\r\n          >\r\n            <ExitToApp />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={openDrawer}\r\n          onClose={() => setOpenDrawer(false)}\r\n        >\r\n          <List className={classes.list}>\r\n            {APP_MENU_LIST.map((item) => (\r\n              <ListItem\r\n                button\r\n                key={item.name}\r\n                component={NavLink}\r\n                to={item.path}\r\n                onClick={() => {\r\n                  setOpenDrawer(false);\r\n                  setSectionTitle(<Text tid={item.name} />);\r\n                }}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={<Text tid={item.name} />} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\nrender() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12} style={{ width: \"100%\" }}>\r\n            <AppBar userDetails={this.props.userDetails}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} style={{ width: \"100%\" }}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","export const checkFieldValidity = (value, rules) => {\r\n  let validation = {\r\n    isValid: true,\r\n    errorMessage: null,\r\n  };\r\n\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    validation.isValid = value.trim() !== \"\" && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"requiredField\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    validation.isValid = pattern.test(value) && validation.isValid;\r\n    validation.errorMessage =\r\n      value === \"\"\r\n        ? \"requiredField\"\r\n        : \"unvalidEmail\";\r\n  }\r\n\r\n  if (rules.isDate) {\r\n    validation.isValid = value !== null && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"requiredField\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isNumber) {\r\n    validation.isValid = value !== 0 && validation.isValid;\r\n    validation.errorMessage = !validation.isValid\r\n      ? \"requiredField\"\r\n      : \"\";\r\n  }\r\n\r\n  if (rules.isPassord) {\r\n    validation.isValid = value.length >= 6 && validation.isValid;\r\n    if (value.length < 6 && value.length > 0)\r\n      validation.errorMessage =\r\n        \"unvalidPassword\";\r\n    else if (value.length === 0)\r\n      validation.errorMessage = \"requiredField\";\r\n    else validation.errorMessage = \"\";\r\n  }\r\n\r\n  return validation;\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nexport const AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nexport const AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport const AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthButton,\r\n  AuthInput,\r\n  AuthInputPassword,\r\n  AuthAlert,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link, Grid } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    auth: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    authValid: false,\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state.auth[key].validation);\r\n    let newAuthState = {\r\n      ...this.state.auth,\r\n      [key]: {\r\n        ...this.state.auth[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newAuthState);\r\n\r\n    this.setState({ auth: newAuthState, authValid: formValid });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    if (typeof stateData !== \"undefined\") {\r\n      const { email, password } = stateData;\r\n      if (email.valid && password.valid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newAuthState = {\r\n        ...this.state.auth,\r\n        email: {\r\n          ...this.state.auth.email,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        password: {\r\n          ...this.state.auth.password,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ auth: newAuthState });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    this.props.onAuth(\r\n      this.state.auth.email.value,\r\n      this.state.auth.password.value\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.auth;\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ position: \"absolute\", top: \"20px\", right: \"20px\" }}>\r\n          <LanguageSelector theme=\"dark\" />\r\n        </div>\r\n        <div className=\"auth_container\">\r\n          <form>\r\n            <div className=\"lockIconContainer\">\r\n              <div className=\"roundIcon\">\r\n                <LockOutlinedIcon />\r\n              </div>\r\n            </div>\r\n            <Typography className=\"authHeader\" variant=\"h5\" align=\"center\">\r\n              <Text tid=\"systemName\" />\r\n            </Typography>\r\n            {this.props.errorMessage ? (\r\n              <AuthAlert severity=\"error\"><Text tid={this.props.errorMessage} /></AuthAlert>\r\n            ) : null}\r\n            <AuthInput\r\n              id=\"email\"\r\n              label={<Text tid=\"authEmail\" />}\r\n              name=\"email\"\r\n              error={!email.valid && email.touched}\r\n              helperText={\r\n                !email.valid && email.touched ? (\r\n                  <Text tid={email.errorMessage} />\r\n                ) : null\r\n              }\r\n              onChange={(event) =>\r\n                this.inputHandler(\"email\", event.target.value)\r\n              }\r\n              value={email.value}\r\n            />\r\n            <AuthInputPassword\r\n              id=\"password\"\r\n              label={<Text tid=\"authPassword\" />}\r\n              name=\"password\"\r\n              error={!password.valid && password.touched}\r\n              helperText={\r\n                !password.valid && password.touched ? (\r\n                  <Text tid={password.errorMessage} />\r\n                ) : null\r\n              }\r\n              onChange={(event) =>\r\n                this.inputHandler(\"password\", event.target.value)\r\n              }\r\n              value={password.value}\r\n            />\r\n            <AuthButton\r\n              onClick={\r\n                this.state.authValid\r\n                  ? () => this.formSenderHandler()\r\n                  : () => this.checkFormValidity()\r\n              }\r\n            >\r\n              <Text tid=\"authSignIn\" />\r\n            </AuthButton>\r\n            <Grid container spacing={1} direction=\"row\">\r\n              <Grid item xs={6}>\r\n                <Typography>\r\n                  <Link\r\n                    component={NavLink}\r\n                    to=\"/forgot-password\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    <Text tid=\"authForgotPassword\" />\r\n                  </Link>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography align=\"right\">\r\n                  <Link component={NavLink} to=\"/registration\" variant=\"body2\">\r\n                    <Text tid=\"authSignUp\" />\r\n                  </Link>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n  },\r\n  cardPadding: {\r\n    padding: \"16px !important\",\r\n  }\r\n});\r\n\r\nconst CardBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardPadding}>\r\n        {props.children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst StepOne = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    password,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label=\"Email\"\r\n          disabled={props.isDisabled}\r\n          value={userEmail.value}\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n          error={!userEmail.valid && userEmail.touched}\r\n          helperText={\r\n            !userEmail.valid && userEmail.touched ? (\r\n              <Text tid={userEmail.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"authPassword\" />}\r\n          disabled={props.isDisabled}\r\n          value={password.value}\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"password\", event.target.value)\r\n          }\r\n          error={!password.valid && password.touched}\r\n          helperText={\r\n            !password.valid && password.touched ? (\r\n              <Text tid={password.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label={<Text tid=\"firstName\" />}\r\n          value={firstName.value}\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          disabled={props.isDisabled}\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched ? (\r\n              <Text tid={firstName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label={<Text tid=\"lastName\" />}\r\n          disabled={props.isDisabled}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? (\r\n              <Text tid={lastName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"address\" />}\r\n          disabled={props.isDisabled}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? (\r\n              <Text tid={address.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"accountantEmail\" />}\r\n          disabled={props.isDisabled}\r\n          value={accountantEmail.value}\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched\r\n              ? <Text tid={accountantEmail.errorMessage} />\r\n              : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst StepTwo = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label={<Text tid=\"prevIndicatorsDate\" />}\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched ? (\r\n                <Text tid={prevIndicatorsDate.errorMessage} />\r\n              ) : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"electricityDay\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"electricityNight\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"kitchenColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched ? (\r\n              <Text tid={kitchenColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"kitchenHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched ? (\r\n              <Text tid={kitchenHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"bathroomColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched ? (\r\n              <Text tid={bathroomColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"bathroomHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched ? (\r\n              <Text tid={bathroomHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CardBody from \"../UI/CardBody/CardBody\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiStepper-root\": {\r\n      padding: \"24px 0 0 0\",\r\n    },\r\n  },\r\n  stepLabel: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    <Text tid=\"regEnterUserDetails\" />,\r\n    <Text tid=\"regEnterPrevIndicators\" />,\r\n    <Text tid=\"regValidateData\" />,\r\n  ];\r\n}\r\n\r\nconst RegistrationStepper = (props) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      if (props.userDetailsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"userDetails\");\r\n    }\r\n    if (activeStep === 1) {\r\n      if (props.prevIndicatorsValid) {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      } else props.checkFormValidity(\"prevIndicators\");\r\n    }\r\n    if (activeStep === 2) {\r\n      props.registration();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <StepOne\r\n            userDetails={props.userDetails}\r\n            updateUserDataInState={props.updateUserDataInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <StepTwo\r\n            prevIndicators={props.prevIndicators}\r\n            updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n            isDisabled={false}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"0 0 20px 0\" }}\r\n            >\r\n              <Text tid=\"regUserDetails\" />\r\n            </Typography>\r\n            <StepOne\r\n              userDetails={props.userDetails}\r\n              updateUserDataInState={props.updateUserDataInState}\r\n              isDisabled={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ padding: \"20px 0\" }}\r\n            >\r\n              <Text tid=\"regPrevIndicators\" />\r\n            </Typography>\r\n            <StepTwo\r\n              prevIndicators={props.prevIndicators}\r\n              updatePrevIndicatorsInState={props.updatePrevIndicatorsInState}\r\n              isDisabled={true}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel classes={{ root: classes.stepLabel }}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions} style={{marginTop: \"30px\"}}>\r\n              <Text tid=\"regSuccess\" />\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n            >\r\n              <Text tid=\"authSignIn\" />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CardBody>\r\n              {getStepContent(\r\n                activeStep,\r\n                props.updateUserDataInState,\r\n                props.updatePrevIndicatorsInState,\r\n                props.userDetails,\r\n                props.prevIndicators\r\n              )}\r\n            </CardBody>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                <Text tid=\"prev\" />\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? <Text tid=\"finish\" /> : <Text tid=\"next\" />}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationStepper;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RegistrationStepper from \"../../components/Registration/RegistrationStepper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          isPassord: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n  };\r\n\r\n  registration = () => {\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n    };\r\n\r\n    this.props.onRegistration(\r\n      this.state.userDetails.userEmail.value,\r\n      this.state.userDetails.password.value,\r\n      userFormData\r\n    );\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"userDetails\", newUserDetails);\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(\"prevIndicators\", newPrevIndicators);\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (formId, stateData) => {\r\n    if (formId === \"userDetails\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        userEmail,\r\n        password,\r\n        accountantEmail,\r\n        address,\r\n      } = stateData;\r\n      if (\r\n        firstName.valid &&\r\n        lastName.valid &&\r\n        userEmail.valid &&\r\n        password.valid &&\r\n        accountantEmail.valid &&\r\n        address.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"userDetails\" && typeof stateData === \"undefined\") {\r\n      let newUserDetails = {\r\n        ...this.state.userDetails,\r\n        firstName: {\r\n          ...this.state.userDetails.firstName,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        lastName: {\r\n          ...this.state.userDetails.lastName,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        userEmail: {\r\n          ...this.state.userDetails.userEmail,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        password: {\r\n          ...this.state.userDetails.password,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        accountantEmail: {\r\n          ...this.state.userDetails.accountantEmail,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        address: {\r\n          ...this.state.userDetails.address,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ userDetails: newUserDetails });\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData !== \"undefined\") {\r\n      const {\r\n        prevIndicatorsDate,\r\n        electricityDay,\r\n        electricityNight,\r\n        kitchenColdWater,\r\n        kitchenHotWater,\r\n        bathroomColdWater,\r\n        bathroomHotWater,\r\n      } = stateData;\r\n      if (\r\n        prevIndicatorsDate.valid &&\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        kitchenColdWater.valid &&\r\n        kitchenHotWater.valid &&\r\n        bathroomColdWater.valid &&\r\n        bathroomHotWater.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (formId === \"prevIndicators\" && typeof stateData === \"undefined\") {\r\n      let newPrevIndicators = {\r\n        ...this.state.prevIndicators,\r\n        prevIndicatorsDate: {\r\n          ...this.state.prevIndicators.prevIndicatorsDate,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityDay: {\r\n          ...this.state.prevIndicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.prevIndicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        kitchenColdWater: {\r\n          ...this.state.prevIndicators.kitchenColdWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        kitchenHotWater: {\r\n          ...this.state.prevIndicators.kitchenHotWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        bathroomColdWater: {\r\n          ...this.state.prevIndicators.bathroomColdWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        bathroomHotWater: {\r\n          ...this.state.prevIndicators.bathroomHotWater,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ prevIndicators: newPrevIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    if (this.props.errorMessage) window.scrollTo(0, 0);\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            right: \"20px\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <LanguageSelector theme=\"dark\" />\r\n          <Typography>\r\n            <Link\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n              variant=\"body2\"\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              <Text tid=\"authSignInShort\" />\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"registration\" />\r\n        </Typography>\r\n        {this.props.errorMessage ? (\r\n          <Alert severity=\"error\">\r\n            <Text tid={this.props.errorMessage} />\r\n          </Alert>\r\n        ) : null}\r\n        <RegistrationStepper\r\n          userDetails={this.state.userDetails}\r\n          userDetailsValid={this.state.userDetailsValid}\r\n          prevIndicators={this.state.prevIndicators}\r\n          prevIndicatorsValid={this.state.prevIndicatorsValid}\r\n          updateUserDataInState={this.updateUserDataInState}\r\n          updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n          checkFormValidity={this.checkFormValidity}\r\n          registration={this.registration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRegistration: (email, password, userDetails) =>\r\n      dispatch(actions.registration(email, password, userDetails)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nimport \"./ForgotPassword.css\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport {\r\n  AuthAlert,\r\n  AuthButton,\r\n  AuthInput,\r\n} from \"../../components/UI/AuthComponents/index\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport LanguageSelector from \"../../components/Languages/LanguageSelector\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nexport class ForgotPassword extends Component {\r\n  state = {\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    errorMessage: \"\",\r\n    emailSend: false,\r\n  };\r\n\r\n  inputHandler = (key, value) => {\r\n    let validation = checkFieldValidity(value, this.state[key].validation);\r\n    let newItem = {\r\n      ...this.state[key],\r\n      value: value,\r\n      valid: validation.isValid,\r\n      errorMessage: validation.errorMessage,\r\n      touched: true,\r\n    };\r\n\r\n    this.setState({ [key]: newItem });\r\n  };\r\n\r\n  sendPasswordRecovery = () => {\r\n    console.log(\"Пароль восстановлен\");\r\n    const body = {\r\n      requestType: \"PASSWORD_RESET\",\r\n      email: this.state.email.value,\r\n    };\r\n    axios\r\n      .post(\r\n        `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${CONFIG.AUTH_API_KEY}`,\r\n        body\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ emailSend: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        if (error.response.data.error.message === \"EMAIL_NOT_FOUND\") {\r\n          this.setState({\r\n            errorMessage: \"emailNotReg\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email } = this.state;\r\n\r\n    const enterEmail = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          <Text tid=\"authForgotPassword\" />\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          <Text tid=\"authPasswordRecovery\" />\r\n        </Typography>\r\n        {this.state.errorMessage ? (\r\n          <AuthAlert severity=\"error\">\r\n            <Text tid={this.state.errorMessage} />\r\n          </AuthAlert>\r\n        ) : null}\r\n        <AuthInput\r\n          id=\"email\"\r\n          label={<Text tid=\"authEmail\" />}\r\n          name=\"email\"\r\n          value={email.value}\r\n          error={!email.valid && email.touched}\r\n          helperText={\r\n            !email.valid && email.touched ? (\r\n              <Text tid={email.errorMessage} />\r\n            ) : null\r\n          }\r\n          onChange={(event) => this.inputHandler(\"email\", event.target.value)}\r\n        />\r\n        <AuthButton\r\n          disabled={!this.state.email.valid}\r\n          onClick={this.sendPasswordRecovery}\r\n        >\r\n          <Text tid=\"recover\" />\r\n        </AuthButton>\r\n      </div>\r\n    );\r\n\r\n    const information = (\r\n      <div>\r\n        <Typography className=\"headFont\" variant=\"h5\" color=\"initial\">\r\n          <Text tid=\"authEmailSent\" />\r\n        </Typography>\r\n        <Typography className=\"typeFont\" variant=\"body1\" color=\"initial\">\r\n          <Text tid=\"authEmailSentText1\" /> <b>{email.value}</b>{\" \"}\r\n          <Text tid=\"authEmailSentText2\" />\r\n        </Typography>\r\n        <Typography>\r\n          <Link component={NavLink} to=\"/auth\" variant=\"body2\">\r\n            <Text tid=\"authReturn\" />\r\n          </Link>\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            right: \"20px\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <LanguageSelector theme=\"dark\" />\r\n          <Typography>\r\n            <Link\r\n              component={NavLink}\r\n              to=\"/auth\"\r\n              variant=\"body2\"\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              <Text tid=\"authSignInShort\" />\r\n            </Link>\r\n          </Typography>\r\n        </div>\r\n        <div className=\"form_container\">\r\n          {!this.state.emailSend ? enterEmail : information}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    text: \"january\",\r\n    value: 0,\r\n  },\r\n  {\r\n    text: \"february\",\r\n    value: 1,\r\n  },\r\n  {\r\n    text: \"march\",\r\n    value: 2,\r\n  },\r\n  {\r\n    text: \"april\",\r\n    value: 3,\r\n  },\r\n  {\r\n    text: \"may\",\r\n    value: 4,\r\n  },\r\n  {\r\n    text: \"june\",\r\n    value: 5,\r\n  },\r\n  {\r\n    text: \"july\",\r\n    value: 6,\r\n  },\r\n  {\r\n    text: \"august\",\r\n    value: 7,\r\n  },\r\n  {\r\n    text: \"september\",\r\n    value: 8,\r\n  },\r\n  {\r\n    text: \"october\",\r\n    value: 9,\r\n  },\r\n  {\r\n    text: \"november\",\r\n    value: 10,\r\n  },\r\n  {\r\n    text: \"december\",\r\n    value: 11,\r\n  },\r\n];","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchLabels(props) {\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={props.checked}\r\n            onChange={props.switchChange}\r\n            name={props.label}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst DialogCheck = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.modalOpen}\r\n      onClose={props.modalHandlerClose}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle align=\"center\">\r\n        <Text tid=\"dialogCheckTitle\" />{\" \"}\r\n        <Text tid={MONTHS_LIST[props.monthYear.month].text} />{\" \"}\r\n        {props.monthYear.year} <Text tid=\"year\" />\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsElectricity\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsDay\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityDay.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsNight\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.electricityNight.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsKitchen\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsColdWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsHotWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterKitchen.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsBathroom\" />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsColdWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.coldWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              <Text tid=\"sendIndicatorsHotWater\" />:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {props.indicators.hotWaterBathroom.value}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Switch\r\n              label={<Text tid=\"switchMail\" />}\r\n              checked={props.sendDataToAccountant}\r\n              switchChange={props.switchChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.modalHandlerClose} color=\"secondary\">\r\n          <Text tid=\"cancel\" />\r\n        </Button>\r\n        <Button onClick={props.sendIndicators} color=\"primary\" autoFocus>\r\n          <Text tid=\"send\" />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogCheck;\r\n","import React from \"react\";\r\n\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { MONTHS_LIST } from \"./Constants\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst Indicators = (props) => {\r\n  const {\r\n    electricityDay,\r\n    electricityNight,\r\n    coldWaterKitchen,\r\n    coldWaterBathroom,\r\n    hotWaterKitchen,\r\n    hotWaterBathroom,\r\n  } = props.indicators;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsMonthYear\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>\r\n            <Text tid=\"sendIndicatorsMonth\" />\r\n          </InputLabel>\r\n          <Select\r\n            value={props.monthYear.month || 0}\r\n            onChange={(event) =>\r\n              props.setStateMonthYear(\"month\", event.target.value)\r\n            }\r\n          >\r\n            {MONTHS_LIST.map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                <Text tid={item.text} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel>\r\n            <Text tid=\"sendIndicatorsYear\" />\r\n          </InputLabel>\r\n          <Select\r\n            value={props.monthYear.year || 2020}\r\n            onChange={(event) =>\r\n              props.setStateMonthYear(\"year\", event.target.value)\r\n            }\r\n          >\r\n            {props.getCurrentYear().map((item) => (\r\n              <MenuItem key={item.value} value={item.value}>\r\n                {item.text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsElectricity\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsDay\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsNight\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsKitchen\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={coldWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterKitchen\", value)\r\n          }\r\n          error={!coldWaterKitchen.valid && coldWaterKitchen.touched}\r\n          helperText={\r\n            !coldWaterKitchen.valid && coldWaterKitchen.touched ? (\r\n              <Text tid={coldWaterKitchen.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={hotWaterKitchen.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterKitchen\", value)\r\n          }\r\n          error={!hotWaterKitchen.valid && hotWaterKitchen.touched}\r\n          helperText={\r\n            !hotWaterKitchen.valid && hotWaterKitchen.touched ? (\r\n              <Text tid={hotWaterKitchen.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" className=\"headerMargin\">\r\n          <Text tid=\"sendIndicatorsBathroom\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={coldWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"coldWaterBathroom\", value)\r\n          }\r\n          error={!coldWaterBathroom.valid && coldWaterBathroom.touched}\r\n          helperText={\r\n            !coldWaterBathroom.valid && coldWaterBathroom.touched ? (\r\n              <Text tid={coldWaterBathroom.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          style={{ width: \"100%\" }}\r\n          variant=\"standard\"\r\n          label={<Text tid=\"sendIndicatorsHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={hotWaterBathroom.value}\r\n          minimumValue=\"0\"\r\n          onChange={(event, value) =>\r\n            props.updateIndicatorsInState(\"hotWaterBathroom\", value)\r\n          }\r\n          error={!hotWaterBathroom.valid && hotWaterBathroom.touched}\r\n          helperText={\r\n            !hotWaterBathroom.valid && hotWaterBathroom.touched ? (\r\n              <Text tid={hotWaterBathroom.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} style={{ textAlign: \"center\", marginTop: \"15px\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={\r\n            props.indicatorsValid\r\n              ? props.modalHandlerOpen\r\n              : () => props.checkFormValidity()\r\n          }\r\n        >\r\n          <Text tid=\"send\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport \"./IndicatorsInsert.css\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\n\r\nimport DialogCheck from \"../../components/IndicatorsInsertForm/DialogCheck\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Indicators from \"../../components/IndicatorsInsertForm/Indicators\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      coldWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterKitchen: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      hotWaterBathroom: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    },\r\n    indicatorsValid: false,\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    sendDataToAccountant: true,\r\n    modalOpen: false,\r\n  };\r\n\r\n  updateIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.indicators[key].validation\r\n    );\r\n    let newIndicators = {\r\n      ...this.state.indicators,\r\n      [key]: {\r\n        ...this.state.indicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newIndicators);\r\n\r\n    this.setState({\r\n      indicators: newIndicators,\r\n      indicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = (stateData) => {\r\n    console.log(typeof stateData);\r\n\r\n    if (typeof stateData !== \"undefined\") {\r\n      const {\r\n        electricityDay,\r\n        electricityNight,\r\n        coldWaterKitchen,\r\n        coldWaterBathroom,\r\n        hotWaterKitchen,\r\n        hotWaterBathroom,\r\n      } = stateData;\r\n\r\n      if (\r\n        electricityDay.valid &&\r\n        electricityNight.valid &&\r\n        coldWaterKitchen.valid &&\r\n        coldWaterBathroom.valid &&\r\n        hotWaterKitchen.valid &&\r\n        hotWaterBathroom.valid\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (typeof stateData === \"undefined\") {\r\n      let newIndicators = {\r\n        ...this.state.indicators,\r\n        electricityDay: {\r\n          ...this.state.indicators.electricityDay,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        electricityNight: {\r\n          ...this.state.indicators.electricityNight,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        coldWaterKitchen: {\r\n          ...this.state.indicators.coldWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        coldWaterBathroom: {\r\n          ...this.state.indicators.coldWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        hotWaterKitchen: {\r\n          ...this.state.indicators.hotWaterKitchen,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n        hotWaterBathroom: {\r\n          ...this.state.indicators.hotWaterBathroom,\r\n          touched: true,\r\n          errorMessage: \"requiredField\",\r\n        },\r\n      };\r\n      this.setState({ indicators: newIndicators });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\" || indicators[ind].value === 0) {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.electricityDay.valid &&\r\n      this.state.indicators.electricityNight.valid &&\r\n      this.state.indicators.coldWaterKitchen.valid &&\r\n      this.state.indicators.coldWaterBathroom.valid &&\r\n      this.state.indicators.hotWaterKitchen.valid &&\r\n      this.state.indicators.hotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.electricityDay.value,\r\n      electricityNight: this.state.indicators.electricityNight.value,\r\n      coldWaterKitchen: this.state.indicators.coldWaterKitchen.value,\r\n      coldWaterBathroom: this.state.indicators.coldWaterBathroom.value,\r\n      hotWaterKitchen: this.state.indicators.hotWaterKitchen.value,\r\n      hotWaterBathroom: this.state.indicators.hotWaterBathroom.value,\r\n    };\r\n\r\n    console.log(templateParams);\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      Date.UTC(this.state.monthYear.year, this.state.monthYear.month, 1, 5)\r\n    ).setUTCHours(0, 0, 0, 0);\r\n\r\n    const indicators = {\r\n      electricity: {\r\n        day: this.state.indicators.electricityDay.value,\r\n        night: this.state.indicators.electricityNight.value,\r\n      },\r\n      coldWater: {\r\n        kitchen: this.state.indicators.coldWaterKitchen.value,\r\n        bathroom: this.state.indicators.coldWaterBathroom.value,\r\n      },\r\n      hotWater: {\r\n        kitchen: this.state.indicators.hotWaterKitchen.value,\r\n        bathroom: this.state.indicators.hotWaterBathroom.value,\r\n      },\r\n      currentDate: {\r\n        today: new Date(dateOfIndicators).toUTCString(),\r\n        year: this.state.monthYear.year,\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(`/indicators.json?auth=${token}`, indicators)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ modalOpen: false });\r\n        if (this.state.sendDataToAccountant) this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonthYear = (key, value) => {\r\n    const updatedMonthYear = {\r\n      ...this.state.monthYear,\r\n      [key]: value,\r\n    };\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  switchChange = () => {\r\n    this.setState({ sendDataToAccountant: !this.state.sendDataToAccountant });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DialogCheck\r\n          indicators={this.state.indicators}\r\n          monthYear={this.state.monthYear}\r\n          modalOpen={this.state.modalOpen}\r\n          sendDataToAccountant={this.state.sendDataToAccountant}\r\n          switchChange={this.switchChange}\r\n          modalHandlerClose={this.modalHandlerClose}\r\n          sendIndicators={this.sendIndicators}\r\n        />\r\n\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          <Text tid=\"sendIndicators\" />\r\n        </Typography>\r\n\r\n        <CardBody>\r\n          <Indicators\r\n            indicators={this.state.indicators}\r\n            monthYear={this.state.monthYear}\r\n            indicatorsValid={this.state.indicatorsValid}\r\n            setStateMonthYear={this.setStateMonthYear}\r\n            getCurrentYear={this.getCurrentYear}\r\n            updateIndicatorsInState={this.updateIndicatorsInState}\r\n            modalHandlerOpen={this.modalHandlerOpen}\r\n            checkFormValidity={this.checkFormValidity}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(IndicatorsInsert));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {CircularProgress, Typography} from \"@material-ui/core\";\r\nimport Text from '../Text/Text'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  paragraph: {\r\n    marginTop: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <Typography className={classes.paragraph}><Text tid=\"loading\" /></Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Close, Email } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n  buttonSend: {\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nconst Outlay = (props) => {\r\n  const classes = useStyles();\r\n  const { id, date, indicators } = props.indicatorsList;\r\n  const { costWaterSupply, costElectricity } = props;\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = <Text tid=\"january\" />;\r\n      break;\r\n    case 1:\r\n      indicatorMonth = <Text tid=\"february\" />;\r\n      break;\r\n    case 2:\r\n      indicatorMonth = <Text tid=\"march\" />;\r\n      break;\r\n    case 3:\r\n      indicatorMonth = <Text tid=\"april\" />;\r\n      break;\r\n    case 4:\r\n      indicatorMonth = <Text tid=\"may\" />;\r\n      break;\r\n    case 5:\r\n      indicatorMonth = <Text tid=\"june\" />;\r\n      break;\r\n    case 6:\r\n      indicatorMonth = <Text tid=\"july\" />;\r\n      break;\r\n    case 7:\r\n      indicatorMonth = <Text tid=\"august\" />;\r\n      break;\r\n    case 8:\r\n      indicatorMonth = <Text tid=\"september\" />;\r\n      break;\r\n    case 9:\r\n      indicatorMonth = <Text tid=\"october\" />;\r\n      break;\r\n    case 10:\r\n      indicatorMonth = <Text tid=\"november\" />;\r\n      break;\r\n    case 11:\r\n      indicatorMonth = <Text tid=\"december\" />;\r\n      break;\r\n    default:\r\n      indicatorMonth = <Text tid=\"notDefined\" />;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <IconButton\r\n        className={classes.buttonSend}\r\n        aria-label={<Text tid=\"send\" />}\r\n        component=\"span\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.handleSendDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Email />\r\n      </IconButton>\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        aria-label={<Text tid=\"delete\" />}\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>\r\n                <Text tid=\"outlayIndicator\" />\r\n              </b>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <b>\r\n                <Text tid=\"outlayCharge\" />\r\n              </b>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <b>\r\n                <Text tid=\"outlayConsumption\" />\r\n              </b>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Text tid={row.name} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              <b>\r\n                <Text tid=\"outlayCost\" />\r\n              </b>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n              <Text tid=\"outlayWaterSupply\" />\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costWaterSupply} ₽</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" colSpan={2}>\r\n              <Text tid=\"outlayElectricity\" />\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costElectricity} ₽</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Text from \"../Text/Text\";\r\n\r\nexport default function DialogSimple(props) {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\"><Text tid={props.dialogTitle} /></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <Text tid={props.dialogContent} />\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n          <Text tid=\"cancel\" />\r\n        </Button>\r\n        <Button onClick={props.handleContinue} color=\"secondary\" autoFocus>\r\n          <Text tid={props.activeButtonName} />\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { connect } from \"react-redux\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\nimport * as CONFIG from \"../../configuration.json\";\r\nimport \"./OutlayDetails.css\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nclass OutlayDetails extends Component {\r\n  state = {\r\n    indicatorsList: null,\r\n    prevIndicators: null,\r\n    tariffs: null,\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n    deleteDialogOpen: false,\r\n    deleteIndicatorId: null,\r\n    sendDialogOpen: false,\r\n    sendIndicatorId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    const url_1 = `/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_2 = `/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    const url_3 = `/indicators.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n\r\n    const promise1 = axios.get(url_1);\r\n    const promise2 = axios.get(url_2);\r\n    const promise3 = axios.get(url_3);\r\n\r\n    Promise.all([promise1, promise2, promise3])\r\n      .then((values) => {\r\n        console.log(\"Текущие расходы | запрос данных: \", values);\r\n\r\n        const prevIndicators = this.getUserDetails(values[0].data);\r\n        const tariffs = this.getListOfTariffs(values[1].data);\r\n        let indicatorsList = this.getListOfIndicators(values[2].data);\r\n\r\n        indicatorsList = this.countOutlay(indicatorsList, prevIndicators);\r\n\r\n        if (indicatorsList.length !== 0) {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            indicatorsList: indicatorsList,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            prevIndicators: prevIndicators,\r\n            tariffs: tariffs,\r\n            error: \"outlayErrorNotYetSend\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"responseError\",\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = (data) => {\r\n    const prevIndicatorsData = data[Object.keys(data)].prevIndicators;\r\n    let prevIndicators = [\r\n      {\r\n        id: \"day_electricity\",\r\n        name: \"outlayElectricityDay\",\r\n        intake: prevIndicatorsData.electricity.day,\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        name: \"outlayElectricityNight\",\r\n        intake: prevIndicatorsData.electricity.night,\r\n      },\r\n      {\r\n        id: \"cold_water\",\r\n        name: \"outlayColdWater\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater,\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        name: \"outlayHotWater\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        name: \"outlayDisposalWater\",\r\n        intake:\r\n          prevIndicatorsData.bathroom.coldWater +\r\n          prevIndicatorsData.kitchen.coldWater +\r\n          prevIndicatorsData.bathroom.hotWater +\r\n          prevIndicatorsData.kitchen.hotWater,\r\n      },\r\n    ];\r\n\r\n    return prevIndicators;\r\n  };\r\n\r\n  getListOfTariffs = (data) => {\r\n    let tariffs = Object.keys(data).map((item) => {\r\n      let tariff = data[item];\r\n      tariff.id = item;\r\n      return tariff;\r\n    });\r\n    return tariffs;\r\n  };\r\n\r\n  getListOfIndicators = (data) => {\r\n    let indicatorsList = Object.keys(data).map((key) => {\r\n      return {\r\n        id: key,\r\n        date: new Date(data[key].currentDate.today),\r\n        year: data[key].currentDate.year,\r\n        indicators: [\r\n          {\r\n            id: \"day_electricity\",\r\n            name: \"outlayElectricityDay\",\r\n            intake: data[key].electricity.day,\r\n          },\r\n          {\r\n            id: \"night_electricity\",\r\n            name: \"outlayElectricityNight\",\r\n            intake: data[key].electricity.night,\r\n          },\r\n          {\r\n            id: \"cold_water\",\r\n            name: \"outlayColdWater\",\r\n            intake: data[key].coldWater.bathroom + data[key].coldWater.kitchen,\r\n            bathroom: data[key].coldWater.bathroom,\r\n            kitchen: data[key].coldWater.kitchen,\r\n          },\r\n          {\r\n            id: \"hot_water\",\r\n            name: \"outlayHotWater\",\r\n            intake: data[key].hotWater.bathroom + data[key].hotWater.kitchen,\r\n            bathroom: data[key].hotWater.bathroom,\r\n            kitchen: data[key].hotWater.kitchen,\r\n          },\r\n          {\r\n            id: \"disposal_water\",\r\n            name: \"outlayDisposalWater\",\r\n            intake:\r\n              data[key].coldWater.bathroom +\r\n              data[key].coldWater.kitchen +\r\n              data[key].hotWater.bathroom +\r\n              data[key].hotWater.kitchen,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n    return indicatorsList;\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    const indicator = this.getOneIndicator();\r\n\r\n    let templateParams = {\r\n      recipient: this.props.userDetails.accountantEmail,\r\n      address: this.props.userDetails.address,\r\n      month: MONTHS_LIST[new Date(indicator.date).getMonth()].text,\r\n      year: indicator.year,\r\n      electricityDay: indicator.indicators[0].intake,\r\n      electricityNight: indicator.indicators[1].intake,\r\n      coldWaterKitchen: indicator.indicators[2].kitchen,\r\n      coldWaterBathroom: indicator.indicators[2].bathroom,\r\n      hotWaterKitchen: indicator.indicators[3].kitchen,\r\n      hotWaterBathroom: indicator.indicators[3].bathroom,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          this.props.enqueueSnackbar(<Text tid=\"outlaySendSuccess\" />, {\r\n            variant: \"success\",\r\n            preventDuplicate: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  getOneIndicator = () => {\r\n    let oneIndicator = this.state.indicatorsList.find(\r\n      ({ id }) => id === this.state.sendIndicatorId\r\n    );\r\n    return oneIndicator;\r\n  };\r\n\r\n  deleteItemFromIndicators = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/indicators/${this.state.deleteIndicatorId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteIndicatorId: null });\r\n        this.props.enqueueSnackbar(<Text tid=\"objectDeleted\" />, {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  removeIndicatorFromState = (removeId) => {\r\n    let newIndicatorsList = [...this.state.indicatorsList];\r\n    newIndicatorsList = newIndicatorsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n    this.setState({ indicatorsList: newIndicatorsList });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState({ deleteDialogOpen: true, deleteIndicatorId: id });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeIndicatorFromState(this.state.deleteIndicatorId);\r\n    this.deleteItemFromIndicators();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  handleSendDialogOpen = (id) => {\r\n    this.setState({ sendDialogOpen: true, sendIndicatorId: id });\r\n  };\r\n\r\n  handleSendDialogClose = () => {\r\n    this.setState({ sendDialogOpen: false });\r\n  };\r\n\r\n  handleSendDialogContinue = () => {\r\n    this.sendEmailHandler();\r\n    this.handleSendDialogClose();\r\n  };\r\n\r\n  countOutlay = (indicatorsList, prevIndicators) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] = newItem.intake - prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostElectricity = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let electricityDay = null;\r\n    try {\r\n      electricityDay = indicators.find(({ id }) => id === \"day_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество день\", e);\r\n    }\r\n\r\n    let electricityNight = null;\r\n    try {\r\n      electricityNight = indicators.find(({ id }) => id === \"night_electricity\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Электричество ночь\", e);\r\n    }\r\n\r\n    let electricityDayTariff = null;\r\n    try {\r\n      electricityDayTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_day\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество день загружается...\");\r\n    }\r\n\r\n    let electricityNightTariff = null;\r\n    try {\r\n      electricityNightTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"electricity_night\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на электричество ночь загружается...\");\r\n    }\r\n\r\n    return (\r\n      electricityDay * electricityDayTariff +\r\n      electricityNight * electricityNightTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  countCostWaterSupply = (indicators, date) => {\r\n    let indicatorsDate = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate()\r\n    );\r\n\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ name, dateStart, dateEnd }) => {\r\n        if (\r\n          name === \"water\" &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n            new Date(dateStart) &&\r\n          indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n            new Date(dateEnd)\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду загружается...\");\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(\r\n        ({ name, dateStart, dateEnd }) => {\r\n          if (\r\n            name === \"disposal_water\" &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) >=\r\n              new Date(dateStart) &&\r\n            indicatorsDate.setDate(indicatorsDate.getDate() + 1) <=\r\n              new Date(dateEnd)\r\n          ) {\r\n            return true;\r\n          } else return false;\r\n        }\r\n      ).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение загружается...\");\r\n    }\r\n\r\n    return (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList === null && this.state.error === null) {\r\n      indicatorsList = <Loader />;\r\n    } else if (this.state.indicatorsList !== null) {\r\n      indicatorsList = this.state.indicatorsList.filter((item) => {\r\n        return item.date.getUTCFullYear() === this.state.currentYear;\r\n      });\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costWaterSupply={this.countCostWaterSupply(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              costElectricity={this.countCostElectricity(\r\n                item.indicators,\r\n                item.date\r\n              )}\r\n              handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n              handleSendDialogOpen={this.handleSendDialogOpen}\r\n            />\r\n          );\r\n        });\r\n      } else\r\n        indicatorsList = (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <Text tid=\"outlayNoData\" /> {this.state.currentYear}{\" \"}\r\n            <Text tid=\"outlayNoDataYear\" />\r\n          </p>\r\n        );\r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <Text tid={this.state.error} />\r\n        </p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.sendDialogOpen}\r\n          handleClose={this.handleSendDialogClose}\r\n          handleContinue={this.handleSendDialogContinue}\r\n          dialogTitle=\"outlaySendDialogTitle\"\r\n          dialogContent=\"outlaySendDialogContent\"\r\n          activeButtonName=\"send\"\r\n        />\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"outlayDeleteDialogTitle\"\r\n          dialogContent=\"outlayDeleteDialogContent\"\r\n          activeButtonName=\"delete\"\r\n        />\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          <Text tid=\"outlayCurrentExpenditure\" />\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">{indicatorsList}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userDetails: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default withSnackbar(connect(mapStateToProps)(OutlayDetails));\r\n","import React, { useState } from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { Close, Edit, Save } from \"@material-ui/icons\";\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 0\",\r\n    position: \"relative\",\r\n  },\r\n  cardPadding: {\r\n    paddingBottom: \"16px !important\",\r\n    paddingTop: \"26px !important\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n  },\r\n  selectPadding: {\r\n    display: \"flex\",\r\n    flexBasis: \"13rem\",\r\n  },\r\n  buttonClose: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n  },\r\n  buttonEdit: {\r\n    position: \"absolute\",\r\n    padding: \"5px\",\r\n    top: \"5px\",\r\n    right: \"35px\",\r\n  },\r\n  buttonIconSuccess: {\r\n    color: \"#4caf50\",\r\n  },\r\n  buttonIconSuccessDisabled: {\r\n    color: \"#9E9E9E\",\r\n  },\r\n  buttonSuccess: {\r\n    \"&:hover\": {\r\n      backgorundColor: \"rgba(243, 243, 243, 0.04) !important\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TariffCard = (props) => {\r\n  const classes = useStyles();\r\n  const { id, name, cost, dateEnd, dateStart, tariffValid } = props.tariff;\r\n  const [disabled, setDisabled] = useState(props.disabled);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {disabled ? (\r\n        <IconButton\r\n          className={classes.buttonEdit}\r\n          component=\"span\"\r\n          color=\"primary\"\r\n          onClick={() => setDisabled(false)}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton\r\n          className={classes.buttonEdit + \" \" + classes.buttonSuccess}\r\n          component=\"span\"\r\n          color=\"secondary\"\r\n          disabled={!tariffValid}\r\n          onClick={() => {\r\n            setDisabled(true);\r\n            if (id) {\r\n              props.updateItemInTariffs(id);\r\n            } else {\r\n              props.insertItemToTariffs();\r\n            }\r\n          }}\r\n          disableRipple\r\n          disableFocusRipple\r\n        >\r\n          <Save\r\n            className={\r\n              !tariffValid\r\n                ? classes.buttonIconSuccessDisabled\r\n                : classes.buttonIconSuccess\r\n            }\r\n          />\r\n        </IconButton>\r\n      )}\r\n\r\n      <IconButton\r\n        className={classes.buttonClose}\r\n        component=\"span\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.handleDeleteDialogOpen(id);\r\n        }}\r\n        disableRipple\r\n        disableFocusRipple\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <CardContent className={classes.cardPadding}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <FormControl className={classes.textField}>\r\n              <InputLabel>\r\n                <Text tid=\"tariffName\" />\r\n              </InputLabel>\r\n              <Select\r\n                value={name.value}\r\n                onChange={(event) =>\r\n                  props.updateTariffInState(id, \"name\", event.target.value)\r\n                }\r\n                disabled={disabled}\r\n                error={!name.valid && name.touched}\r\n              >\r\n                <MenuItem value={\"water\"}>\r\n                  <Text tid=\"tariffWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"hot_water\"}>\r\n                  <Text tid=\"tariffHotWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"disposal_water\"}>\r\n                  <Text tid=\"tariffDisposalWater\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"electricity_day\"}>\r\n                  <Text tid=\"tariffElectricityDay\" />\r\n                </MenuItem>\r\n                <MenuItem value={\"electricity_night\"}>\r\n                  <Text tid=\"tariffElectricityNight\" />\r\n                </MenuItem>\r\n              </Select>\r\n              {!name.valid && name.touched ? (\r\n                <FormHelperText>{name.errorMessage}</FormHelperText>\r\n              ) : null}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.row}>\r\n            <CurrencyTextField\r\n              className={classes.textField}\r\n              label={<Text tid=\"tariffCost\" />}\r\n              currencySymbol=\"₽\"\r\n              value={cost.value}\r\n              minimumValue=\"0\"\r\n              maximumValue=\"5000\"\r\n              disabled={disabled}\r\n              onChange={(event, value) =>\r\n                props.updateTariffInState(id, \"cost\", value)\r\n              }\r\n              error={!cost.valid && cost.touched}\r\n              helperText={\r\n                !cost.valid && cost.touched ? (\r\n                  <Text tid={cost.errorMessage} />\r\n                ) : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label={<Text tid=\"tariffDateStart\" />}\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateStart.value}\r\n                className={classes.textFieldMargin + \" \" + classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateStart\", date)\r\n                }\r\n                error={!dateStart.valid && dateStart.touched}\r\n                helperText={\r\n                  !dateStart.valid && dateStart.touched ? (\r\n                    <Text tid={dateStart.errorMessage} />\r\n                  ) : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.row}>\r\n              <DatePicker\r\n                clearable\r\n                label={<Text tid=\"tariffDateEnd\" />}\r\n                format=\"dd.MM.yyyy\"\r\n                value={dateEnd.value}\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                onChange={(date) =>\r\n                  props.updateTariffInState(id, \"dateEnd\", date)\r\n                }\r\n                error={!dateEnd.valid && dateEnd.touched}\r\n                helperText={\r\n                  !dateEnd.valid && dateEnd.touched ? (\r\n                    <Text tid={dateEnd.errorMessage} />\r\n                  ) : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TariffCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport TariffCard from \"../../components/TariffCard/TariffCard\";\r\nimport DialogSimple from \"../../components/UI/DialogSimple/DialogSimple\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nclass Tariffs extends Component {\r\n  state = {\r\n    tariffs: [],\r\n    deleteDialogOpen: false,\r\n    deleteTariffId: null,\r\n    addButtonDisabled: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfTariffs();\r\n  }\r\n\r\n  getListOfTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    axios\r\n      .get(`/tariffs.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        if (Object.keys(response.data).length !== 0) {\r\n          let tariffs = Object.keys(response.data).map((item) => {\r\n            let tariff = {};\r\n            tariff.name = {\r\n              value: response.data[item].name,\r\n              validation: {\r\n                required: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.cost = {\r\n              value: response.data[item].cost,\r\n              validation: {\r\n                isNumber: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.dateStart = {\r\n              value: response.data[item].dateStart,\r\n              validation: {\r\n                isDate: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.dateEnd = {\r\n              value: response.data[item].dateEnd,\r\n              validation: {\r\n                isDate: true,\r\n              },\r\n              valid: true,\r\n              errorMessage: \"\",\r\n              touched: true,\r\n            };\r\n            tariff.id = item;\r\n            tariff.tariffValid = true;\r\n            tariff.userId = response.data[item].userId;\r\n            return tariff;\r\n          });\r\n          this.setState({ tariffs: tariffs });\r\n        } else {\r\n          this.setState({ error: \"tariffErrorNotYetSend\" });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  deleteItemFromTariffs = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .delete(`/tariffs/${this.state.deleteTariffId}.json?auth=${token}`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ deleteTariffId: null });\r\n        this.props.enqueueSnackbar(<Text tid=\"objectDeleted\" />, {\r\n          variant: \"info\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateItemInTariffs = (id) => {\r\n    console.log(\"Обновление записи\", id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const oldData = this.state.tariffs.find((item) => item.id === id);\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: oldData.userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .patch(`/tariffs/${id}.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  insertItemToTariffs = () => {\r\n    console.log(\"Сохраниение записи\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const oldData = this.state.tariffs[0];\r\n    const newData = {\r\n      cost: oldData.cost.value,\r\n      dateEnd: oldData.dateEnd.value,\r\n      dateStart: oldData.dateStart.value,\r\n      name: oldData.name.value,\r\n      userId: userId,\r\n    };\r\n    console.log(\"Сформированные данные\", newData);\r\n    axios\r\n      .post(`/tariffs.json?auth=${token}`, newData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.setState({ addButtonDisabled: false });\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    if (typeof id !== \"undefined\") {\r\n      this.setState({ deleteDialogOpen: true, deleteTariffId: id });\r\n    } else {      \r\n      if (this.state.tariffs.length === 1) {\r\n        this.setState({ error: \"tariffErrorNotYetSend\" });\r\n      }\r\n      this.removeTariffFromState(id);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({ deleteDialogOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogContinue = () => {\r\n    this.removeTariffFromState(this.state.deleteTariffId);\r\n    this.deleteItemFromTariffs();\r\n    this.handleDeleteDialogClose();\r\n  };\r\n\r\n  addTariffToState = () => {\r\n    this.setState({ error: null });\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList.unshift({\r\n      name: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      cost: {\r\n        value: 0,\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateStart: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n      dateEnd: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: false,\r\n        errorMessage: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n\r\n    this.setState({ tariffs: newTariffsList, addButtonDisabled: true });\r\n  };\r\n\r\n  removeTariffFromState = (removeId) => {\r\n    let newTariffsList = [...this.state.tariffs];\r\n\r\n    newTariffsList = newTariffsList.filter((item) => {\r\n      return item.id !== removeId;\r\n    });\r\n\r\n    if (this.state.addButtonDisabled) {\r\n      this.setState({ tariffs: newTariffsList, addButtonDisabled: false });\r\n    } else this.setState({ tariffs: newTariffsList });\r\n  };\r\n\r\n  updateTariffInState = (id, key, value) => {\r\n    let newTariff = [...this.state.tariffs];\r\n    let changeIndex = newTariff.findIndex((item) => item.id === id);\r\n\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      newTariff[changeIndex][key].validation\r\n    );\r\n\r\n    newTariff[changeIndex] = {\r\n      ...this.state.tariffs[changeIndex],\r\n      [key]: {\r\n        ...this.state.tariffs[changeIndex][key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity(newTariff[changeIndex]);\r\n\r\n    newTariff[changeIndex].tariffValid = formValid;\r\n\r\n    this.setState({ tariffs: newTariff });\r\n  };\r\n\r\n  checkFormValidity = (tariff) => {\r\n    const { name, cost, dateStart, dateEnd } = tariff;\r\n\r\n    if (name.valid && cost.valid && dateStart.valid && dateEnd.valid) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    let tariffCards = null;\r\n    if (this.state.tariffs.length === 0 && this.state.error === null)\r\n      tariffCards = <Loader />;\r\n    else if (this.state.error !== null) {\r\n      tariffCards = (\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <Text tid={this.state.error} />\r\n        </p>\r\n      );\r\n    } else\r\n      tariffCards = this.state.tariffs.map((item, index) => (\r\n        <TariffCard\r\n          key={typeof item.id !== \"undefined\" ? item.id : index}\r\n          tariff={item}\r\n          disabled={typeof item.id !== \"undefined\" ? true : false}\r\n          handleDeleteDialogOpen={this.handleDeleteDialogOpen}\r\n          handleDeleteDialogContinue={this.handleDeleteDialogContinue}\r\n          updateItemInTariffs={this.updateItemInTariffs}\r\n          updateTariffInState={this.updateTariffInState}\r\n          insertItemToTariffs={this.insertItemToTariffs}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <div>\r\n        <DialogSimple\r\n          open={this.state.deleteDialogOpen}\r\n          handleClose={this.handleDeleteDialogClose}\r\n          handleContinue={this.handleDeleteDialogContinue}\r\n          dialogTitle=\"outlayDeleteDialogTitle\"\r\n          dialogContent=\"outlayDeleteDialogContent\"\r\n          activeButtonName=\"delete\"\r\n        />\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"tariffs\" />\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n        >\r\n          <Button\r\n            onClick={() => this.addTariffToState(tariffCards)}\r\n            color=\"primary\"\r\n            disabled={this.state.addButtonDisabled}\r\n          >\r\n            <Text tid=\"addTariff\" />\r\n          </Button>\r\n        </Grid>\r\n        {tariffCards}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Tariffs);\r\n","import React from \"react\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Text from \"../UI/Text/Text\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    width: \"100%\",\r\n  },\r\n  buttonPosition: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst UserCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    userEmail,\r\n    accountantEmail,\r\n    address,\r\n  } = props.userDetails;\r\n\r\n  const {\r\n    prevIndicatorsDate,\r\n    electricityDay,\r\n    electricityNight,\r\n    kitchenColdWater,\r\n    kitchenHotWater,\r\n    bathroomColdWater,\r\n    bathroomHotWater,\r\n  } = props.prevIndicators;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          <Text tid=\"contacts\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label={<Text tid=\"firstName\" />}\r\n          value={firstName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"firstName\", event.target.value)\r\n          }\r\n          error={!firstName.valid && firstName.touched}\r\n          helperText={\r\n            !firstName.valid && firstName.touched ? (\r\n              <Text tid={firstName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label={<Text tid=\"lastName\" />}\r\n          value={lastName.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"lastName\", event.target.value)\r\n          }\r\n          error={!lastName.valid && lastName.touched}\r\n          helperText={\r\n            !lastName.valid && lastName.touched ? (\r\n              <Text tid={lastName.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"address\" />}\r\n          value={address.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"address\", event.target.value)\r\n          }\r\n          error={!address.valid && address.touched}\r\n          helperText={\r\n            !address.valid && address.touched ? (\r\n              <Text tid={address.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"userEmail\" />}\r\n          value={userEmail.value}\r\n          disabled\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"userEmail\", event.target.value)\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          label={<Text tid=\"accountantEmail\" />}\r\n          value={accountantEmail.value}\r\n          fullWidth\r\n          onChange={(event) =>\r\n            props.updateUserDataInState(\"accountantEmail\", event.target.value)\r\n          }\r\n          error={!accountantEmail.valid && accountantEmail.touched}\r\n          helperText={\r\n            !accountantEmail.valid && accountantEmail.touched ? (\r\n              <Text tid={accountantEmail.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" align=\"center\">\r\n          <Text tid=\"primaryIndicators\" />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DatePicker\r\n            clearable\r\n            className={classes.field}\r\n            disabled={props.isDisabled}\r\n            label={<Text tid=\"prevIndicatorsDate\" />}\r\n            format=\"dd.MM.yyyy\"\r\n            value={prevIndicatorsDate.value}\r\n            onChange={(date) =>\r\n              props.updatePrevIndicatorsInState(\"prevIndicatorsDate\", date)\r\n            }\r\n            error={!prevIndicatorsDate.valid && prevIndicatorsDate.touched}\r\n            helperText={\r\n              !prevIndicatorsDate.valid && prevIndicatorsDate.touched ? (\r\n                <Text tid={prevIndicatorsDate.errorMessage} />\r\n              ) : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"electricityDay\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityDay.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityDay\", value)\r\n          }\r\n          error={!electricityDay.valid && electricityDay.touched}\r\n          helperText={\r\n            !electricityDay.valid && electricityDay.touched ? (\r\n              <Text tid={electricityDay.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"electricityNight\" />}\r\n          currencySymbol=\"\"\r\n          value={electricityNight.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"electricityNight\", value)\r\n          }\r\n          error={!electricityNight.valid && electricityNight.touched}\r\n          helperText={\r\n            !electricityNight.valid && electricityNight.touched ? (\r\n              <Text tid={electricityNight.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"kitchenColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={kitchenColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenColdWater\", value)\r\n          }\r\n          error={!kitchenColdWater.valid && kitchenColdWater.touched}\r\n          helperText={\r\n            !kitchenColdWater.valid && kitchenColdWater.touched ? (\r\n              <Text tid={kitchenColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"kitchenHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={kitchenHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"kitchenHotWater\", value)\r\n          }\r\n          error={!kitchenHotWater.valid && kitchenHotWater.touched}\r\n          helperText={\r\n            !kitchenHotWater.valid && kitchenHotWater.touched ? (\r\n              <Text tid={kitchenHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"bathroomColdWater\" />}\r\n          currencySymbol=\"\"\r\n          value={bathroomColdWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomColdWater\", value)\r\n          }\r\n          error={!bathroomColdWater.valid && bathroomColdWater.touched}\r\n          helperText={\r\n            !bathroomColdWater.valid && bathroomColdWater.touched ? (\r\n              <Text tid={bathroomColdWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrencyTextField\r\n          className={classes.field}\r\n          disabled={props.isDisabled}\r\n          label={<Text tid=\"bathroomHotWater\" />}\r\n          currencySymbol=\"\"\r\n          value={bathroomHotWater.value}\r\n          minimumValue=\"0\"\r\n          onChange={(_, value) =>\r\n            props.updatePrevIndicatorsInState(\"bathroomHotWater\", value)\r\n          }\r\n          error={!bathroomHotWater.valid && bathroomHotWater.touched}\r\n          helperText={\r\n            !bathroomHotWater.valid && bathroomHotWater.touched ? (\r\n              <Text tid={bathroomHotWater.errorMessage} />\r\n            ) : null\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.buttonPosition} item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={() => {\r\n            if (props.checkFormValidity()) props.updateUserDetails();\r\n          }}\r\n        >\r\n          <Text tid=\"save\" />\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\n\r\nimport { withSnackbar } from \"notistack\";\r\nimport { checkFieldValidity } from \"../../components/Helpers/FormHelper\";\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport CardBody from \"../../components/UI/CardBody/CardBody\";\r\nimport Text from \"../../components/UI/Text/Text\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass UsersProfile extends Component {\r\n  state = {\r\n    userDetails: {\r\n      firstName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      lastName: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      userEmail: {\r\n        value: \"\",\r\n      },\r\n      accountantEmail: {\r\n        value: \"\",\r\n        validation: {\r\n          isEmail: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    userDetailsValid: false,\r\n    prevIndicators: {\r\n      prevIndicatorsDate: {\r\n        value: null,\r\n        validation: {\r\n          isDate: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityDay: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      electricityNight: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      kitchenHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomColdWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n      bathroomHotWater: {\r\n        value: \"\",\r\n        validation: {\r\n          isNumber: true,\r\n        },\r\n        valid: true,\r\n        errorMessage: \"\",\r\n        touched: true,\r\n      },\r\n    },\r\n    prevIndicatorsValid: false,\r\n    userId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails(localStorage.getItem(\"userId\"));\r\n  }\r\n\r\n  getUserDetails = (userId) => {\r\n    console.log(\"Получение данных по UserId: \", userId);\r\n    const token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`/users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        let dataFromDB = response.data[Object.keys(response.data)];\r\n        let newUserDetails = {\r\n          ...this.state.userDetails,\r\n          firstName: {\r\n            ...this.state.userDetails.firstName,\r\n            value: dataFromDB.userDetails.firstName,\r\n          },\r\n          lastName: {\r\n            ...this.state.userDetails.lastName,\r\n            value: dataFromDB.userDetails.lastName,\r\n          },\r\n          userEmail: {\r\n            ...this.state.userDetails.userEmail,\r\n            value: dataFromDB.userDetails.userEmail,\r\n          },\r\n          accountantEmail: {\r\n            ...this.state.userDetails.accountantEmail,\r\n            value: dataFromDB.userDetails.accountantEmail,\r\n          },\r\n          address: {\r\n            ...this.state.userDetails.address,\r\n            value: dataFromDB.userDetails.address,\r\n          },\r\n        };\r\n        let prevIndicators = {\r\n          ...this.state.prevIndicators,\r\n          prevIndicatorsDate: {\r\n            ...this.state.prevIndicators.prevIndicatorsDate,\r\n            value: dataFromDB.prevIndicators.prevIndicatorsDate,\r\n          },\r\n          electricityDay: {\r\n            ...this.state.prevIndicators.electricityDay,\r\n            value: dataFromDB.prevIndicators.electricity.day,\r\n          },\r\n          electricityNight: {\r\n            ...this.state.prevIndicators.electricityNight,\r\n            value: dataFromDB.prevIndicators.electricity.night,\r\n          },\r\n          kitchenColdWater: {\r\n            ...this.state.prevIndicators.kitchenColdWater,\r\n            value: dataFromDB.prevIndicators.kitchen.coldWater,\r\n          },\r\n          kitchenHotWater: {\r\n            ...this.state.prevIndicators.kitchenHotWater,\r\n            value: dataFromDB.prevIndicators.kitchen.hotWater,\r\n          },\r\n          bathroomColdWater: {\r\n            ...this.state.prevIndicators.bathroomColdWater,\r\n            value: dataFromDB.prevIndicators.bathroom.coldWater,\r\n          },\r\n          bathroomHotWater: {\r\n            ...this.state.prevIndicators.bathroomHotWater,\r\n            value: dataFromDB.prevIndicators.bathroom.hotWater,\r\n          },\r\n        };\r\n\r\n        this.setState({\r\n          userDetails: newUserDetails,\r\n          prevIndicators: prevIndicators,\r\n          id: Object.keys(response.data)[0],\r\n          userId: dataFromDB.userId,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    console.log(\"Обновление записи по Id: \", this.state.id);\r\n    const token = localStorage.getItem(\"token\");\r\n    const userFormData = {\r\n      userDetails: {\r\n        firstName: this.state.userDetails.firstName.value,\r\n        lastName: this.state.userDetails.lastName.value,\r\n        userEmail: this.state.userDetails.userEmail.value,\r\n        accountantEmail: this.state.userDetails.accountantEmail.value,\r\n        address: this.state.userDetails.address.value,\r\n      },\r\n      prevIndicators: {\r\n        prevIndicatorsDate: this.state.prevIndicators.prevIndicatorsDate.value,\r\n        electricity: {\r\n          day: this.state.prevIndicators.electricityDay.value,\r\n          night: this.state.prevIndicators.electricityNight.value,\r\n        },\r\n        kitchen: {\r\n          coldWater: this.state.prevIndicators.kitchenColdWater.value,\r\n          hotWater: this.state.prevIndicators.kitchenHotWater.value,\r\n        },\r\n        bathroom: {\r\n          coldWater: this.state.prevIndicators.bathroomColdWater.value,\r\n          hotWater: this.state.prevIndicators.bathroomHotWater.value,\r\n        },\r\n      },\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    axios\r\n      .patch(`/users/${this.state.id}.json?auth=${token}`, userFormData)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n        this.props.enqueueSnackbar(<Text tid=\"saveData\" />, {\r\n          variant: \"success\",\r\n          preventDuplicate: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка: \", error);\r\n      });\r\n  };\r\n\r\n  updateUserDataInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.userDetails[key].validation\r\n    );\r\n    let newUserDetails = {\r\n      ...this.state.userDetails,\r\n      [key]: {\r\n        ...this.state.userDetails[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({ userDetails: newUserDetails, userDetailsValid: formValid });\r\n  };\r\n\r\n  updatePrevIndicatorsInState = (key, value) => {\r\n    let validation = checkFieldValidity(\r\n      value,\r\n      this.state.prevIndicators[key].validation\r\n    );\r\n    let newPrevIndicators = {\r\n      ...this.state.prevIndicators,\r\n      [key]: {\r\n        ...this.state.prevIndicators[key],\r\n        value: value,\r\n        valid: validation.isValid,\r\n        errorMessage: validation.errorMessage,\r\n        touched: true,\r\n      },\r\n    };\r\n\r\n    let formValid = this.checkFormValidity();\r\n\r\n    this.setState({\r\n      prevIndicators: newPrevIndicators,\r\n      prevIndicatorsValid: formValid,\r\n    });\r\n  };\r\n\r\n  checkFormValidity = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      accountantEmail,\r\n      address,\r\n    } = this.state.userDetails;\r\n\r\n    const {\r\n      prevIndicatorsDate,\r\n      electricityDay,\r\n      electricityNight,\r\n      kitchenColdWater,\r\n      kitchenHotWater,\r\n      bathroomColdWater,\r\n      bathroomHotWater,\r\n    } = this.state.prevIndicators;\r\n\r\n    if (\r\n      firstName.valid &&\r\n      lastName.valid &&\r\n      accountantEmail.valid &&\r\n      address.valid &&\r\n      prevIndicatorsDate.valid &&\r\n      electricityDay.valid &&\r\n      electricityNight.valid &&\r\n      kitchenColdWater.valid &&\r\n      kitchenHotWater.valid &&\r\n      bathroomColdWater.valid &&\r\n      bathroomHotWater.valid\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Text tid=\"userProfile\" />\r\n        </Typography>\r\n        {this.state.userId === null ? (\r\n          <Loader />\r\n        ) : (\r\n          <CardBody>\r\n            <UserCard\r\n              userDetails={this.state.userDetails}\r\n              prevIndicators={this.state.prevIndicators}\r\n              updateUserDataInState={this.updateUserDataInState}\r\n              updatePrevIndicatorsInState={this.updatePrevIndicatorsInState}\r\n              checkFormValidity={this.checkFormValidity}\r\n              updateUserDetails={this.updateUserDetails}\r\n            />\r\n          </CardBody>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(UsersProfile);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nimport { LanguageProvider } from \"./components/Languages/Language\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport RegistrationForm from \"./containers/RegistrationForm/RegistrationForm\";\r\nimport ForgotPassword from \"./containers/ForgotPassword/ForgotPassword\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport Tariffs from \"./containers/Tariffs/Tariffs\";\r\nimport UsersProfile from \"./containers/UsersProfile/UsersProfile\";\r\n\r\nclass App extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Route path=\"/registration\" component={RegistrationForm} />\r\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (localStorage.getItem(\"userId\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/tariffs\" component={Tariffs} />\r\n          <Route path=\"/profile\" component={UsersProfile} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <LanguageProvider>\r\n        <Layout isAuth={this.props.isAuth}>{routes}</Layout>\r\n      </LanguageProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  userDetails: null,\r\n  prevIndicators: null,\r\n  userIdDb: null,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  console.log(action.error);\r\n\r\n  if (action.error.code === 401) {\r\n    errorMessage = \"authError\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_EXISTS\"\r\n  ) {\r\n    errorMessage = \"authErrorEmailExist\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"EMAIL_NOT_FOUND\"\r\n  ) {\r\n    errorMessage = \"authErrorEmailNotReg\";\r\n  } else if (\r\n    action.error.code === 400 &&\r\n    action.error.message === \"INVALID_PASSWORD\"\r\n  ) {\r\n    errorMessage = \"authErrorInvalidPassword\";\r\n  }else {\r\n    errorMessage = \"authErrorOther\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst loadUserData = (state, action) => {\r\n  return updateObject(state, {\r\n    userDetails: action.userDetails,\r\n    prevIndicators: action.prevIndicators,\r\n    userIdDb: action.userIdDb,\r\n  });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.LOAD_USERDATA_SUCCESS:\r\n      return loadUserData(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter basename={\"/\"}>\r\n      <SnackbarProvider\r\n        maxSnack={1}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <App />\r\n      </SnackbarProvider>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}