{"version":3,"sources":["components/Navigation/AppBar.js","hoc/Layout/Layout.js","axios-main.js","components/Outlay/Outlay.js","components/UI/Tabs/Tabs.js","containers/OutlayDetails/OutlayDetails.js","components/IndicatorsInsertForm/Constants.js","components/UI/Inputs/InputNum.js","containers/IndicatorsInsert/IndicatorsInsert.js","components/AuthComponents/AuthInput.js","components/AuthComponents/AuthInputPassword.js","components/AuthComponents/AuthButton.js","components/AuthComponents/AuthAlert.js","store/actions/auth.js","store/actions/actionTypes.js","containers/AuthForm/AuthForm.js","containers/AuthForm/Logout/Logout.js","App.js","serviceWorker.js","store/history.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","button","color","grow","MenuAppBar","props","classes","className","AppBar","position","Toolbar","ButtonGroup","disableElevation","variant","Button","component","NavLink","to","IconButton","aria-label","aria-controls","aria-haspopup","Layout","Grid","container","this","isAuth","item","xs","Paper","children","Component","instance","axios","create","baseURL","outlay","indicatorsList","date","indicators","costNovogor","indicatorMonth","getMonth","TableContainer","style","marginTop","Typography","align","getFullYear","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","key","scope","name","intake","boxShadow","label","fontSize","TabUI","React","useState","value","setValue","Tabs","onChange","event","newValue","changeCurrentYear","tabsList","indicatorColor","textColor","centered","Tab","OutlayDetails","state","prevIndicators","tariffs","id","cost","dateStart","dateEnd","currentYear","Date","getUTCFullYear","error","getListOfIndicators","get","then","response","console","log","data","Object","keys","CurrentDate","today","Number","Electricity","Day","Night","ColdWater","Bathroom","Kittchen","HotWater","sort","a","b","getTime","setState","countOutlay","catch","newIndicatorsList","i","newItem","length","countCostNovogor","coldWater","find","e","hotWater","disposalWater","waterTariff","parse","disposalTariff","toFixed","year","Loader","active","inline","filter","Outlay","textAlign","push","MONTHS_LIST","text","inputNum","alertMessage","errorMessage","classEnter","htmlFor","decimalScale","decimalSeparator","allowNegative","placeholder","changed","invalid","IndicatorsInsert","ElectricityDay","valid","ElectricityNight","ColdWaterKittchen","ColdWaterBathroom","HotWaterKittchen","HotWaterBathroom","monthYear","month","emailData","recipient","CONFIG","RECIPIENT","address","ADDRESS","modalOpen","addIndicatorHandler","type","updatedCount","target","updatedIndicators","modalHandlerClose","modalHandlerOpen","ind","preventDefault","indicatorsValid","sendEmailHandler","templateParams","electricityDay","electricityNight","coldWaterKittchen","coldWaterBathroom","hotWaterKittchen","hotWaterBathroom","emailjs","send","SERVICE_ID","TEMPLATE_ID","USER_ID","status","sendIndicators","dateOfIndicators","toISOString","post","history","getCurrentMonth","getCurrentYear","currentYearList","setStateMonth","updatedMonth","updatedMonthYear","setStateYear","updatedYear","inputClasses","inputError","Dialog","open","onClose","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogActions","onClick","autoFocus","Dropdown","selection","fluid","defaultValue","options","InputNum","join","withRouter","createStyles","margin","width","input","WebkitBoxShadow","AuthInput","TextField","inputProps","AuthInputPassword","showPassword","InputProps","endAdornment","InputAdornment","edge","CSSButton","withStyles","textTransform","AuthButton","CSSAlert","marginBottom","Alert","AuthAlert","authSuccess","token","userId","idToken","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","AuthForm","email","password","rememberMe","validateFields","fieldValidationErrors","willSend","inputHandler","validation","validateFieldsUpdate","test","checkboxHandler","checkbox","formSenderHandler","onAuth","emailError","passwordError","severity","helperText","connect","loading","authData","returnSecureToken","url","AUTH_API_KEY","expirationDate","expiresIn","setItem","localId","authFail","actions","Logout","onLogout","App","onTryAutoSignup","routes","path","getItem","Boolean","window","location","hostname","match","createBrowserHistory","updateObject","oldObject","updatedProperties","initialState","authStart","action","reduser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35e3993c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst MenuAppBar = (props) => {\r\n  const classes = useStyles(); \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n            <Button\r\n              className={classes.button}\r\n              component={NavLink}\r\n              to=\"/send-indicators\"\r\n            >\r\n              Показания\r\n            </Button>\r\n            <Button className={classes.button} component={NavLink} to=\"/outlay\">\r\n              Расходы\r\n            </Button>\r\n          </ButtonGroup>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              component={NavLink}\r\n              to=\"/logout\"\r\n            >\r\n              <ExitToAppIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAppBar;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./Layout.css\";\r\nimport AppBar from \"../../components/Navigation/AppBar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {this.props.isAuth && (\r\n          <Grid item xs={12}>\r\n            <AppBar />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Paper className=\"paper\">{this.props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reacttestproject-70f65.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst outlay = (props) => {\r\n  const { date, indicators } = props.indicatorsList;\r\n  const { costNovogor } = props\r\n\r\n  let indicatorMonth = \"\";\r\n  switch (date.getMonth()) {\r\n    case 0:\r\n      indicatorMonth = \"Январь\";\r\n      break;\r\n    case 1:\r\n      indicatorMonth = \"Февраль\";\r\n      break;\r\n    case 2:\r\n      indicatorMonth = \"Март\";\r\n      break;\r\n    case 3:\r\n      indicatorMonth = \"Апрель\";\r\n      break;\r\n    case 4:\r\n      indicatorMonth = \"Май\";\r\n      break;\r\n    case 5:\r\n      indicatorMonth = \"Июнь\";\r\n      break;\r\n    case 6:\r\n      indicatorMonth = \"Июль\";\r\n      break;\r\n    case 7:\r\n      indicatorMonth = \"Август\";\r\n      break;\r\n    case 8:\r\n      indicatorMonth = \"Сентябрь\";\r\n      break;\r\n    case 9:\r\n      indicatorMonth = \"Октябрь\";\r\n      break;\r\n    case 10:\r\n      indicatorMonth = \"Ноябрь\";\r\n      break;\r\n    case 11:\r\n      indicatorMonth = \"Декабрь\";\r\n      break;\r\n    default:\r\n      indicatorMonth = \"Не определен\";\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginTop: \"30px\" }}>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {indicatorMonth} {date.getFullYear()}\r\n      </Typography>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Показатель</TableCell>\r\n            <TableCell align=\"center\">Расход</TableCell>\r\n            <TableCell align=\"center\">Потребление</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {indicators.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.intake}</TableCell>\r\n              <TableCell align=\"center\">{row.outlay}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              Новогор\r\n            </TableCell>\r\n            <TableCell align=\"center\">{costNovogor}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default outlay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"15px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  label: {\r\n    fontSize: \"1rem\",\r\n  }\r\n});\r\n\r\nconst TabUI = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeCurrentYear(props.tabsList[newValue]);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        {props.tabsList.map(item => <Tab key={item} label={item} className={classes.label} />)}\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TabUI;","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-main\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport \"./OutlayDetails.css\";\r\nimport Outlay from \"../../components/Outlay/Outlay\";\r\nimport Tabs from \"../../components/UI/Tabs/Tabs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass OutlayDetails extends Component {\r\n  // TODO Хранить в бд первоначальные результаты\r\n  state = {\r\n    indicatorsList: [],\r\n    prevIndicators: [\r\n      {\r\n        name: \"Эл-я день:\",\r\n        intake: 18572,\r\n      },\r\n      {\r\n        name: \"Эл-я ночь:\",\r\n        intake: 6699,\r\n      },\r\n      {\r\n        name: \"Холодная вода:\",\r\n        intake: 402,\r\n      },\r\n      {\r\n        name: \"Горячая вода:\",\r\n        intake: 420,\r\n      },\r\n      {\r\n        name: \"Водоотведение:\",\r\n        intake: 822,\r\n      },\r\n    ],\r\n    tariffs: [\r\n      {\r\n        id: \"water\",\r\n        cost: 33.03,\r\n        dateStart: \"2019-01-01\",\r\n        dateEnd: \"2020-12-31\",\r\n      },\r\n      {\r\n        id: \"hot_water\",\r\n        cost: 1423.06,\r\n        dateStart: \"2020-01-01\",\r\n        dateEnd: \"2020-06-30\",\r\n      },\r\n      {\r\n        id: \"disposal_water\",\r\n        cost: 23.14,\r\n        dateStart: \"2019-01-01\",\r\n        dateEnd: \"2020-12-31\",\r\n      },\r\n      {\r\n        id: \"day_electricity\",\r\n        cost: 4.17,\r\n        dateStart: \"2020-01-01\",\r\n        dateEnd: \"2020-06-30\",\r\n      },\r\n      {\r\n        id: \"night_electricity\",\r\n        cost: 2.66,\r\n        dateStart: \"2020-01-01\",\r\n        dateEnd: \"2020-06-30\",\r\n      },\r\n    ],\r\n    currentYear: new Date().getUTCFullYear(),\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getListOfIndicators();\r\n  }\r\n\r\n  getListOfIndicators = () => {\r\n    axios\r\n      .get(`/indicators.json`)\r\n      .then((response) => {\r\n        console.log(\"Ответ с сервера: \", response.data);\r\n\r\n        let indicatorsList = Object.keys(response.data).map((key) => {\r\n          return {\r\n            id: key,\r\n            date: new Date(response.data[key].CurrentDate.today),\r\n            indicators: [\r\n              {\r\n                id: \"day_electricity\",\r\n                name: \"Эл-я день:\",\r\n                intake: Number(response.data[key].Electricity.Day),\r\n              },\r\n              {\r\n                id: \"night_electricity\",\r\n                name: \"Эл-я ночь:\",\r\n                intake: Number(response.data[key].Electricity.Night),\r\n              },\r\n              {\r\n                id: \"cold_water\",\r\n                name: \"Холодная вода:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"hot_water\",\r\n                name: \"Горячая вода:\",\r\n                intake:\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n              {\r\n                id: \"disposal_water\",\r\n                name: \"Водоотведение:\",\r\n                intake:\r\n                  Number(response.data[key].ColdWater.Bathroom) +\r\n                  Number(response.data[key].ColdWater.Kittchen) +\r\n                  Number(response.data[key].HotWater.Bathroom) +\r\n                  Number(response.data[key].HotWater.Kittchen),\r\n              },\r\n            ],\r\n          };\r\n        });\r\n        indicatorsList.sort((a, b) => a.date.getTime() - b.date.getTime());\r\n        this.setState({ indicatorsList: this.countOutlay(indicatorsList) });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          error: \"Произошла ошибка, обратитесь к Системному Администратору.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  countOutlay = (indicatorsList) => {\r\n    let newIndicatorsList = [...indicatorsList];\r\n\r\n    for (let i = 0; i < newIndicatorsList.length; i++) {\r\n      if (newIndicatorsList[i] === newIndicatorsList[0]) {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake - this.state.prevIndicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      } else {\r\n        newIndicatorsList[i].indicators = newIndicatorsList[i].indicators.map(\r\n          (item, index) => {\r\n            let newItem = { ...item };\r\n            newItem[\"outlay\"] =\r\n              newItem.intake -\r\n              newIndicatorsList[i - 1].indicators[index].intake;\r\n            return newItem;\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return newIndicatorsList;\r\n  };\r\n\r\n  countCostNovogor = (indicators, date) => {\r\n    let coldWater = null;\r\n    try {\r\n      coldWater = indicators.find(({ id }) => id === \"cold_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Холодная вода\", e);\r\n    }\r\n\r\n    let hotWater = null;\r\n    try {\r\n      hotWater = indicators.find(({ id }) => id === \"hot_water\").outlay;\r\n    } catch (e) {\r\n      console.log(\"Горячая вода\", e);\r\n    }\r\n\r\n    let disposalWater = null;\r\n    try {\r\n      disposalWater = indicators.find(({ id }) => id === \"disposal_water\")\r\n        .outlay;\r\n    } catch (e) {\r\n      console.log(\"Водоотведение\", e);\r\n    }\r\n\r\n    let waterTariff = null;\r\n    try {\r\n      waterTariff = this.state.tariffs.find(({ id, dateStart, dateEnd }) => {\r\n        if (\r\n          id === \"water\" &&\r\n          Date.parse(dateStart) <= date &&\r\n          Date.parse(dateEnd) >= date\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на воду\", e);\r\n    }\r\n\r\n    let disposalTariff = null;\r\n    try {\r\n      disposalTariff = this.state.tariffs.find(({ id, dateStart, dateEnd }) => {\r\n        if (\r\n          id === \"disposal_water\" &&\r\n          Date.parse(dateStart) <= date &&\r\n          Date.parse(dateEnd) >= date\r\n        ) {\r\n          return true;\r\n        } else return false;\r\n      }).cost;\r\n    } catch (e) {\r\n      console.log(\"Тариф на водоотведение\", e);\r\n    }\r\n\r\n    let novogorCost = (\r\n      (coldWater + hotWater) * waterTariff +\r\n      disposalWater * disposalTariff\r\n    ).toFixed(2);\r\n    return novogorCost;\r\n  };\r\n\r\n  changeCurrentYear = (year) => {\r\n    this.setState({ currentYear: year });\r\n  };\r\n\r\n  // TODO: Добавить возможность редактирования и удаления записей\r\n  render() {\r\n    let indicatorsList = null;\r\n    if (this.state.indicatorsList.length === 0 && this.state.error == null) {\r\n      indicatorsList = (\r\n        <Loader active inline=\"centered\">\r\n          Загрузка\r\n        </Loader>\r\n      );\r\n    } else if (this.state.indicatorsList.length > 0) {\r\n      indicatorsList = this.state.indicatorsList\r\n        .filter((item) => {\r\n          return item.date.getUTCFullYear() === this.state.currentYear;\r\n        })\r\n\r\n      if (indicatorsList.length > 0) {\r\n        indicatorsList = indicatorsList.map((item, index) => {\r\n          return (\r\n            <Outlay\r\n              key={index}\r\n              indicatorsList={item}\r\n              costNovogor={this.countCostNovogor(item.indicators, item.date)}\r\n            />\r\n          );\r\n        });\r\n      } else indicatorsList = (<p style={{ textAlign: \"center\" }}>{`Нет данных на ${this.state.currentYear} год`}</p>);\r\n        \r\n    } else {\r\n      indicatorsList = (\r\n        <p style={{ textAlign: \"center\" }}>{this.state.error}</p>\r\n      );\r\n    }\r\n\r\n    const tabsList = [];\r\n    for (\r\n      let i = new Date().getUTCFullYear();\r\n      i >= new Date().getUTCFullYear() - 1;\r\n      i--\r\n    ) {\r\n      tabsList.push(i);\r\n    }\r\n\r\n    return (\r\n      <div className=\"outlayContainer\">\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          Текущие расходы\r\n        </Typography>\r\n        <Tabs tabsList={tabsList} changeCurrentYear={this.changeCurrentYear} />\r\n        <div className=\"indicatorsList\">\r\n          {indicatorsList}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutlayDetails;\r\n","export const MONTHS_LIST = [\r\n  {\r\n    key: \"0\",\r\n    text: \"Январь\",\r\n    value: 0,\r\n  },\r\n  {\r\n    key: \"1\",\r\n    text: \"Феварль\",\r\n    value: 1,\r\n  },\r\n  {\r\n    key: \"2\",\r\n    text: \"Март\",\r\n    value: 2,\r\n  },\r\n  {\r\n    key: \"3\",\r\n    text: \"Апрель\",\r\n    value: 3,\r\n  },\r\n  {\r\n    key: \"4\",\r\n    text: \"Май\",\r\n    value: 4,\r\n  },\r\n  {\r\n    key: \"5\",\r\n    text: \"Июнь\",\r\n    value: 5,\r\n  },\r\n  {\r\n    key: \"6\",\r\n    text: \"Июль\",\r\n    value: 6,\r\n  },\r\n  {\r\n    key: \"7\",\r\n    text: \"Август\",\r\n    value: 7,\r\n  },\r\n  {\r\n    key: \"8\",\r\n    text: \"Сентябрь\",\r\n    value: 8,\r\n  },\r\n  {\r\n    key: \"9\",\r\n    text: \"Октябрь\",\r\n    value: 9,\r\n  },\r\n  {\r\n    key: \"10\",\r\n    text: \"Ноябрь\",\r\n    value: 10,\r\n  },\r\n  {\r\n    key: \"11\",\r\n    text: \"Декабрь\",\r\n    value: 11,\r\n  },\r\n];","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst inputNum = (props) => {\r\n  const alertMessage = (<div className=\"ui pointing red basic label\">{props.errorMessage}</div>);\r\n  return (\r\n    <div className={props.classEnter}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <NumberFormat\r\n        decimalScale=\"2\"\r\n        decimalSeparator=\".\"\r\n        allowNegative={false}\r\n        id={props.id}\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={props.changed}\r\n        value={props.value}\r\n      />\r\n      {props.invalid ? null : alertMessage}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default inputNum;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"../../axios-main\";\r\nimport emailjs from \"emailjs-com\";\r\nimport CONFIG from \"../../configuration.json\";\r\nimport { MONTHS_LIST } from \"../../components/IndicatorsInsertForm/Constants\";\r\n\r\nimport InputNum from \"../../components/UI/Inputs/InputNum\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport \"./IndicatorsInsert.css\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonUI from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass IndicatorsInsert extends Component {\r\n  state = {\r\n    indicators: {\r\n      ElectricityDay: { value: \"\", valid: true },\r\n      ElectricityNight: { value: \"\", valid: true },\r\n      ColdWaterKittchen: { value: \"\", valid: true },\r\n      ColdWaterBathroom: { value: \"\", valid: true },\r\n      HotWaterKittchen: { value: \"\", valid: true },\r\n      HotWaterBathroom: { value: \"\", valid: true },\r\n    },\r\n    monthYear: {\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n    },\r\n    emailData: {\r\n      recipient: CONFIG.RECIPIENT,\r\n      address: CONFIG.ADDRESS,\r\n    },\r\n    modalOpen: false,\r\n  };\r\n\r\n  addIndicatorHandler = (type, event) => {\r\n    //Обновляем показатель\r\n    const updatedCount = event.target.value;\r\n    const updatedIndicators = { ...this.state.indicators };\r\n    updatedIndicators[type].value = updatedCount;\r\n    updatedIndicators[type].valid = true;\r\n\r\n    //Обновляем state\r\n    this.setState({ indicators: updatedIndicators });\r\n  };\r\n\r\n  modalHandlerClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  modalHandlerOpen = (event) => {\r\n    event.preventDefault();\r\n\r\n    for (let ind in this.state.indicators) {\r\n      const indicators = { ...this.state.indicators };\r\n\r\n      if (indicators[ind].value === \"\") {\r\n        const updatedIndicators = { ...this.state.indicators };\r\n        updatedIndicators[ind].valid = false;\r\n        this.setState({ indicators: updatedIndicators });\r\n        this.setState({ indicatorsValid: false });\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.state.indicators.ElectricityDay.valid &&\r\n      this.state.indicators.ElectricityNight.valid &&\r\n      this.state.indicators.ColdWaterKittchen.valid &&\r\n      this.state.indicators.ColdWaterBathroom.valid &&\r\n      this.state.indicators.HotWaterKittchen.valid &&\r\n      this.state.indicators.HotWaterBathroom.valid\r\n    )\r\n      this.setState({ modalOpen: true });\r\n  };\r\n\r\n  sendEmailHandler = () => {\r\n    let templateParams = {\r\n      recipient: this.state.emailData.recipient,\r\n      address: this.state.emailData.address,\r\n      month: MONTHS_LIST[this.state.monthYear.month].text,\r\n      year: this.state.monthYear.year,\r\n      electricityDay: this.state.indicators.ElectricityDay.value,\r\n      electricityNight: this.state.indicators.ElectricityNight.value,\r\n      coldWaterKittchen: this.state.indicators.ColdWaterKittchen.value,\r\n      coldWaterBathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      hotWaterKittchen: this.state.indicators.HotWaterKittchen.value,\r\n      hotWaterBathroom: this.state.indicators.HotWaterBathroom.value,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        CONFIG.SERVICE_ID,\r\n        CONFIG.TEMPLATE_ID,\r\n        templateParams,\r\n        CONFIG.USER_ID\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  sendIndicators = () => {\r\n    let dateOfIndicators = new Date(\r\n      this.state.monthYear.year,\r\n      this.state.monthYear.month,\r\n      1,\r\n      5,\r\n      0,\r\n      0,\r\n      0\r\n    ).toISOString();\r\n\r\n    const indicators = {\r\n      Electricity: {\r\n        Day: this.state.indicators.ElectricityDay.value,\r\n        Night: this.state.indicators.ElectricityNight.value,\r\n      },\r\n      ColdWater: {\r\n        Kittchen: this.state.indicators.ColdWaterKittchen.value,\r\n        Bathroom: this.state.indicators.ColdWaterBathroom.value,\r\n      },\r\n      HotWater: {\r\n        Kittchen: this.state.indicators.HotWaterKittchen.value,\r\n        Bathroom: this.state.indicators.HotWaterBathroom.value,\r\n      },\r\n      CurrentDate: { today: dateOfIndicators, year: this.state.monthYear.year },\r\n    };\r\n    axios\r\n      .post(\"/indicators.json\", indicators)\r\n      .then((response) => {\r\n        this.setState({ modalOpen: false });\r\n        this.sendEmailHandler();\r\n        this.props.history.push(\"/outlay\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getCurrentMonth = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    return currentMonth;\r\n  };\r\n\r\n  getCurrentYear = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    let currentYearList = [];\r\n    for (let i = 2; i >= 0; i--) {\r\n      currentYearList.push({\r\n        key: currentYear - i,\r\n        text: currentYear - i,\r\n        value: currentYear - i,\r\n      });\r\n    }\r\n    return currentYearList;\r\n  };\r\n\r\n  setStateMonth = (e, { value }) => {\r\n    const updatedMonth = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.month = updatedMonth;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  setStateYear = (e, { value }) => {\r\n    const updatedYear = value;\r\n    const updatedMonthYear = { ...this.state.monthYear };\r\n    updatedMonthYear.year = updatedYear;\r\n    this.setState({ monthYear: updatedMonthYear });\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = \"Поле обязательно для заполнения\";\r\n    const inputClasses = [\"field\"];\r\n    const inputError = [\"field\", \"error\"];\r\n    return (\r\n      <div className=\"ui center ui_center\">\r\n        <Dialog\r\n          open={this.state.modalOpen}\r\n          onClose={this.modalHandlerClose}\r\n          maxWidth=\"xs\"\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Проверьте показатели за{\" \"}\r\n              {MONTHS_LIST[this.state.monthYear.month].text}{\" \"}\r\n              {this.state.monthYear.year} г.\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Электроэнергия\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    День:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityDay.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Ночь:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ElectricityNight.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Кухня\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterKittchen.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    Ванная\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Холодная вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.ColdWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Горячая вода:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    {this.state.indicators.HotWaterBathroom.value}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <ButtonUI onClick={this.modalHandlerClose} color=\"secondary\">\r\n              Отмена\r\n            </ButtonUI>\r\n            <ButtonUI onClick={this.sendIndicators} color=\"primary\" autoFocus>\r\n              Отправить\r\n            </ButtonUI>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <form className=\"ui form\">\r\n          <div className=\"ui one column centered grid\">\r\n            <div className=\"column\">\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                Отправка показаний\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <Typography variant=\"h5\">Месяц и год</Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <Dropdown\r\n                  placeholder=\"Выберите месяц\"\r\n                  selection\r\n                  fluid\r\n                  defaultValue={MONTHS_LIST[this.getCurrentMonth()].value}\r\n                  options={MONTHS_LIST}\r\n                  onChange={this.setStateMonth}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <div className=\"column\">\r\n                  <Dropdown\r\n                    placeholder=\"Выберите месяц\"\r\n                    selection\r\n                    fluid\r\n                    defaultValue={this.getCurrentYear()[2].value}\r\n                    options={this.getCurrentYear()}\r\n                    onChange={this.setStateYear}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Электроэнергия</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityDay.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityDay\"}\r\n                  label={\"День\"}\r\n                  placeholder={\"Введите дневное потребление\"}\r\n                  name={\"ElectricityDay\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityDay\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityDay.value}\r\n                  invalid={this.state.indicators.ElectricityDay.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ElectricityNight.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ElectricityNight\"}\r\n                  label={\"Ночь\"}\r\n                  placeholder={\"Введите ночное потребление\"}\r\n                  name={\"ElectricityNight\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ElectricityNight\", event)\r\n                  }\r\n                  value={this.state.indicators.ElectricityNight.value}\r\n                  invalid={this.state.indicators.ElectricityNight.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Кухня</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterKittchen\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterKittchen.value}\r\n                  invalid={this.state.indicators.ColdWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterBathroom\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterBathroom.value}\r\n                  invalid={this.state.indicators.HotWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui two column centered grid indicator_container\">\r\n            <div className=\"left floated column\">\r\n              <Typography variant=\"h5\">Ванная</Typography>\r\n            </div>\r\n            <div className=\"two column row\">\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.ColdWaterBathroom.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"ColdWaterBathroom\"}\r\n                  label={\"Холодная вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"ColdWaterBathroom\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"ColdWaterBathroom\", event)\r\n                  }\r\n                  value={this.state.indicators.ColdWaterBathroom.value}\r\n                  invalid={this.state.indicators.ColdWaterBathroom.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n              <div className=\"column\">\r\n                <InputNum\r\n                  classEnter={\r\n                    this.state.indicators.HotWaterKittchen.valid\r\n                      ? inputClasses.join(\" \")\r\n                      : inputError.join(\" \")\r\n                  }\r\n                  id={\"HotWaterKittchen\"}\r\n                  label={\"Горячая вода\"}\r\n                  placeholder={\"Введите потребление\"}\r\n                  name={\"HotWaterKittchen\"}\r\n                  changed={(event) =>\r\n                    this.addIndicatorHandler(\"HotWaterKittchen\", event)\r\n                  }\r\n                  value={this.state.indicators.HotWaterKittchen.value}\r\n                  invalid={this.state.indicators.HotWaterKittchen.valid}\r\n                  errorMessage={errorMessage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ui one column centered grid\">\r\n            <div style={{ textAlign: \"center\" }} className=\"column\">\r\n              <ButtonUI\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={this.modalHandlerOpen}\r\n              >\r\n                Отправить показания\r\n              </ButtonUI>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(IndicatorsInsert);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInput = (props: any) => {\r\n  const classes = useStyles();\r\n  return <TextField className={classes.root} variant=\"outlined\" inputProps={{className: classes.input}} {...props} />;\r\n};\r\n\r\nexport default AuthInput;\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"10px 0\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 30px white inset !important\"\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst AuthInputPassword = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    showPassword: false\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState({ ...state, showPassword: !state.showPassword });\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      type={state.showPassword ? \"text\" : \"password\"}\r\n      inputProps={{ className: classes.input }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleClickShowPassword}\r\n              edge=\"end\"\r\n            >\r\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthInputPassword;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSButton = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n    margin: \"30px 0 10px 0\",\r\n  }\r\n})(Button);\r\n\r\nconst AuthButton = (props) => {\r\n  return <CSSButton variant=\"contained\" color=\"primary\" {...props}>{props.children}</CSSButton>;\r\n};\r\n\r\nexport default AuthButton;\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CSSAlert = withStyles({\r\n  root: {\r\n    marginBottom: \"10px\",\r\n  },\r\n})(Alert);\r\n\r\nconst AuthAlert = (props) => {\r\n  return <CSSAlert {...props}>{props.children}</CSSAlert>;\r\n};\r\n\r\nexport default AuthAlert;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-main\";\r\nimport CONFIG from \"../../configuration.json\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${CONFIG.AUTH_API_KEY}`;\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime())/1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./AuthForm.css\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport AuthInput from \"../../components/AuthComponents/AuthInput\";\r\nimport AuthInputPassword from \"../../components/AuthComponents/AuthInputPassword\";\r\nimport AuthButton from \"../../components/AuthComponents/AuthButton\";\r\nimport CSSAlert from \"../../components/AuthComponents/AuthAlert\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n// Реализация классового компонента формы\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    validateFields: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    fieldValidationErrors: {\r\n      email: \"Обязательное поле!\",\r\n      password: \"Обязательное поле!\"\r\n    },\r\n    willSend: true\r\n  };\r\n\r\n  //Функция для обновления состояния полей ввода\r\n  inputHandler = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.validation(name, value);\r\n\r\n    //Обновление State значения почты или пароля\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //Валидация\r\n  validation = (name, value) => {\r\n    const reg = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n    let validateFieldsUpdate = { ...this.state.validateFields };\r\n    let fieldValidationErrors = { ...this.state.fieldValidationErrors };\r\n    switch (name) {\r\n      case \"email\":\r\n        validateFieldsUpdate.email = reg.test(value);\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.email = \"Обязательное поле!\";\r\n        } else fieldValidationErrors.email = \"Проверьте корректность почты\";\r\n        break;\r\n      case \"password\":\r\n        validateFieldsUpdate.password = value.length >= 6;\r\n        if (value.length === 0) {\r\n          fieldValidationErrors.password = \"Обязательное поле!\";\r\n        } else\r\n          fieldValidationErrors.password =\r\n            \"Пароль должен быть более 6 символов\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      validateFields: validateFieldsUpdate,\r\n      fieldValidationErrors: fieldValidationErrors\r\n    });\r\n  };\r\n\r\n  //Функция для обновления состояния чекбокса\r\n  checkboxHandler = () => {\r\n    let checkbox = this.state.rememberMe;\r\n\r\n    this.setState({ rememberMe: !checkbox });\r\n  };\r\n\r\n  //Функция для отправки данных формы\r\n  formSenderHandler = () => {\r\n    //Проверка на заполненные поля\r\n    if (this.state.validateFields.email && this.state.validateFields.password) {\r\n      this.setState({ willSend: true });\r\n      //Отправка POST запроса на backend\r\n      this.props.onAuth(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.rememberMe\r\n      );\r\n    } else {\r\n      this.setState({ willSend: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Вспомогательные переменные для отображения валидации и подсказки\r\n    let emailError = false;\r\n    let passwordError = false;\r\n\r\n    if (!this.state.willSend) {\r\n      emailError = !this.state.validateFields.email;\r\n      passwordError = !this.state.validateFields.password;\r\n    }\r\n\r\n    return (\r\n      <div className=\"auth_container\">\r\n        <form>\r\n          <div className=\"lockIconContainer\">\r\n            <div className=\"roundIcon\">\r\n              <LockOutlinedIcon />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"authHeader\">Вход в аккаунт</h1>\r\n          {this.props.errorMessage ? (\r\n            <CSSAlert severity=\"error\">{this.props.errorMessage}</CSSAlert>\r\n          ) : null}\r\n          <AuthInput\r\n            key=\"email\"\r\n            id=\"email\"\r\n            label=\"Почта\"\r\n            name=\"email\"\r\n            error={emailError}\r\n            helperText={\r\n              emailError ? this.state.fieldValidationErrors.email : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.email}\r\n          />\r\n          <AuthInputPassword\r\n            key=\"password\"\r\n            id=\"password\"\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            error={passwordError}\r\n            helperText={\r\n              passwordError ? this.state.fieldValidationErrors.password : null\r\n            }\r\n            onChange={this.inputHandler}\r\n            value={this.state.password}\r\n          />\r\n          <AuthButton onClick={this.formSenderHandler}>\r\n            Войти в аккаунт\r\n          </AuthButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Использование Redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n    loading: state.loading,\r\n    errorMessage: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password) =>\r\n      dispatch(actions.auth(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport OutlayDetails from \"./containers/OutlayDetails/OutlayDetails\";\r\nimport IndicatorsInsert from \"./containers/IndicatorsInsert/IndicatorsInsert\";\r\nimport AuthForm from \"./containers/AuthForm/AuthForm\";\r\nimport Logout from \"./containers/AuthForm/Logout/Logout\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={AuthForm} />\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/outlay\" component={OutlayDetails} />\r\n          <Route path=\"/send-indicators\" component={IndicatorsInsert} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/send-indicators\" />\r\n        </Switch>\r\n      );\r\n    }\r\n    return <Layout isAuth={this.props.isAuth}>{routes}</Layout>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst authStart = (state) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  let errorMessage;\r\n  if (action.error === 401) {\r\n    errorMessage = \"Ошибка авторизации, проверьте данные и повторите попытку\";\r\n  } else {\r\n    errorMessage = \"Произошла ошибка, попробуйте повторите попытку позднее\";\r\n  }\r\n  return updateObject(state, {\r\n    error: errorMessage,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reduser;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport history from \"./store/history\";\r\nimport reducer from \"./store/reducers/auth\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <HashRouter history={history} basename={\"/\"}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}